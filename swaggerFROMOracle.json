{
    "swagger":"2.0",
    "info":{
        "title":"REST API for Documents",
        "version":"2023.11.27",
        "description":"<p>The REST API for Documents enables you to interact with folders and files stored in Oracle Content Management Cloud and to create sites from templates and other sites.</p>\n<p>Last updated: November 2023.</p>",
        "x-summary":"The REST API for Documents enables you to interact with folders and files stored in Oracle Content Management Cloud and to create sites from templates and other sites."
    },
    "schemes":[
        "https"
    ],
    "consumes":[
        "application/json",
        "application/xml"
    ],
    "produces":[
        "application/json",
        "application/xml"
    ],
    "paths":{
        "/documents/api/1.2/config/collaboration":{
            "get":{
                "summary":"Get Collaboration Configuration",
                "description":"<p>Retrieve Collaboration configurations.</p>",
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollaborationConfigurationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "cListURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn/web/cList",
                                "clientURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn",
                                "oAuthCListURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osnoauth/web/cList",
                                "oAuthClientURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osnoauth",
                                "restURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn/social/api/v1",
                                "serviceURL":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn"
                            }
                        }
                    }
                },
                "tags":[
                    "Configuration"
                ],
                "x-internal-id":"documents-api-1.2-config-collaboration-get",
                "x-filename-id":"documents-api-1.2-config-collaboration-get"
            }
        },
        "/documents/api/1.2/config/sites/deliverycdn":{
            "get":{
                "summary":"Get CDN Configuration",
                "description":"<p>Retrieve the Content Delivery Network URL.</p>",
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ContentDeliveryNetworkResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "items":[
                                    {
                                        "type":"config",
                                        "domain":"www.myContentDeliveryDomain.com",
                                        "description":"Content Delivery Site Description"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags":[
                    "Configuration"
                ],
                "x-internal-id":"documents-api-1.2-config-sites-deliverycdn-get",
                "x-filename-id":"documents-api-1.2-config-sites-deliverycdn-get"
            }
        },
        "/documents/api/1.2/config/notification/email":{
            "get":{
                "summary":"Get Email Notification Configuration",
                "description":"<p>Retrieve the email notification configuration for this service instance.</p>",
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/GetNotificationEmailResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "disableEmailNotifications":"false",
                                "type":"config"
                            }
                        }
                    }
                },
                "tags":[
                    "Configuration"
                ],
                "x-internal-id":"documents-api-1.2-config-notification-email-get",
                "x-filename-id":"documents-api-1.2-config-notification-email-get"
            },
            "put":{
                "summary":"Set Email Notification Configuration",
                "description":"<p>Update email notification configuration for this service instance. To update this configuration, you must log in as an administrator.</p>",
                "parameters":[
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of setting email notification in this service instance.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SetNotificationEmailRequest"
                        },
                        "x-examples":{
                            "application/json":{
                                "disableEmailNotifications":"true"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SetNotificationEmailResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "type":"config"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Input value is invalid or value requested did not change.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have Admin role.</p>"
                    }
                },
                "tags":[
                    "Configuration"
                ],
                "x-internal-id":"documents-api-1.2-config-notification-email-put",
                "x-filename-id":"documents-api-1.2-config-notification-email-put"
            }
        },
        "/documents/api/1.2/config/clientApplications":{
            "post":{
                "summary":"Create a Client Application",
                "description":"<p>Create a new custom actions client application. A single configuration file in JSON format containing one or more custom action definitions is required.</p><p> You must be an administrator to perform this operation.</p><p> The request is a multipart HTTP request where one part is a JSON object (<code>metadata</code>) with the attributes <code>name</code> , <code>isEnabled</code> and the other part is the content of the file itself (<code>file</code>).</p>",
                "parameters":[
                    {
                        "name":"file",
                        "in":"formData",
                        "description":"<p>File(JSON payload) to upload.</p><p>Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p>",
                        "type":"file",
                        "required":true
                    },
                    {
                        "name":"metadata",
                        "in":"formData",
                        "description":"<p>You can use this parameter to pass the input params <code>name</code> and <code>isEnabled</code> for the new client application.</p>Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p><p><b>The field <code>isEnabled</code> is optional. The default value for this field is <code>true</code></b></p><p>For example:</p><code>&#123;<p> &#34;name&#34;:&#32;&#32;&#32;&#32;&#34;testApp&#34;,</p><p> &#34;isEnabled&#34;:&#32;&#32;&#32;&#32;&#34;false&#34;</p>&#125;</code>",
                        "type":"string",
                        "required":true
                    }
                ],
                "consumes":[
                    "multipart/form-data"
                ],
                "responses":{
                    "201":{
                        "headers":{
                            "Location":{
                                "type":"string",
                                "description":"The URI for the newly created resource is in the <code>Location Header</code> field."
                            }
                        },
                        "description":"Created. The request was fulfilled and the new resource was created.",
                        "schema":{
                            "$ref":"#/definitions/PostClientApplicationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "createdTime":"2023-05-03T11:26:27Z",
                                "errorCode":"0",
                                "id":"7579B0A49C7A34960929793458C1B355",
                                "isEnabled":"false",
                                "modifiedTime":"2023-05-03T15:22:14Z",
                                "name":"testapp"
                            }
                        }
                    },
                    "409":{
                        "description":"<p>Client application with the given name already exist.</p>"
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-post",
                "x-filename-id":"documents-api-1.2-config-clientapplications-post"
            },
            "get":{
                "summary":"Get All Client Applications",
                "description":"<p>Get metadata of all the available custom actions client applications.</p><p> You must be an administrator to perform this operation.</p>",
                "parameters":[
                    {
                        "name":"links",
                        "in":"query",
                        "description":"<p>Indicate if links for the client applications should be returned in the response. The value <code>links=true</code> will return all available links for each client application. Any other value or not sending <code>links</code> will not return links.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/GetClientApplicationsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"3",
                                "errorCode":"0",
                                "hasMore":"0",
                                "items":[
                                    {
                                        "id":"FB07627B44FA7618F0B7260B09C370AD",
                                        "name":"testapp1",
                                        "isEnabled":"true",
                                        "createdTime":"2023-05-04T09:39:18Z",
                                        "modifiedTime":"2023-05-04T09:39:18Z"
                                    },
                                    {
                                        "id":"066EEB53393BAA5560ED3F0C99CF4A15",
                                        "name":"testapp2",
                                        "isEnabled":"false",
                                        "createdTime":"2023-05-04T09:39:31Z",
                                        "modifiedTime":"2023-05-04T09:39:31Z"
                                    },
                                    {
                                        "id":"28DEF2D4E07C5D45268EFD3A4175A36C",
                                        "name":"testapp3",
                                        "isEnabled":"true",
                                        "createdTime":"2023-05-04T09:39:45Z",
                                        "modifiedTime":"2023-05-04T09:39:45Z"
                                    }
                                ],
                                "limit":"100",
                                "offset":"0",
                                "totalResults":"3"
                            }
                        }
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-get",
                "x-filename-id":"documents-api-1.2-config-clientapplications-get"
            }
        },
        "/documents/api/1.2/config/clientApplications/{id}":{
            "get":{
                "summary":"Get a Client Application",
                "description":"<p>Get metadata for a specific custom actions client application.</p><p> You must be an administrator, to perform this operation.</p>",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the client application.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"links",
                        "in":"query",
                        "description":"<p>Indicate if links for the specified client application should be returned in the response. The value <code>links=true</code> will return all available links for the specified client application. Any other value or not sending <code>links</code> will not return links.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ClientApplicationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "createdTime":"2023-05-03T11:26:27Z",
                                "errorCode":"0",
                                "id":"7579B0A49C7A34960929793458C1B355",
                                "isEnabled":"true",
                                "modifiedTime":"2023-05-03T15:22:14Z",
                                "name":"testapp01"
                            }
                        }
                    },
                    "404":{
                        "description":"<p>Application ID is not found</p>"
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-{id}-get",
                "x-filename-id":"documents-api-1.2-config-clientapplications-id-get"
            },
            "put":{
                "summary":"Update a Client Application",
                "description":"<p>Update either or both of the following fields of an existing custom actions client application : <code>file</code> and <code>isEnabled</code> attribute of <code>metadata</code>. </p><p> You must be an administrator to perform this operation.</p><p>The request is a multipart HTTP request where one part is a JSON object (<code>metadata</code>) with the attribute <code>isEnabled</code> and the other part is the content of the file itself (<code>file</code>).</p>",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the client application.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"file",
                        "in":"formData",
                        "description":"<p>File(json payload) to upload.</p><p>Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p>",
                        "type":"file",
                        "required":true
                    },
                    {
                        "name":"metadata",
                        "in":"formData",
                        "description":"<p>You can use this parameter to update isEnabled flag value of an existing client application.</p>Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p><p>For example:</p><code>&#123;<p> &#34;isEnabled&#34;:&#32;&#32;&#32;&#32;&#34;true&#34;</p>&#125;",
                        "type":"string",
                        "required":true
                    }
                ],
                "consumes":[
                    "multipart/form-data"
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ClientApplicationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "createdTime":"2023-05-03T11:26:27Z",
                                "errorCode":"0",
                                "id":"7579B0A49C7A34960929793458C1B355",
                                "isEnabled":"true",
                                "modifiedTime":"2023-05-03T15:22:14Z",
                                "name":"testapp01"
                            }
                        }
                    },
                    "404":{
                        "description":"<p>Application ID is not found</p>"
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-{id}-put",
                "x-filename-id":"documents-api-1.2-config-clientapplications-id-put"
            },
            "delete":{
                "summary":"Delete a Client Application",
                "description":"<p>Delete the specified custom actions client application. You must be an administrator to perform this operation.</p>",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the client application</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/DeleteClientApplicationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"FB07627B44FA7618F0B7260B09C370AD",
                                "type":"clientApplication"
                            }
                        }
                    },
                    "404":{
                        "description":"<p>Application ID is not found</p>"
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-{id}-delete",
                "x-filename-id":"documents-api-1.2-config-clientapplications-id-delete"
            }
        },
        "/documents/api/1.2/config/clientApplications/{id}/data":{
            "get":{
                "summary":"Download a Client Application File",
                "description":"<p>Download the JSON Playload of an existing custom actions client application. You must be an administrator to perform this operation.</p><p><b>Note:</p><p>Range requests are not supported</p>",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the client application.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>Complete data stream of the file contents.</p>"
                    },
                    "404":{
                        "description":"<p>Application ID is not found.</p>"
                    }
                },
                "tags":[
                    "Client Applications"
                ],
                "x-internal-id":"documents-api-1.2-config-clientApplications-{id}-data-get",
                "x-filename-id":"documents-api-1.2-config-clientapplications-id-data-get"
            }
        },
        "/documents/api/1.2/sites/{siteId}/site":{
            "post":{
                "summary":"Create Site from Site",
                "description":"<p>Create a site from another site.</p>",
                "parameters":[
                    {
                        "name":"siteId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the source site.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>This parameter includes information such as the <code>name</code> parameter, which is the name of the site. Other parameters supported are <code>description</code> and <code>copyUpdates</code>.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SitesCreateBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "name":"Site Sample from Another Site",
                                "description":"Site created from an existing site",
                                "copyUpdates":"1"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SiteCreateResponse"
                        },
                        "examples":{
                            "application/json":{
                                "createdBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "createdTime":"2017-06-12T21:19:30Z",
                                "description":"Site created from an existing site",
                                "errorCode":"0",
                                "id":"F4FAEFCE084DD434A61B7CA9B5D17B95F47087F4E518",
                                "modifiedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "modifiedTime":"2017-06-12T21:19:30Z",
                                "name":"Site Sample from Another Site",
                                "ownedBy":{
                                    "id":"docadmin",
                                    "displayName":"Oracle Documents Administrator",
                                    "loginName":"docadmin",
                                    "type":"user"
                                },
                                "pseudoOwnedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "type":"site"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>User has insufficient privilege to access Site ID.</p>"
                    },
                    "404":{
                        "description":"<p>Site ID is not found.</p>"
                    },
                    "409":{
                        "description":"<p>Site name already exists.</p>"
                    }
                },
                "tags":[
                    "Sites"
                ],
                "x-internal-id":"documents-api-1.2-sites-{siteId}-site-post",
                "x-filename-id":"documents-api-1.2-sites-siteid-site-post"
            }
        },
        "/documents/api/1.2/templates/{templateId}/site":{
            "post":{
                "summary":"Create Site from Template",
                "description":"<p>Create a site from an existing template.</p>",
                "parameters":[
                    {
                        "name":"templateId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the source template.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>This parameter includes information such as the <code>name</code> parameter, which is the name of the site. Other parameters supported are <code>description</code> and <code>copyUpdates</code>.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SitesCreateFromTemplateBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "name":"Site Sample from Template",
                                "description":"Site created from an existing template",
                                "copyUpdates":"1"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SiteCreateFromTemplateResponse"
                        },
                        "examples":{
                            "application/json":{
                                "createdBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "createdTime":"2017-06-12T21:05:10Z",
                                "description":"Site created from an existing template",
                                "errorCode":"0",
                                "id":"F4FAEFCE084DD434A61B7CA9B5D17B95F47087F4E518",
                                "modifiedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "modifiedTime":"2017-06-12T21:05:10Z",
                                "name":"Site Sample from Template",
                                "ownedBy":{
                                    "id":"docadmin",
                                    "displayName":"Oracle Documents Administrator",
                                    "loginName":"docadmin",
                                    "type":"user"
                                },
                                "pseudoOwnedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "loginName":"UserAA",
                                    "type":"user"
                                },
                                "type":"site"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>User has insufficient privilege to access Template ID.</p>"
                    },
                    "404":{
                        "description":"<p>Template ID is not found.</p>"
                    },
                    "409":{
                        "description":"<p>Site name already exists.</p>"
                    }
                },
                "tags":[
                    "Templates"
                ],
                "x-internal-id":"documents-api-1.2-templates-{templateId}-site-post",
                "x-filename-id":"documents-api-1.2-templates-templateid-site-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/changeOwnership":{
            "post":{
                "summary":"Change Folder Ownership",
                "description":"<p>Change the ownership of a specified folder and gives the requester Manager access to the specified folder.<p><b>Note:</p><p>To change the ownership of a folder, the requester must have admin privileges for the folder. That is, the requester must be the owner or have the manager role.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder to change.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines details of the change ownership of the folder request. All parameters are required.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderChangeOwnershipBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "targetUserID":"cecsadminb"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderChangeOwnershipResponse"
                        },
                        "examples":{
                            "application/json":{
                                "targetUserID":"cecsadminb",
                                "id":"FC6FB38E75C284E70934F6221B1E5B8F7FDF5701EE84",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-changeOwnership-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-changeownership-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/_bulkCreate":{
            "post":{
                "summary":"Bulk Create Folders",
                "description":"<p>Requests bulk creation of folders under a single parent folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. It is the parent folder for all sub-folders created in this request. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the sub-folders to be created.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderBulkCreateBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "folders":[
                                    {
                                        "name":"folder 1",
                                        "description":"folder 1 description"
                                    },
                                    {
                                        "name":"folder 2",
                                        "description":"folder 2 description"
                                    },
                                    {
                                        "name":"folder 3",
                                        "description":"folder 3 description"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name":"links",
                        "in":"query",
                        "description":"<p>Indicate if links for the created folders should be returned in the response. The value <code>links=true</code> will return all available links for each created folder. Any other value or not sending <code>links</code> will not return links.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the bulk folder creation results.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderBulkCreateResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":0,
                                "items":[
                                    {
                                        "id":"F31BB7F92F167752A3AB5EAC47440630DCC4D63610C1",
                                        "type":"folder",
                                        "name":"folder 1",
                                        "description":"folder 1 description",
                                        "parentID":"F1564DFB2D7C7FBE8EE7A38CACF5DA9752E1734D9F36",
                                        "createdTime":"2021-03-11T21:32:45Z",
                                        "modifiedTime":"2021-03-11T21:32:45Z",
                                        "childItemsCount":"0",
                                        "childFolderCount":"0",
                                        "childFileCount":"0",
                                        "size":"0",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "id":"F29815ADE851DA3F9A07D6EA85BD0AE9B8B03D7D2718",
                                        "type":"folder",
                                        "name":"folder 2",
                                        "description":"folder 2 description",
                                        "parentID":"F1564DFB2D7C7FBE8EE7A38CACF5DA9752E1734D9F36",
                                        "createdTime":"2021-03-11T21:32:45Z",
                                        "modifiedTime":"2021-03-11T21:32:45Z",
                                        "childItemsCount":"0",
                                        "childFolderCount":"0",
                                        "childFileCount":"0",
                                        "size":"0",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "id":"F1275FD876ED265557E8B6D45C09A67B319C4BA8294A",
                                        "type":"folder",
                                        "name":"folder 3",
                                        "description":"folder 3 description",
                                        "parentID":"F1564DFB2D7C7FBE8EE7A38CACF5DA9752E1734D9F36",
                                        "createdTime":"2021-03-11T21:32:45Z",
                                        "modifiedTime":"2021-03-11T21:32:45Z",
                                        "childItemsCount":"0",
                                        "childFolderCount":"0",
                                        "childFileCount":"0",
                                        "size":"0",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "loginName":"userAALoginName",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-_bulkCreate-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-_bulkcreate-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/_download":{
            "post":{
                "summary":"Bulk Download Folders and Files",
                "description":"<p>Requests a bulk download of the specified globally unique identifiers (GUIDs) of the files under the specified folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>. This files in the zip must all be children of this folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the files to be zipped.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderCreateBulkZipBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "idList":"D890E0ADF2EB12AAD28D14372E82C5967A21F51BF794,FE27E70CA140E819250B4D365F48D86BC9097E77B3EE,DC9AEA3E7F3AA1C07FCE4E46B7AC2B4F52F010D5A813"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the zip build job.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCreateBulkZipResponse"
                        },
                        "examples":{
                            "application/json":{
                                "Location":"OCEHost/documents/api/1.2/folders/FE7DA518D17AA5E46E282D9A1B02AE3398E71823807D/_download/EF45E5E0A9F169D61CA387968719F5AA1614798736483",
                                "errorCode":0,
                                "id":"fFolderGUID:FE7DA518D17AA5E46E282D9A1B02AE3398E71823807D",
                                "idList":"fFileGUID:D890E0ADF2EB12AAD28D14372E82C5967A21F51BF794,fFolderGUID:FE27E70CA140E819250B4D365F48D86BC9097E77B3EE,fFileGUID:DC9AEA3E7F3AA1C07FCE4E46B7AC2B4F52F010D5A813",
                                "parentID":"FE7DA518D17AA5E46E282D9A1B02AE3398E71823807D,",
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-_download-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-_download-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/_download/{jobId}":{
            "get":{
                "summary":"Get Status of a Bulk Download Job",
                "description":"<p>Returns the status of a bulk download job.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jobId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the bulk download job.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderStatusBulkZipResponse"
                        },
                        "examples":{
                            "application/json":{
                                "completed":true,
                                "completedPercentage":100,
                                "details":{
                                    "filename":"OCE-20210303.zip",
                                    "filesize":27811
                                },
                                "errorCode":0,
                                "links":{
                                    "href":"OCEHost/documents/api/1.2/folders/FE7DA518D17AA5E46E282D9A1B02AE3398E71823807D/_download/43C4798AB49E496B53A27D99F3CE768F1614800841210/package",
                                    "rel":"enclosure",
                                    "method":"GET",
                                    "mediaType":"application/zip"
                                },
                                "progress":"SUCCEEDED",
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-_download-{jobId}-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-_download-jobid-get"
            },
            "delete":{
                "summary":"Abort a Bulk Download Job",
                "description":"<p>Abort a bulk download job.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jobId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the bulk download job.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The job was aborted.</p>",
                        "examples":{
                            "application/json":{
                                "errorCode":0,
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-_download-{jobId}-delete",
                "x-filename-id":"documents-api-1.2-folders-folderid-_download-jobid-delete"
            }
        },
        "/documents/api/1.2/folders/{folderId}/_download/{jobId}/package":{
            "get":{
                "summary":"Download a Bulk Download Job File",
                "description":"<p>Download a bulk download zip.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jobId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the bulk download job.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"Range",
                        "in":"header",
                        "description":"<p>The standard HTTP <code>Range</code>  header allows clients to stream parts of the file rather than the entire file. The value of the <code>Range</code> header can be one of the following formats: <ul><li>bytes=<i>startByte</i> - <i>endByte</i></br> For example to receive the first 500 bytes use <code>bytes=0-500</code><li>bytes=<i>skipBytes</i>-</br>For example to skip the first 500 bytes use <code>bytes=500-</code></li><li>bytes=-<i>lastBytes</i></br>For example to receive the last 500 bytes use <code>bytes=-500</code</li></ul> </p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/zip"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Complete data stream of the file contents.</p>"
                    },
                    "206":{
                        "description":"<p>Partial data stream of the file contents.</p>"
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "416":{
                        "description":"<p>Requested range cannot be satisfied.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-_download-{jobId}-package-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-_download-jobid-package-get"
            }
        },
        "/documents/api/1.2/folders/{folderId}":{
            "get":{
                "summary":"Get Folder",
                "description":"<p>Get folder information for the specified folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the specific folder.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderResponseWithConversation"
                        },
                        "examples":{
                            "application/json":{
                                "childItemsCount":"2",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "loginName":"userAALoginName",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "type":"user"
                                },
                                "createdTime":"2014-02-21T20:52:37Z",
                                "errorCode":"0",
                                "id":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "loginName":"userAALoginName",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "type":"user"
                                },
                                "modifiedTime":"2014-02-21T20:52:37Z",
                                "name":"foldera",
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "loginName":"userAALoginName",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "type":"user"
                                }
                            },
                            "parentID":"self",
                            "size":"39",
                            "type":"folder"
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-get"
            },
            "post":{
                "summary":"Create Folder",
                "description":"<p>Create a new subfolder in the specified destination folder.</p><p><b>Note:</b><p>Two folders cannot have the same name in a given folder. Folder names are not case-sensitive; that is, <code>Folder_Name</code> and <code>folder_name</code> are considered identical. If a folder with the same name exists in the target destination, the name of the new folder is given a numeric increment. For example, if the folder <code>my_folder</code> already exists, the new folder is named <code>my_folder(2)</code>.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create folder request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderCreateBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "name":"restFolder",
                                "description":"rest folder"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "201":{
                        "description":"<p>The response body contains information about the newly created folder.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "parentID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "name":"restFolder",
                                "description":"rest folder",
                                "type":"folder",
                                "size":"0",
                                "childItemsCount":"0",
                                "createdTime":"2014-02-21T20:56:07Z",
                                "modifiedTime":"2014-02-21T20:59:57Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have write permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-post"
            },
            "put":{
                "summary":"Edit Folder",
                "description":"<p>Change the name or the description of the specified folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit folder request. There are no required attributes.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/FolderEditBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "name":"backup",
                                "description":"my backup folder"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"F512DA3911603E8AB84A07ACT0000000000100000001",
                                "parentID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "name":"backup",
                                "description":"my backup folder",
                                "type":"folder",
                                "size":"0",
                                "childItemsCount":"0",
                                "createdTime":"2014-02-21T20:56:07Z",
                                "modifiedTime":"2014-02-21T20:59:57Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have write permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-put",
                "x-filename-id":"documents-api-1.2-folders-folderid-put"
            },
            "delete":{
                "summary":"Delete Folder",
                "description":"<p>Delete the specified folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderDeleteResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F01C3C4622C7031AD5B69F19T0000000000100000001",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-delete",
                "x-filename-id":"documents-api-1.2-folders-folderid-delete"
            }
        },
        "/documents/api/1.2/folders/{folderId}/copy":{
            "post":{
                "summary":"Copy Folder",
                "description":"<p>Copy a specified folder and its contents to a specified destination folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the copy folder request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderCopyBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "destinationID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCopyResponse"
                        },
                        "examples":{
                            "application/json":{
                                "destinationID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "id":"FCD4D4A73FA2317583B7C3BFT0000000000100000001",
                                "idList":"F512DA3911603E8AB84A07ACT0000000000100000001",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-copy-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-copy-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/move":{
            "post":{
                "summary":"Move Folder",
                "description":"<p>Move a specified folder and its contents to a specified destination folder. The moved folder retains its globally unique identifier and all date and ownership information.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines details of the move folder request. <b>Bold</b> indicates a required value.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderMoveBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "destinationID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderMoveResponse"
                        },
                        "examples":{
                            "application/json":{
                                "destinationID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "idList":"F512DA3911603E8AB84A07ACT0000000000100000001",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-move-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-move-post"
            }
        },
        "/documents/api/1.2/folders/items":{
            "get":{
                "summary":"Get Home Folder Contents",
                "description":"<p>Get a collection of all items (folders and files) that the user has access to, including folders that others have shared with that user. The <code>type</code> field indicates whether an item is a folder or a file.</p>",
                "parameters":[
                    {
                        "name":"orderby",
                        "in":"query",
                        "description":"<p>Order the resulting items using the specified field and sort order. You can use the <code>name</code>, <code>createdTime</code>, and <code>modifiedTime</code> fields, and a sort order of ascending (<code>asc</code>) or descending (<code>desc</code>). For example, this is the default: <pre>orderby=name:asc</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"<p>Specify the maximum number of items to return. Use this parameter to specify how many items to include on a single page of results. The default is <code>50</code> and maximum is <code>10000</code>. The following example limits the number of returned items to 10: <pre>limit=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"<p>Specify the point at which to begin the list of items from the complete set of items returned for the action. If you do not specify an offset, the returned items begin with the first item in the item list (<code>offset=0</code>).</p> <p>Use this parameter to specify the starting point for a given page of results from the complete set of returned items. The following example limits the number of items per page to 10 and displays the second page of results (items 11-20):<pre>limit=10&offset=10</pre></p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/HomeFolderContents"
                        },
                        "examples":{
                            "application/json":{
                                "count":"3",
                                "totalResults":"3",
                                "ownerFolderID":"self",
                                "hasMore":"0",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "id":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                        "parentID":"self",
                                        "name":"foldera",
                                        "type":"folder",
                                        "size":"39",
                                        "childItemsCount":"2",
                                        "createdTime":"2014-02-21T20:52:37Z",
                                        "modifiedTime":"2014-02-21T20:52:37Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "id":"F4A669A2B7B69F2376C640A9T0000000000100000001",
                                        "parentID":"self",
                                        "name":"folderb",
                                        "type":"folder",
                                        "size":"0",
                                        "childItemsCount":"0",
                                        "createdTime":"2014-02-21T21:38:44Z",
                                        "modifiedTime":"2014-02-21T21:38:44Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "id":"DBFDB0B6543FB5B68107423AT0000000000100000001",
                                        "parentID":"self",
                                        "name":"test cases.txt",
                                        "type":"file",
                                        "size":"37786",
                                        "version":"1",
                                        "createdTime":"2014-02-21T21:38:52Z",
                                        "modifiedTime":"2014-02-21T21:38:52Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-items-get",
                "x-filename-id":"documents-api-1.2-folders-items-get"
            }
        },
        "/documents/api/1.2/folders/{folderId}/items":{
            "get":{
                "summary":"Get Specific Folder Contents",
                "description":"<p>Get a collection of child items (folders and files) in the specified folder. The <code>type</code> field indicates whether an item is a folder or a file.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"filterName",
                        "in":"query",
                        "description":"<p>Filter the results to only those folders and files whose name matches the specified string exactly. If there is no exact match, the call returns an empty list. For example, the following parameter restricts the response to folders (or files) named <code>TestFolder</code>: <pre>filterName=TestFolder</pre></p><p>The filter changes the behavior of the following response parameters:<ul><li>count: The number of items that match the <code>filterName</code> parameter.</li><li>totalResults: The number of items that match the <code>filterName</code> parameter.</li></ul></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"orderby",
                        "in":"query",
                        "description":"<p>Order the resulting items using the specified field and sort order. You can use the <code>name</code>, <code>createdTime</code>, and <code>modifiedTime</code> fields, and a sort order of ascending (<code>asc</code>) or descending (<code>desc</code>). For example, this is the default: <pre>orderby=name:asc</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"<p>Specify the maximum number of items to return. Use this parameter to specify how many items to include on a single page of results. The default is <code>50</code> and maximum is <code>10000</code>. The following example limits the number of returned items to 10: <pre>limit=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"<p>Specify the point at which to begin the list of items from the complete set of items returned for the action. If you do not specify an offset, the returned items begin with the first item in the item list (<code>offset=0</code>).</p> <p>Use this parameter to specify the starting point for a given page of results from the complete set of returned items. The following example limits the number of items per page to 10 and displays the second page of results (items 11-20):<pre>limit=10&offset=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SpecificFolderContents"
                        },
                        "examples":{
                            "application/json":{
                                "count":"2",
                                "totalResults":"2",
                                "hasMore":"0",
                                "errorCode":"0",
                                "id":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "parentID":"self",
                                "name":"foldera",
                                "description":"rest folder",
                                "type":"folder",
                                "size":"39",
                                "childItemsCount":"2",
                                "createdTime":"2014-02-21T20:52:37Z",
                                "modifiedTime":"2014-02-21T20:52:37Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "items":[
                                    {
                                        "id":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                        "parentID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                        "name":"restFolder",
                                        "type":"folder",
                                        "size":"39",
                                        "childItemsCount":"1",
                                        "createdTime":"2014-02-21T20:54:50Z",
                                        "modifiedTime":"2014-02-21T20:54:50Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "id":"DB1C5AF480FFE61C588027A8T0000000000100000001",
                                        "parentID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                        "name":"example.txt",
                                        "type":"file",
                                        "size":"13",
                                        "version":"1",
                                        "createdTime":"2014-02-21T21:32:37Z",
                                        "modifiedTime":"2014-02-21T21:32:37Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-items-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-items-get"
            }
        },
        "/documents/api/1.2/folders/search/items":{
            "get":{
                "summary":"Search Folders or Files",
                "description":"Search for a folder or file by <code>fulltext</code> or <code>querytext</code> in the user&#39;s home directory. This will search the entire directory tree under the home directory. This will also search shared folders. The search has a limit of 10000 items (folders and files).",
                "parameters":[
                    {
                        "name":"fulltext",
                        "in":"query",
                        "description":"<p>Search string used to match folders or files. It will search these locations: <code>itemName</code>, <code>contents</code>, <code>extension</code>, <code>ownerName</code>, <code>lastModifiedName</code>, and <code>folderDescription</code>.</p><p>Either <code>fulltext</code> or <code>querytext</code> must be provided in the search API.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"querytext",
                        "in":"query",
                        "description":"<p>Search string used to search for folders or files using the targets listed below. It can replace <code>fulltext</code>, taking advantage of multiple targets at the same time.</p><p>Either the <code>fulltext</code> or <code>querytext</code> parameter must be provided in the search API.</p> <p>The <code>querytext</code> parameter can target searches against the following string fields or number field. The search query is in the form:</p> <pre>searchField&ltoperation&gtsearchValue</pre> <p>Multiple searches can be combined with &ltAND&gt and &ltOR&GT. Searches are not case-sensitive.</p></br>The following string fields are supported:\n<ul> <li>xTags: search for tags</li> <li>fItemType: search by item type, either <code>File</code> to return only file items or <code>Folder</code> to return only folder items.</li> <li>fItemName: search for an item's name.</br>In the response this is the <code>name</code> field.</li> <li>fCreator: search by the ID of the item's creator.<br/>In the response this is the <code>createdBy.id</code> field.</li> <li>fCreatorFullName: search by the full display name of the item's creator. <br/>In the response this is the <code>createdBy.displayName</code> field.</li> <li>fCreatorLoginName: search by the login name of the item's creator. <br/>In the response this is the <code>createdBy.loginName</code> field.</li> <li>fOwner: search by the ID of the item's owner. <br/>In the response this is the <code>ownedBy.id</code> field.</li> <li>fOwnerFullName: search by the full display name of the item's owner.<br/>In the response this is the <code>ownedBy.displayName</code> field.</li> <li>fOwnerLoginName: search by the login name of the item's owner.<br/>In the response this is the <code>ownedBy.loginName</code> field.</li> <li>fLastModifier: search by the ID of the user to last modify the item. <br/>In the response this is the <code>modifiedBy.id</code> field.</li> <li>fLastModifierFullName: search by the full display name of the user to last modify the item.<br/>In the response this is the <code>modifiedBy.displayName</code> field.</li> <li>fLastModifierLoginName: search by the login name of the user to last modify the item. <br/>In the response this is the <code>modifiedBy.loginName</code> field.</li> <li>Searchable metadata fields can also be searched as string search targets, but metadata field values are not returned by the search. When you search by metadata fields, the target is <code>MetadataCollectionName.metadataFieldName</code>. For more information about metadata, see <a href='api-metadata-collection.html'>Metadata Collection REST Endpoints</a></li></ul> <p>The string search supports <code>&ltCONTAINS&gt</code> and <code>&ltMATCHES&gt</code> operations. <ul> <li><code>&ltCONTAINS&gt</code> operator instructs search to look for text fields being searched to contain specified \"words\". The words must be separated by tokens like whitespace\nand periods.</li><li><code>&ltMATCHES&gt</code> operator instructs search to look for an exact (albeit, case-insensitive) match of the field value, including whitespaces and periods.</li></ul></p></br>\n The following date fields are supported:\n <ul> <li>fCreateDate: search by the created timestamp. Should be in the <code>yyyy-mm-ddThh:mm:ssZ</code> format, e.g. <code>2020-03-25T10:10:10Z</code>. <br/>In the response this is the <code>createdTime</code> field.</li> <li>fLastModifiedDate: search by the last modified timestamp. Should be in the <code>yyyy-mm-ddThh:mm:ssZ</code> format, e.g. <code>2020-03-25T10:10:10Z</code>. <br/>In the response this is the <code>modifiedTime</code> field.</li> <li>Searchable metadata fields can also be searched as date search targets, but metadata field values are not returned by the search. When you search by metadata fields, the target is <code>MetadataCollectionName.metadataFieldName</code>. For more information about metadata, see <a href='api-metadata-collection.html'>Metadata Collection REST Endpoints</a></li></ul> <br/>\nThe following number field is supported:\n <ul><li>dSize: search by the size in bytes of an item.</li></ul> </p> <p> The number and date search targets support the following operations.\n <ul>\n <li> Use &lt to search for values less that the search value.</li>\n <li> Use = to search for values equal to the search value.</li>\n <li> Use &gt to search for values greater than the search value.</li>\n <li> Use &lt= to search for values less than or equal to the search value.</li>\n <li> Use &gt= to search for values greater than or equal to the search value.</li>\n</ul>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"orderby",
                        "in":"query",
                        "description":"<p>Order the resulting items using the specified field and sort order. You can use the <code>name</code>, <code>size</code>, <code>lastModifiedName</code>, and <code>lastModifiedDate</code> fields, and a sort order of ascending (<code>asc</code>) or descending (<code>desc</code>). For example, this is the default: <pre>orderby=name:asc</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"<p>Specify the maximum number of items to return. Use this parameter to specify how many items to include on a single page of results. The default is <code>20</code> and maximum is <code>10000</code>. The following example limits the number of returned items to 10: <pre>limit=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"<p>Specify the point at which to begin the list of items from the complete set of items returned for the action. If you do not specify an offset, the returned items begin with the first item in the item list (<code>offset=0</code>).</p> <p>Use this parameter to specify the starting point for a given page of results from the complete set of returned items. The following example limits the number of items per page to 10 and displays the second page of results (items 11-20):<pre>limit=10&offset=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"fields",
                        "in":"query",
                        "description":"<p>Specify the additional fields to be returned. Currently, the only value supported is <code>metadata</code>, which would result in metadata associated with items returned by the search results being added to the response. The default is not to return metadata in the search results. In order to have metadata returned, use <pre>fields=metadata</pre></p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SearchFolderContents"
                        },
                        "examples":{
                            "application/json":{
                                "count":"2",
                                "errorCode":"0",
                                "offset":"1",
                                "totalCount":"3",
                                "items":[
                                    {
                                        "type":"folder",
                                        "id":"FF4321BD2656077C897A0E701212FF6185DE5A6F9E67",
                                        "name":"three",
                                        "parentID":"self",
                                        "createdTime":"2015-12-09T20:51:53Z",
                                        "modifiedTime":"2015-12-09T20:51:53Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "metadata":{
                                            "items":[
                                                {
                                                    "name":"MyMetaCollection",
                                                    "fields":{
                                                        "items":[
                                                            {
                                                                "name":"IntField",
                                                                "type":"integer",
                                                                "value":"12345"
                                                            },
                                                            {
                                                                "name":"DateField",
                                                                "type":"date",
                                                                "value":"2023-02-20T12:00:00.000Z"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name":"dDefaultFolderMetaCollection",
                                                    "fields":{
                                                        "items":[
                                                            {
                                                                "name":"xTags",
                                                                "type":"string",
                                                                "value":"FixMe"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "size":"-1"
                                    },
                                    {
                                        "type":"file",
                                        "id":"DB4C832D0F144C0DD6310F451212FF6185DE5A6F9E67",
                                        "name":"textData13.txt",
                                        "parentID":"F9363F588099E137C5B2939E1212FF6185DE5A6F9E67",
                                        "createdTime":"2015-12-07T23:19:13Z",
                                        "modifiedTime":"2015-12-07T23:19:13Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "metadata":{
                                            "items":[
                                            ]
                                        },
                                        "size":"38",
                                        "version":"1"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-search-items-get",
                "x-filename-id":"documents-api-1.2-folders-search-items-get"
            }
        },
        "/documents/api/1.2/folders/{folderId}/search/items":{
            "get":{
                "summary":"Search Folders or Files Under Specific Folder ID",
                "description":"Search for a folder or file by <code>fulltext</code> or <code>querytext</code> in the specific folder ID or the <code>self</code> folder directory. This will search the entire directory tree under the specific folder ID or the <code>self</code> folder directory. This will also search shared folders. The search has a limit of 10000 items (folders and files).",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"fulltext",
                        "in":"query",
                        "description":"<p>Search string used to match folders or files. It will search these locations: <code>itemName</code>, <code>contents</code>, <code>extension</code>, <code>ownerName</code>, <code>lastModifiedName</code>, and <code>folderDescription</code>.</p><p>Either <code>fulltext</code> or <code>querytext</code> must be provided in the search API.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"querytext",
                        "in":"query",
                        "description":"<p>Search string used to search for folders or files using the targets listed below. It can replace <code>fulltext</code>, taking advantage of multiple targets at the same time.</p><p>Either the <code>fulltext</code> or <code>querytext</code> parameter must be provided in the search API.</p> <p>The <code>querytext</code> parameter can target searches against the following string fields or number field. The search query is in the form:</p> <pre>searchField&ltoperation&gtsearchValue</pre> <p>Multiple searches can be combined with &ltAND&gt and &ltOR&GT. Searches are not case-sensitive.</p></br>The following string fields are supported:\n<ul> <li>xTags: search for tags</li> <li>fItemType: search by item type, either <code>File</code> to return only file items or <code>Folder</code> to return only folder items.</li> <li>fItemName: search for an item's name.</br>In the response this is the <code>name</code> field.</li> <li>fCreator: search by the ID of the item's creator.<br/>In the response this is the <code>createdBy.id</code> field.</li> <li>fCreatorFullName: search by the full display name of the item's creator. <br/>In the response this is the <code>createdBy.displayName</code> field.</li> <li>fCreatorLoginName: search by the login name of the item's creator. <br/>In the response this is the <code>createdBy.loginName</code> field.</li> <li>fOwner: search by the ID of the item's owner. <br/>In the response this is the <code>ownedBy.id</code> field.</li> <li>fOwnerFullName: search by the full display name of the item's owner.<br/>In the response this is the <code>ownedBy.displayName</code> field.</li> <li>fOwnerLoginName: search by the login name of the item's owner.<br/>In the response this is the <code>ownedBy.loginName</code> field.</li> <li>fLastModifier: search by the ID of the user to last modify the item. <br/>In the response this is the <code>modifiedBy.id</code> field.</li> <li>fLastModifierFullName: search by the full display name of the user to last modify the item.<br/>In the response this is the <code>modifiedBy.displayName</code> field.</li> <li>fLastModifierLoginName: search by the login name of the user to last modify the item. <br/>In the response this is the <code>modifiedBy.loginName</code> field.</li> <li>Searchable metadata fields can also be searched as string search targets, but metadata field values are not returned by the search. When you search by metadata fields, the target is <code>MetadataCollectionName.metadataFieldName</code>. For more information about metadata, see <a href='api-metadata-collection.html'>Metadata Collection REST Endpoints</a></li></ul> <p>The string search supports <code>&ltCONTAINS&gt</code> and <code>&ltMATCHES&gt</code> operations. <ul> <li><code>&ltCONTAINS&gt</code> operator instructs search to look for text fields being searched to contain specified \"words\". The words must be separated by tokens like whitespace\nand periods.</li><li><code>&ltMATCHES&gt</code> operator instructs search to look for an exact (albeit, case-insensitive) match of the field value, including whitespaces and periods.</li></ul></p></br>\n The following date fields are supported:\n <ul> <li>fCreateDate: search by the created timestamp. Should be in the <code>yyyy-mm-ddThh:mm:ssZ</code> format, e.g. <code>2020-03-25T10:10:10Z</code>. <br/>In the response this is the <code>createdTime</code> field.</li> <li>fLastModifiedDate: search by the last modified timestamp. Should be in the <code>yyyy-mm-ddThh:mm:ssZ</code> format, e.g. <code>2020-03-25T10:10:10Z</code>. <br/>In the response this is the <code>modifiedTime</code> field.</li> <li>Searchable metadata fields can also be searched as date search targets, but metadata field values are not returned by the search. When you search by metadata fields, the target is <code>MetadataCollectionName.metadataFieldName</code>. For more information about metadata, see <a href='api-metadata-collection.html'>Metadata Collection REST Endpoints</a></li></ul> <br/>\nThe following number field is supported:\n <ul><li>dSize: search by the size in bytes of an item.</li></ul> </p> <p> The number and date search targets support the following operations.\n <ul>\n <li> Use &lt to search for values less that the search value.</li>\n <li> Use = to search for values equal to the search value.</li>\n <li> Use &gt to search for values greater than the search value.</li>\n <li> Use &lt= to search for values less than or equal to the search value.</li>\n <li> Use &gt= to search for values greater than or equal to the search value.</li>\n</ul>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"orderby",
                        "in":"query",
                        "description":"<p>Order the resulting items using the specified field and sort order. You can use the <code>name</code>, <code>size</code>, <code>lastModifiedName</code>, and <code>lastModifiedDate</code> fields, and a sort order of ascending (<code>asc</code>) or descending (<code>desc</code>). For example, this is the default: <pre>orderby=name:asc</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"<p>Specify the maximum number of items to return. Use this parameter to specify how many items to include on a single page of results. The default is <code>20</code> and maximum is <code>10000</code>. The following example limits the number of returned items to 10: <pre>limit=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"<p>Specify the point at which to begin the list of items from the complete set of items returned for the action. If you do not specify an offset, the returned items begin with the first item in the item list (<code>offset=0</code>).</p> <p>Use this parameter to specify the starting point for a given page of results from the complete set of returned items. The following example limits the number of items per page to 10 and displays the second page of results (items 11-20):<pre>limit=10&offset=10</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"fields",
                        "in":"query",
                        "description":"<p>Specify the additional fields to be returned. Currently, the only value supported is <code>metadata</code>, which would result in metadata associated with items returned by the search results being added to the response. The default is not to return metadata in the search results. In order to have metadata returned, use <pre>fields=metadata</pre></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SearchSpecificFolderContents"
                        },
                        "examples":{
                            "application/json":{
                                "count":"2",
                                "errorCode":"0",
                                "offset":"1",
                                "totalCount":"2",
                                "items":[
                                    {
                                        "type":"file",
                                        "id":"DB4C832D0F144C0DD6310F451212FF6185DE5A6F9E67",
                                        "name":"textData13.txt",
                                        "parentID":"F9363F588099E137C5B2939E1212FF6185DE5A6F9E67",
                                        "createdTime":"2015-12-07T23:19:13Z",
                                        "modifiedTime":"2015-12-07T23:19:13Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "metadata":{
                                            "items":[
                                                {
                                                    "name":"MyMetaCollection",
                                                    "fields":{
                                                        "items":[
                                                            {
                                                                "name":"IntField",
                                                                "type":"integer",
                                                                "value":"246"
                                                            },
                                                            {
                                                                "name":"DateField",
                                                                "type":"date",
                                                                "value":"2019-02-22T17:03:00.000Z"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "size":"38",
                                        "version":"1"
                                    },
                                    {
                                        "type":"file",
                                        "id":"D242D99558418023F547247DB5D17B95F470BB4C11B8",
                                        "name":"textData15.txt",
                                        "parentID":"F9363F588099E137C5B2939E1212FF6185DE5A6F9E67",
                                        "createdTime":"2015-12-09T20:51:53Z",
                                        "modifiedTime":"2015-12-09T20:51:53Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "metadata":{
                                            "items":[
                                            ]
                                        },
                                        "size":"50"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-search-items-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-search-items-get"
            }
        },
        "/documents/api/1.2/folders/lists":{
            "get":{
                "summary":"Get Information on Multiple Folders",
                "description":"<p>Get folder information for a list of folders.</p>",
                "parameters":[
                    {
                        "name":"idList",
                        "in":"query",
                        "description":"<p>A comma-separated list of globally unique identifiers (GUIDs) for folders. To reference the user&#39;s home folder,  the value for <code>idList</code> can include <code>self</code>. There is a limit of 100 folder IDs</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"checkStatus",
                        "in":"query",
                        "description":"<p>Parameter used to check the current status of any identifier listed in <code>idList</code>. Any missing identifier or any identifier in trash listed in <code>idList</code> will cause this API to return error. If <code>checkStatus=1</code>, API will report if items are missing (<code>missing</code>) or if items are in trash (<code>inTrash</code>) or if items exist (<code>exists</code>) instead of returning error. If <code>checkStatus=0</code> or not specified at all, the current API behavior remains the same.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the specific folders.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderListResponseWithConversation"
                        },
                        "examples":{
                            "basicExample":{
                                "errorCode":"0",
                                "items":[
                                    {
                                        "type":"folder",
                                        "childFileCount":"6",
                                        "childFolderCount":"1",
                                        "createdTime":"2017-06-09T15:21:32Z",
                                        "createdBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "id":"F7A9B089812185D3178AED0845B3E9DD6490EDC3EE22",
                                        "name":"f1",
                                        "size":"437207",
                                        "modifiedTime":"2017-06-09T15:21:32Z",
                                        "modifiedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "parentID":"self",
                                        "childItemsCount":"7"
                                    }
                                ]
                            },
                            "checkStatusExample":{
                                "errorCode":"0",
                                "items":[
                                    {
                                        "type":"folder",
                                        "id":"F7A9B089812185D3178AED0845B3E9DD6490EDC3EE22",
                                        "status":"inTrash"
                                    },
                                    {
                                        "type":"folder",
                                        "id":"ABC123",
                                        "status":"missing"
                                    },
                                    {
                                        "type":"folder",
                                        "childFileCount":"6",
                                        "childFolderCount":"1",
                                        "status":"exists",
                                        "createdTime":"2017-06-09T15:21:32Z",
                                        "createdBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "id":"F7A9B089812185D3178AED0845B3E9DD6490EDC3EE22",
                                        "name":"f1",
                                        "size":"437207",
                                        "modifiedTime":"2017-06-09T15:21:32Z",
                                        "modifiedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"UserAA",
                                            "type":"user"
                                        },
                                        "parentID":"self",
                                        "childItemsCount":"7"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The <code>idList</code> parameter is missing or has more than 100 file IDs.</p>"
                    },
                    "403":{
                        "description":"<p>The user does not have access to one or more of the folder IDs.</p>"
                    },
                    "404":{
                        "description":"<p>One or more of the folder IDs do not exist.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-lists-get",
                "x-filename-id":"documents-api-1.2-folders-lists-get"
            }
        },
        "/documents/api/1.2/folders/{folderId}/tags":{
            "get":{
                "summary":"Get Folder Tags",
                "description":"Get tags assigned to a particular folder.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just directly assigned tags should be retrieved (<code>1</code>) or if all inherited tags should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderGetTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"FD3947BCFB3D3517CC7E6312B5D17B95F47087F4E518",
                                "tags":"todo,pending",
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-tags-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-tags-get"
            },
            "post":{
                "summary":"Set Folder Tags",
                "description":"<p>Set all tags values to a particular folder. This API will set tags and it will also replace any previously set values. In case replacing tag values is not the desired result, see the Edit Folder Tags API.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the set tags values request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderSetTagsBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "setTags":"todo,pending"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderSetTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"FD3947BCFB3D3517CC7E6312B5D17B95F47087F4E518",
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-tags-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-tags-post"
            },
            "put":{
                "summary":"Edit Folder Tags",
                "description":"<p>Edit tag values assigned to a particular folder. This API adds new tags without replacing existing ones or removes specific tags, or both.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit tags values request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderEditTagsBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "addTags":"newTagValue",
                                "removeTags":"existingTagValue"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderEditTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"FD3947BCFB3D3517CC7E6312B5D17B95F47087F4E518",
                                "type":"folder"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-tags-put",
                "x-filename-id":"documents-api-1.2-folders-folderid-tags-put"
            },
            "delete":{
                "summary":"Delete All Folder Tags",
                "description":"<p>Delete all tags directly assigned to this folder. It is important to observe that inherited tags will not be deleted and, therefore, they will still be retrieved by the Get Folder Tags API.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderDeleteTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"FD3947BCFB3D3517CC7E6312B5D17B95F47087F4E518",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-tags-delete",
                "x-filename-id":"documents-api-1.2-folders-folderid-tags-delete"
            }
        },
        "/documents/api/1.2/folders/{folderId}/metadata/{collectionName}":{
            "post":{
                "summary":"Assign a Metadata Collection to a Folder",
                "description":"<p>Associate an existing metadata collection with a specified folder.</p><p><b>Note: To assign a global collection to a folder, you must be the owner or have the manager role for the folder. If it is a personal collection, you can assign only if you are the folder&#39;s owner.</b></p><p>You must assign a collection to a particular folder before you can assign values to the fields for the particular folder. You can assign a collection to one or more folders, and any folder can have one or more collections assigned to it.</p><p><b>Metadata Inheritance: </p><p>Metadata fields assigned to a folder are available to all folders and files in the hierarchy beneath that folder. Similarly, the values you assign to those fields are inherited by all folders and files nested beneath that folder unless explicitly defined for a nested folder or file. Metadata values specified for a folder or file replace the inherited value for that folder and, by the same rules of inheritance, any folders or files in the hierarchy nested beneath that folder.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Name of the metadata collection to assign.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F94131468853B4845E0508854EE870070A1AA68C3354",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID or collection name is not found.</p>"
                    }
                },
                "tags":[
                    "Folders",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-metadata-{collectionName}-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-metadata-collectionname-post"
            }
        },
        "/documents/api/1.2/folders/{folderId}/metadata":{
            "post":{
                "summary":"Assign Values to a Folder Metadata Collection",
                "description":"<p>Assign values to the fields in a specified folder metadata collection. You must assign a collection to a particular folder before you can assign values to the fields for the particular folder.</p><p><b>Note: To set a metadata value on a folder, you must have the contributor or manager role for that folder.</b></p><p></p><p><b>Metadata Inheritance: </p><p>Metadata fields assigned to a folder are available to all folders and files in the hierarchy beneath that folder. Similarly, the values you assign to those fields are inherited by all folders and files nested beneath that folder unless explicitly defined for a nested folder or file. Metadata values specified for a folder or file replace the inherited value for that folder and, by the same rules of inheritance, any folders or files in the hierarchy nested beneath that folder.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the assign values to metadata collection request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderAssignValuesBody"
                        }
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F94131468853B4845E0508854EE870070A1AA68C3354",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-metadata-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-metadata-post"
            },
            "get":{
                "summary":"Get Folder Metadata Collection",
                "description":"Get values assigned to fields in a specified metadata collection for a particular folder.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just directly assigned collection values should be retrieved (<code>1</code>) or if values from all inherited collections should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderGetCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F94131468853B4845E0508854EE870070A1AA68C3354",
                                "type":"folder",
                                "errorCode":"0",
                                "metadata":{
                                    "CollectionA":{
                                        "FieldA1":"Value1",
                                        "FieldA2":"Value2"
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-metadata-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-metadata-get"
            },
            "delete":{
                "summary":"Delete Values in a Folder Metadata Collection",
                "description":"<p>Reset (delete) values in specified fields in a metadata collection.</p><p><b>Note: To remove a metadata value from a folder, you must be the owner or have the manager role for the folder.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"collection",
                        "in":"query",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"fields",
                        "in":"query",
                        "description":"One or more field names, separated by commas, whose values you want to delete.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F94131468853B4845E0508854EE870070A1AA68C3354",
                                "type":"folder",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-metadata-delete",
                "x-filename-id":"documents-api-1.2-folders-folderid-metadata-delete"
            }
        },
        "/documents/api/1.2/folders/{folderId}/metadataFields":{
            "get":{
                "summary":"Get Folder Assigned Metadata Collections",
                "description":"Get field definitions of all fields in a specified metadata collection assigned to a particular folder.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just a directly assigned collection should be retrieved (<code>1</code>) or if all inherited collections should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderGetAssignedCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"F94131468853B4845E0508854EE870070A1AA68C3354",
                                "type":"folder",
                                "errorCode":"0",
                                "metadataFields":{
                                    "CollectionA":{
                                        "isEnabled":1,
                                        "isInherited":0,
                                        "type":"collection",
                                        "items":[
                                            {
                                                "type":"field",
                                                "fieldName":"A1",
                                                "fieldType":"string",
                                                "isEnabled":1
                                            },
                                            {
                                                "type":"field",
                                                "fieldName":"A2",
                                                "fieldType":"string",
                                                "isEnabled":0
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-metadataFields-get",
                "x-filename-id":"documents-api-1.2-folders-folderid-metadatafields-get"
            }
        },
        "/documents/api/1.2/folders/{folderId}/conversation":{
            "post":{
                "summary":"Create Folder Conversation",
                "description":"<p>Create a new conversation and associate it with the specified folder. It will also generate a conversation applink for the creator.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create folder conversation request.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FolderCreateConversationBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "conversationName":"Folder Conversation Test"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access this folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access this folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderCreateConversationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"F1BDF6BBD9725002B8136F6598503556E71E89DE95CC",
                                "type":"folder",
                                "errorCode":"0",
                                "conversationID":"13841",
                                "conversationName":"Folder Conversation Test",
                                "conversationAppLink":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn/web/cList/conversations/13841",
                                "conversationAppLinkToken":"e14ad9a457aaa177d33a40115494272bf23bc663072f3fe5cb7412a731df5607"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameter is not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"documents-api-1.2-folders-{folderId}-conversation-post",
                "x-filename-id":"documents-api-1.2-folders-folderid-conversation-post"
            }
        },
        "/documents/api/1.2/applinks/folder/{folderId}":{
            "post":{
                "summary":"Create Folder Applink",
                "description":"<p>Create an applink for a specified folder and a specified user.<p><p>You can grant the specified user the following roles:</p><ul><li><strong>Viewer:</strong> Viewers can look at files and folders, but can&#39;t change things.</li><li><strong>Downloader:</strong> Downloaders can also download files and save them to their own computers.</li><li><strong>Contributor:</strong> Contributors can also modify files, update files, upload new files, and delete files.</li><li><strong>Manager:</strong> Managers can also modify files, update files, upload new files, delete, and share files and folders.</li></ul><p><b>Note:</p><p>To create an applink, the requester must have admin privileges for the folder. That is, the requester must be the owner or have the manager role.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines the details of the create applink request. <b>Bold</b> indicates a required value.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ApplinkBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "assignedUser":"U0EAA20910FAF3052ACB79E4T00000000001",
                                "role":"contributor",
                                "userLocale":"Dansk",
                                "userTimeZone":"Canada/Pacific"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ApplinkResponse"
                        },
                        "examples":{
                            "application/json":{
                                "appLinkID":"LFwi1u1E9vZC_3pQhK5C4qxigAC4o1eUuMnv3dZbo6_OiaZx-yte-xIrxWdDJCA_jEgfVHe1At-26KX-M9mi9BaI7B0UX3Gx-QufREHWcHakby0_V9n8_C1pT7P_CKYlSqFU0rudQ8Q81M67-3fLffMA==",
                                "accessToken":"_qVnD42Et8KwZrBUqveiqn1sw-RLpfZQdIPPi_fd17-gt60FP6-IuCApyLFw32EL",
                                "refreshToken":"ctOCKm4mtpayp__jUlQsfdFEd52vSn2Pd4QxOTcSZ1Wch0f9JP7EFSaXmDLKZdql",
                                "appLinkUrl":"http://www.example.com/documents/embed/link/app/LFwi1u1E9vZC_3pQhK5C4qxigAC4o1eUuMnv3dZbo6_OiaZx-yte-xIrxWdDJCA_jEgfVHe1At-26KX-M9mi9BaI7B0UX3Gx-QufREHWcHakby0_V9n8_C1pT7P_CKYlSqFU0rudQ8Q81M67-3fLffMA==/folder/F3399E673E5B93B3774531E7T0000000000100000001",
                                "role":"viewer",
                                "id":"F3399E673E5B93B3774531E7T0000000000100000001",
                                "type":"applink",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Applinks"
                ],
                "x-internal-id":"documents-api-1.2-applinks-folder-{folderId}-post",
                "x-filename-id":"documents-api-1.2-applinks-folder-folderid-post"
            }
        },
        "/documents/api/1.2/applinks/file/{fileId}":{
            "post":{
                "summary":"Create File Applink",
                "description":"<p>Create an applink for a specified file and a specified user.<p><p>You can grant the specified user the following roles:</p><ul><li><strong>Viewer:</strong> Viewers can look at files and folders, but can&#39;t change things.</li><li><strong>Downloader:</strong> Downloaders can also download files and save them to their own computers.</li><li><strong>Contributor:</strong> Contributors can also modify files, update files, upload new files, and delete files.</li><li><strong>Manager:</strong> Managers can also modify files, update files, upload new files, delete, and share files.</li></ul><p><b>Note:</p><p>To create an applink, the requester must have admin privileges for the file. That is, the requester must be the owner or have the manager role.</b></p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines the details of the create applink request. <b>Bold</b> indicates a required value.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ApplinkBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "assignedUser":"U0EAA20910FAF3052ACB79E4T00000000001",
                                "role":"contributor",
                                "userLocale":"Dansk",
                                "userTimeZone":"Canada/Pacific"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ApplinkResponse"
                        },
                        "examples":{
                            "application/json":{
                                "appLinkID":"LDhsn4VPTsnDnKpKLFZTCkjaPkYbMC6-3taYSdJAazckhezJ2HlSjs2THOou6cCAvxcRnw5gpXcU7pIRkCmWN8kEToJHFwwZ-ptWvPGhJaiirl9baL9mka14WnwpL6auOO40-gFMPvkPv23OtMnj2W3A==",
                                "accessToken":"GYrSN5zuj0kOTE4k_60bKvdkxx2-ARA546A2T77GtEOgoPZPGgKk126OeCn1w-Ij",
                                "appLinkUrl":"http://www.example.com/documents/embed/link/app/LDhsn4VPTsnDnKpKLFZTCkjaPkYbMC6-3taYSdJAazckhezJ2HlSjs2THOou6cCAvxcRnw5gpXcU7pIRkCmWN8kEToJHFwwZ-ptWvPGhJaiirl9baL9mka14WnwpL6auOO40-gFMPvkPv23OtMnj2W3A==/fileview/DFD11F62E911327CB1F160F6T0000000000100000001",
                                "refreshToken":"Yc_b_dE8V03eDTCmcmC1gi_y3LVJTPiZOSQDhuS_VWim9E_FRpLQGtEhgxCNbKTG",
                                "role":"contributor",
                                "id":"DFD11F62E911327CB1F160F6T0000000000100000001",
                                "type":"applink",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Applinks"
                ],
                "x-internal-id":"documents-api-1.2-applinks-file-{fileId}-post",
                "x-filename-id":"documents-api-1.2-applinks-file-fileid-post"
            }
        },
        "/documents/api/1.2/applinks/token":{
            "put":{
                "summary":"Refresh Applink Token",
                "description":"<p>Refresh an expired access token.<p>",
                "parameters":[
                    {
                        "type":"string",
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>This element uniquely identifies the resource.</p>",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>This element provides access to the resource and expires after 15 minutes.</p>",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"refreshToken",
                        "in":"header",
                        "description":"<p>This element enables you to request a new access token when the current access token expires. The refreshed token expires after 24 hours.</p>",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The response body includes the refreshed access token.",
                        "schema":{
                            "$ref":"#/definitions/ApplinkTokenResponse"
                        },
                        "examples":{
                            "application/json":{
                                "accessToken":"GYrSN5zuj0kOTE4k_60bKvdkxx2-ARA546A2T77GtEOgoPZPGgKk126OeCn1w-Ij",
                                "type":"applink",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    }
                },
                "tags":[
                    "Applinks"
                ],
                "x-internal-id":"documents-api-1.2-applinks-token-put",
                "x-filename-id":"documents-api-1.2-applinks-token-put"
            }
        },
        "/documents/api/1.2/files/{fileId}/_extract":{
            "post":{
                "summary":"Extract ZIP File into a Folder",
                "description":"Requests that a ZIP file be extracted to a folder.",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the ZIP file to be extracted into a folder",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of how the files will be extracted from the ZIP file.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/FileExtractZipBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "duplicateResolution":"SkipDuplicates",
                                "destinationID":"F4C639F3689B23DC9ADAA8CFC0E6EC85DE64738F6108"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the extraction job.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileExtractZipResponse"
                        },
                        "examples":{
                            "application/json":{
                                "Location":"OCMHost/documents/api/1.2/files/D9D9A930B13B25738ACC428B3C6239D683D39CFFC811/_extract/ZX-857509DEBFD7422FFD8D1BF081A9748F1642699937903",
                                "destinationID":"F4C639F3689B23DC9ADAA8CFC0E6EC85DE64738F6108",
                                "errorCode":"0",
                                "id":"D9D9A930B13B25738ACC428B3C6239D683D39CFFC811",
                                "jobId":"ZX-857509DEBFD7422FFD8D1BF081A9748F1642699937903",
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-_extract-post",
                "x-filename-id":"documents-api-1.2-files-fileid-_extract-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/_extract/{jobId}":{
            "get":{
                "summary":"Get Status of an Extraction Job",
                "description":"<p>Returns the status of an extraction job</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the ZIP file to be extracted into a folder",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jobId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the extraction job.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"includeIgnoredItemDetails",
                        "in":"query",
                        "description":"<p>An optional boolean value that defaults to <code>true</code>. If <code>false</code> the <code>ignoredItems</code> array is not included in the response</p>",
                        "type":"boolean"
                    },
                    {
                        "name":"includeSkippedItemDetails",
                        "in":"query",
                        "description":"<p>An optional boolean value that defaults to <code>true</code>. If <code>false</code> the <code>skippedItems</code> array is not included in the response</p>",
                        "type":"boolean"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileStatusExtractZipResponse"
                        },
                        "examples":{
                            "application/json":{
                                "completed":"true",
                                "completedPercentage":"100",
                                "errorCode":"0",
                                "filesCreated":"3",
                                "filesIgnored":"0",
                                "filesNameAdjusted":"0",
                                "filesOverwritten":"0",
                                "filesProcessed":"3",
                                "filesSkipped":"0",
                                "filesVersioned":"0",
                                "message":"Zip processing completed",
                                "progress":"SUCCEEDED",
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-_extract-{jobId}-get",
                "x-filename-id":"documents-api-1.2-files-fileid-_extract-jobid-get"
            },
            "delete":{
                "summary":"Abort an Extraction Job",
                "description":"<p>Abort an extraction job.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) of the ZIP file to be extracted into a folder.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jobId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the extraction job.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The job was aborted.</p>",
                        "examples":{
                            "application/json":{
                                "errorCode":0,
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The request is invalid as described by the error returned.</p>"
                    },
                    "404":{
                        "description":"<p>Extraction job is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-_extract-{jobId}-delete",
                "x-filename-id":"documents-api-1.2-files-fileid-_extract-jobid-delete"
            }
        },
        "/documents/api/1.2/files/lists":{
            "get":{
                "summary":"Get Information on Multiple Files",
                "description":"<p>Get file information for a list of files.</p>",
                "parameters":[
                    {
                        "name":"idList",
                        "in":"query",
                        "description":"<p>A comma-separated list of globally unique identifiers (GUIDs) for files. There is a limit of 100 file IDs</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this folder. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/json",
                    "application/xml"
                ],
                "responses":{
                    "200":{
                        "description":"<p>The response body contains information about the specific files.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileResponseWithConversation"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "items":[
                                    {
                                        "type":"file",
                                        "size":"129756",
                                        "mimeType":"image/jpeg",
                                        "version":"1",
                                        "createdTime":"2017-06-09T15:23:34Z",
                                        "createdBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "id":"D9B1139A67E4F7F382AA55C145B3E9DD6490EDC3EE22",
                                        "name":"exif-xmp.jpg",
                                        "modifiedTime":"2017-06-09T15:23:34Z",
                                        "modifiedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"UserAA",
                                            "id":"U5C4D5FCE14F2B44946FA74745B3E9DD6490",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "parentID":"F1B1C454FD92B47E9EB6883845B3E9DD6490EDC3EE22"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>The <code>idList</code> parameter is missing or has more than 100 file IDs.</p>"
                    },
                    "403":{
                        "description":"<p>The user does not have access to one or more of the file IDs.</p>"
                    },
                    "404":{
                        "description":"<p>One or more of the file IDs do not exist.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-lists-get",
                "x-filename-id":"documents-api-1.2-files-lists-get"
            }
        },
        "/documents/api/1.2/files/{fileId}":{
            "get":{
                "summary":"Get File Information",
                "description":"<p>Get file information for the specified file.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to query. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"includeRenditions",
                        "in":"query",
                        "description":"<p>When true, detailed information about existing renditions associated with the file is returned. The default is false.</p>",
                        "type":"boolean",
                        "required":false
                    },
                    {
                        "name":"includeOnlyExistingRenditions",
                        "in":"query",
                        "description":"<p>This parameter is ignored unless <code>includeRenditions</code> is true. By default, only information about existing renditions is returned. When false, detailed information about all supported renditions with the file is returned. The <code>exists</code> field will indicate if a rendition has been created. The default is true.</p>",
                        "type":"boolean",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileResponseWithConversation"
                        },
                        "examples":{
                            "application/json":{
                                "count":"13",
                                "createdBy":{
                                    "displayName":"Tenant1 UserB",
                                    "id":"Service1.UserB",
                                    "loginName":"Service1.UserB",
                                    "type":"user"
                                },
                                "createdTime":"2018-02-28T20:00:22Z",
                                "errorCode":"0",
                                "id":"DFB10CF19A743BF1338CFF01AB7008277F375F0158F1",
                                "mimeType":"image/jpeg",
                                "modifiedBy":{
                                    "displayName":"Tenant1 UserB",
                                    "id":"Service1.UserB",
                                    "loginName":"Service1.UserB",
                                    "type":"user"
                                },
                                "modifiedTime":"2018-02-28T20:00:22Z",
                                "name":"BlueSquare.jpg",
                                "ownedBy":{
                                    "displayName":"Tenant1 UserB",
                                    "id":"Service1.UserB",
                                    "loginName":"Service1.UserB",
                                    "type":"user"
                                },
                                "parentID":"F26D598E507E96F9B41C98BA36219C7DA83E60B83105",
                                "size":"24205",
                                "type":"file",
                                "version":"1",
                                "items":[
                                    {
                                        "type":"uithumbnail",
                                        "name":"thumbnail",
                                        "format":"png",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/thumbnail?version=1",
                                        "size":"2478",
                                        "width":"300",
                                        "height":"180"
                                    },
                                    {
                                        "type":"imagepreview",
                                        "name":"page1",
                                        "format":"jpg",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/rendition?rendition=page1&version=1",
                                        "size":"0",
                                        "width":"0",
                                        "height":"0"
                                    },
                                    {
                                        "type":"imagepreview",
                                        "name":"thumbnail1",
                                        "format":"png",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/rendition?rendition=thumbnail1&version=1",
                                        "size":"0",
                                        "width":"0",
                                        "height":"0"
                                    },
                                    {
                                        "type":"native",
                                        "name":"asset",
                                        "format":"jpg",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data?version=1",
                                        "size":"24205",
                                        "width":"360",
                                        "height":"216"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageThumbnailjpg",
                                        "format":"jpg",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/thumbnailImage?version=1",
                                        "size":"2275",
                                        "width":"150",
                                        "height":"90"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageThumbnailwebp",
                                        "format":"webp",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/thumbnailImage?format=webp&version=1",
                                        "size":"0",
                                        "width":"150",
                                        "height":"90"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageSmalljpg",
                                        "format":"jpg",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/smallImage?version=1",
                                        "size":"0",
                                        "width":"300",
                                        "height":"180"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageSmallwebp",
                                        "format":"webp",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/smallImage?format=webp&version=1",
                                        "size":"380",
                                        "width":"300",
                                        "height":"180"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageMediumjpg",
                                        "format":"jpg",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/mediumImage?version=1",
                                        "size":"24205",
                                        "width":"360",
                                        "height":"216"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageMediumwebp",
                                        "format":"webp",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/mediumImage?format=webp&version=1",
                                        "size":"0",
                                        "width":"360",
                                        "height":"216"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageLargejpg",
                                        "format":"jpg",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/largeImage?version=1",
                                        "size":"24205",
                                        "width":"360",
                                        "height":"216"
                                    },
                                    {
                                        "type":"responsiveimage",
                                        "name":"ImageLargewebp",
                                        "format":"webp",
                                        "exists":"false",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/largeImage?format=webp&version=1",
                                        "size":"0",
                                        "width":"360",
                                        "height":"216"
                                    },
                                    {
                                        "type":"customrendition",
                                        "name":"Desert",
                                        "format":"jpeg",
                                        "exists":"true",
                                        "link":"http://service1-tenant1:8080/documents/api/1.2/files/DFB10CF19A743BF1338CFF01AB7008277F375F0158F1/data/rendition?rendition=Desert&renditionType=uploaded&version=1",
                                        "size":"845941",
                                        "width":"1024",
                                        "height":"768"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-get",
                "x-filename-id":"documents-api-1.2-files-fileid-get"
            },
            "put":{
                "summary":"Edit File",
                "description":"<p>Change the name of the specified file.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit file request. There are no required attributes.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/FileEditBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "name":"filev4.txt"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D574378400573ED9D62B3195T0000000000100000001",
                                "parentID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "name":"filev4.txt",
                                "type":"file",
                                "size":"13",
                                "version":"4",
                                "createdTime":"2014-02-21T21:32:37Z",
                                "modifiedTime":"2014-02-21T21:32:37Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-put",
                "x-filename-id":"documents-api-1.2-files-fileid-put"
            },
            "delete":{
                "summary":"Delete File",
                "description":"<p>Delete (move to trash) the specified file.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to delete. If the version is not specified, all versions of the file are deleted (moved to trash). If the version is specified, that version of the file is deleted (moved to trash).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileDeleteResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D34A657B8723A96097F80926T0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-delete",
                "x-filename-id":"documents-api-1.2-files-fileid-delete"
            }
        },
        "/documents/api/1.2/files/data":{
            "post":{
                "summary":"Upload File",
                "description":"<p>Upload a new file using a multipart request to specify destination and file information.</p><p><b>Note:</p><p>File names are not case-sensitive; that is, <code>File_Name</code> and <code>file_name</code> are considered identical. Two files cannot have the same name in a given folder. </p><p>By default, if a file with the same name exists in the target destination, the uploaded file replaces the existing file as a new revision.</b></p><p>The request is a multipart HTTP request where one part is a JSON object (<code>jsonInputParameters</code>) with the <code>parentID</code> and the other part is the content of the file itself (<code>primaryFile</code>). It is also possible to set metadata values using another JSON object (<code>metadataValues</code>).</p>",
                "parameters":[
                    {
                        "name":"jsonInputParameters",
                        "in":"formData",
                        "description":"<p>You can use this parameter to include the <code>parentID</code> parameter and the <code>duplicateResolution</code> parameter as a JSON payload with the request. This parameter must come <b>before</b> the <code>primaryFile</code> parameter. <p>Set <code>parentID</code> to the globally unique identifier (GUID) of the folder to upload the file to. <b><p>The <code>parentID</code> parameter must be sent as a part of this JSON payload. This parameter is required.</p></b> For example:</p><code>&#123;<p>&#34;parentID&#34;:&#32;&#32;&#32;&#32;&#34;FB4CD874EF94CD2CC1B60B72T&#34;</p>&#125;</code></p><p>Also, to resolve any conflict with duplicate file names, you can set <code>duplicateResolution</code> to <code>TimeStampSuffix</code>. <p><b>The <code>duplicateResolution</code> parameter can be sent as a part of this JSON payload. This parameter is optional.</b></p> For example:</p> <code>&#123;<p> &#34;parentID&#34;:&#32;&#32;&#32;&#32;&#34;FB4CD874EF94CD2CC1B60B72T&#34;,</p><p> &#34;duplicateResolution&#34;:&#32;&#32;&#32;&#32;&#34;TimeStampSuffix&#34;</p>&#125;</code></p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"primaryFile",
                        "in":"formData",
                        "description":"File to upload. This must come <b>after</b> the <code>jsonInputParameters</code> parameter.",
                        "type":"file",
                        "required":true
                    },
                    {
                        "name":"metadataValues",
                        "in":"formData",
                        "description":"<p>You can use this parameter to set metadata values to a collection already assigned to any parent folder. The rules are the same as those applied to the set metadata values REST API. Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p><p>For example:</p><code>&#123;<p> &#34;collection&#34;:&#32;&#32;&#32;&#32;&#34;CollectionA&#34;,</p><p> &#34;fieldA&#34;:&#32;&#32;&#32;&#32;&#34;valueA&#34;,</p><p> &#34;fieldB&#34;:&#32;&#32;&#32;&#32;&#34;valueB&#34;,</p><p> &#34;fieldC&#34;:&#32;&#32;&#32;&#32;&#34;valueC&#34;</p>&#125;</code>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "consumes":[
                    "multipart/form-data"
                ],
                "responses":{
                    "201":{
                        "headers":{
                            "Location":{
                                "type":"string",
                                "description":"The URI for the newly created resource is in the <code>Location Header</code> field."
                            }
                        },
                        "description":"Created. The request was fulfilled and the new resource was created.",
                        "schema":{
                            "$ref":"#/definitions/FileUploadResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"DB1C5AF480FFE61C588027A8T0000000000100000001",
                                "parentID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "name":"example.txt",
                                "type":"file",
                                "size":"13",
                                "version":"1",
                                "createdTime":"2014-02-21T21:32:37Z",
                                "modifiedTime":"2014-02-21T21:32:37Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "errorCode":"0",
                                "errorMessage":"Successfully checked in content item &#39;ADC412030000000000000000000002&#39;."
                            }
                        }
                    },
                    "400":{
                        "description":"Request parameters are not formatted correctly."
                    },
                    "403":{
                        "description":"Forbidden if the user does not have write permission."
                    },
                    "404":{
                        "description":"Folder ID is not found."
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-data-post",
                "x-filename-id":"documents-api-1.2-files-data-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/data":{
            "post":{
                "summary":"Upload File Version",
                "description":"<p>Upload a new revision to a file using a multipart request to specify information for the target file and input file.</p><p><b>Note:</p><p>Two files cannot have the same name in a given folder. File names are not case-sensitive; that is, <code>File_Name</code> and <code>file_name</code> are considered identical. If a file with the same name exists in the target destination, the name of the new file is given a numeric increment. For example, if the file <code>my_file</code> already exists, the new file is named <code>my_file(2)</code>.</b></p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"primaryFile",
                        "in":"formData",
                        "description":"File to upload.",
                        "type":"file",
                        "required":true
                    },
                    {
                        "name":"metadataValues",
                        "in":"formData",
                        "description":"<p>You can use this parameter to set metadata values to a collection already assigned to any parent folder. The rules are the same as those applied to the set metadata values REST API. Use <code>Content-Type: application/json</code> to describe this information as a JSON object.</p><p>For example:</p><code>&#123;<p> &#34;collection&#34;:&#32;&#32;&#32;&#32;&#34;CollectionA&#34;,</p><p> &#34;fieldA&#34;:&#32;&#32;&#32;&#32;&#34;valueA&#34;,</p><p> &#34;fieldB&#34;:&#32;&#32;&#32;&#32;&#34;valueB&#34;,</p><p> &#34;fieldC&#34;:&#32;&#32;&#32;&#32;&#34;valueC&#34;</p>&#125;</code>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "consumes":[
                    "multipart/form-data"
                ],
                "responses":{
                    "200":{
                        "headers":{
                            "Location":{
                                "type":"string",
                                "description":"The URI for the newly created resource is in the <code>Location Header</code> field."
                            }
                        },
                        "description":"The request was fulfilled.",
                        "schema":{
                            "$ref":"#/definitions/FileUploadResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D574378400573ED9D62B3195T0000000000100000001",
                                "parentID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "name":"example2.txt",
                                "type":"file",
                                "size":"13",
                                "version":"1",
                                "createdTime":"2014-02-21T21:15:57Z",
                                "modifiedTime":"2014-02-21T21:18:20Z",
                                "createdBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "ownedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "modifiedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "errorCode":"0",
                                "errorMessage":"Successfully checked in content item &#39;ADC412030000000000000000000003&#39;."
                            }
                        }
                    },
                    "400":{
                        "description":"Request parameters are not formatted correctly."
                    },
                    "403":{
                        "description":"Forbidden if the user does not have write permission."
                    },
                    "404":{
                        "description":"File ID is not found."
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-post",
                "x-filename-id":"documents-api-1.2-files-fileid-data-post"
            },
            "get":{
                "summary":"Download File",
                "description":"<p>Get file content for the specified file as a stream.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to download. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have at least the downloader role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the downloader role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"Range",
                        "in":"header",
                        "description":"<p>The standard HTTP <code>Range</code>  header allows clients to stream parts of the file rather than the entire file. The value of the <code>Range</code> header can be one of the following formats: <ul><li>bytes=<i>startByte</i> - <i>endByte</i></br> For example to receive the first 500 bytes use <code>bytes=0-500</code><li>bytes=<i>skipBytes</i>-</br>For example to skip the first 500 bytes use <code>bytes=500-</code></li><li>bytes=-<i>lastBytes</i></br>For example to receive the last 500 bytes use <code>bytes=-500</code</li></ul> </p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/octet-stream"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Complete data stream of the file contents.</p>"
                    },
                    "206":{
                        "description":"<p>Partial data stream of the file contents.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    },
                    "416":{
                        "description":"<p>Requested range cannot be satisfied.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/copy":{
            "post":{
                "summary":"Copy File",
                "description":"<p>Copy a specified file to a specified destination folder.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of the copy file request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileCopyBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "destinationID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "version":1
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileCopyResponse"
                        },
                        "examples":{
                            "application/json":{
                                "destinationID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "id":"D4018B1EF3AC07D0A349DB8DT0000000000100000001",
                                "idList":"D574378400573ED9D62B3195T0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission for the copied file, or write permission for the destination folder.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-copy-post",
                "x-filename-id":"documents-api-1.2-files-fileid-copy-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/move":{
            "post":{
                "summary":"Move File",
                "description":"<p>Move a specified file and its versions to a specified destination folder. The moved file retains its globally unique identifier and all date and ownership information.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines details of the move file request. <b>Bold</b> indicates a required value.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileMoveBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "destinationID":"FF4729683CD68C1AFB1AE87DT0000000000100000001"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileMoveResponse"
                        },
                        "examples":{
                            "application/json":{
                                "destinationID":"FF4729683CD68C1AFB1AE87DT0000000000100000001",
                                "idList":"D574378400573ED9D62B3195T0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission for the moved file, or write permission for the destination folder.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-move-post",
                "x-filename-id":"documents-api-1.2-files-fileid-move-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/versions":{
            "get":{
                "summary":"Get File Versions",
                "description":"<p>Get version information for the specified file.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileVersionsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D574378400573ED9D62B3195T0000000000100000001",
                                "parentID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                "name":"example2.txt",
                                "type":"file",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "id":"D574378400573ED9D62B3195T0000000000100000001",
                                        "parentID":"FB4CD874EF94CD2CC1B60B72T0000000000100000001",
                                        "name":"example2.txt",
                                        "type":"file",
                                        "size":"13",
                                        "version":"1",
                                        "createdTime":"2014-02-21T21:15:57Z",
                                        "modifiedTime":"2014-02-21T21:18:49Z",
                                        "createdBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "ownedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "modifiedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-versions-get",
                "x-filename-id":"documents-api-1.2-files-fileid-versions-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/reserve":{
            "post":{
                "summary":"Reserve File",
                "description":"<p>Reserve the specified file. A file reservation lets other users (or processes) know that the file is in use.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileReserveResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D5B8B54BA8C121BEDB91A1341212FF6185DEA5EFC0BD",
                                "reservationDate":"2015-06-15T19:34:17.000Z",
                                "reservedBy":{
                                    "displayName":"User AA",
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                },
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-reserve-post",
                "x-filename-id":"documents-api-1.2-files-fileid-reserve-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/unreserve":{
            "post":{
                "summary":"Unreserve File",
                "description":"<p>Remove the reservation from the specified file. A file reservation lets other users (or processes) know that the file is in use.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"<p>The request body defines details of the unreserve file request. <b>Bold</b> indicates a required value.</p>",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileUnreserveBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "reservedByUserID":"U0EAA20910FAF3052ACB79E4T00000000001"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileUnreserveResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D5B8B54BA8C121BEDB91A1341212FF6185DEA5EFC0BD",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-unreserve-post",
                "x-filename-id":"documents-api-1.2-files-fileid-unreserve-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/thumbnailImage":{
            "get":{
                "summary":"Get Responsive Thumbnail Image",
                "description":"<p>Get a thumbnail-sized rendition of the file. The image returned is not wider than 150 pixels. If the rendition has not been created, this call will generate the rendition.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file. The GUID must be for a jpeg, png, gif or tiff image.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"format",
                        "in":"query",
                        "description":"<p>Specify the image type to return. The following types are supported:<ul><li><code>jpeg</code> or <code>jpg</code> returns a jpeg image. This is the default value.</li><li><code>webp</code> returns a WebP image.</li></ul></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "image/jpeg",
                    "image/webp"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Binary data stream for the responsive image.</p>"
                    },
                    "403":{
                        "description":"<p>User does not have read permission to the file ID.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found, or in rare cases the converted image cannot be returned.</p>"
                    },
                    "415":{
                        "description":"<p>File ID is not supported image (jpeg, png, gif, bmp or tiff) or document type (doc, docx, xls, xlsx, ppt, pptx or pdf).</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-thumbnailImage-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-thumbnailimage-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/smallImage":{
            "get":{
                "summary":"Get Responsive Small Image",
                "description":"<p>Get a small-sized rendition of the file. The image returned is not wider than 300 pixels. If the rendition has not been created, this call will generate the rendition.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file. The GUID must be for a jpeg, png, gif or tiff image.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"format",
                        "in":"query",
                        "description":"<p>Specify the image type to return. The following types are supported:<ul><li><code>jpeg</code> or <code>jpg</code> returns a jpeg image. This is the default value.</li><li><code>webp</code> returns a WebP image.</li></ul></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "image/jpeg",
                    "image/webp"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Binary data stream for the responsive image.</p>"
                    },
                    "403":{
                        "description":"<p>User does not have read permission to the file ID.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found, or in rare cases the converted image cannot be returned.</p>"
                    },
                    "415":{
                        "description":"<p>File ID is not supported image (jpeg, png, gif, bmp or tiff) or document type (doc, docx, xls, xlsx, ppt, pptx or pdf).</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-smallImage-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-smallimage-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/mediumImage":{
            "get":{
                "summary":"Get Responsive Medium Image",
                "description":"<p>Get a medium-sized rendition of the file. The image returned is not wider than 1024 pixels. If the rendition has not been created, this call will generate the rendition.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file. The GUID must be a for jpeg, png, gif or tiff image.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"format",
                        "in":"query",
                        "description":"<p>Specify the image type to return. The following types are supported:<ul><li><code>jpeg</code> or <code>jpg</code> returns a jpeg image. This is the default value.</li><li><code>webp</code> returns a WebP image.</li></ul></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "image/jpeg",
                    "image/webp"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Binary data stream for the responsive image.</p>"
                    },
                    "403":{
                        "description":"<p>User does not have read permission to the file ID.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found, or in rare cases the converted image cannot be returned.</p>"
                    },
                    "415":{
                        "description":"<p>File ID is not a jpeg, png, gif or tiff image.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-mediumImage-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-mediumimage-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/largeImage":{
            "get":{
                "summary":"Get Responsive Large Image",
                "description":"<p>Get a large-sized rendition of the file. The image returned is not wider than 2048 pixels. If the rendition has not been created, this call will generate the rendition.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file. The GUID must be for a jpeg, png, gif or tiff image.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"format",
                        "in":"query",
                        "description":"<p>Specify the image type to return. The following types are supported:<ul><li><code>jpeg</code> or <code>jpg</code> returns a jpeg image. This is the default value.</li><li><code>webp</code> returns a WebP image.</li></ul></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "image/jpeg",
                    "image/webp"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Binary data stream for the responsive image.</p>"
                    },
                    "403":{
                        "description":"<p>User does not have read permission to the file ID.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found, or in rare cases the converted image cannot be returned.</p>"
                    },
                    "415":{
                        "description":"<p>File ID is not a jpeg, png, gif or tiff image.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-largeImage-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-largeimage-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/thumbnail":{
            "get":{
                "summary":"Get Thumbnail",
                "description":"<p>Get a thumbnail image for the front page of the document. If document renditions have not been generated, this call generates the thumbnail image for the front page of the document.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"Range",
                        "in":"header",
                        "description":"<p>The standard HTTP <code>Range</code>  header allows clients to stream parts of the file rather than the entire file. The value of the <code>Range</code> header can be one of the following formats: <ul><li>bytes=<i>startByte</i> - <i>endByte</i></br> For example to receive the first 500 bytes use <code>bytes=0-500</code><li>bytes=<i>skipBytes</i>-</br>For example to skip the first 500 bytes use <code>bytes=500-</code></li><li>bytes=-<i>lastBytes</i></br>For example to receive the last 500 bytes use <code>bytes=-500</code</li></ul> </p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/octet-stream"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Complete data stream of the file contents.</p>"
                    },
                    "206":{
                        "description":"<p>Partial data stream of the file contents.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    },
                    "416":{
                        "description":"<p>Requested range cannot be satisfied.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-thumbnail-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-thumbnail-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/rendition":{
            "get":{
                "summary":"Get Rendition",
                "description":"<p>Get the thumbnail or page rendition for a specified file and page. You can also get any custom uploaded rendition for a specified file. A rendition is a viewable representation of the file contents.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"rendition",
                        "in":"query",
                        "description":"<p>Specify the thumbnail number or page number in the following format.</p><p><ul><li>page&#60;&#35;&#62; <pre>For example: rendition=page3</pre></li><li>thumbnail&#60;&#35;&#62; <pre>For example: rendition=thumbnail3</pre></li><li>uploaded rendition name <pre>For example: rendition=small</pre></li></ul></p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used. It is important to notice that system renditions and custom renditions can exist for a specific file version only.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"renditionType",
                        "in":"query",
                        "description":"<p>Specify the rendition type to retrieve. This parameter needs to be used together with a <code>rendition</code> parameter: thumbnails or page renditions require <code>renditionType=system</code>; custom uploaded renditions require <code>renditionType=uploaded</code>. If <code>renditionType</code> is not specified, the <code>system</code> rendition type will be assumed.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"Range",
                        "in":"header",
                        "description":"<p>The standard HTTP <code>Range</code>  header allows clients to stream parts of the file rather than the entire file. The value of the <code>Range</code> header can be one of the following formats: <ul><li>bytes=<i>startByte</i> - <i>endByte</i></br> For example to receive the first 500 bytes use <code>bytes=0-500</code><li>bytes=<i>skipBytes</i>-</br>For example to skip the first 500 bytes use <code>bytes=500-</code></li><li>bytes=-<i>lastBytes</i></br>For example to receive the last 500 bytes use <code>bytes=-500</code</li></ul> </p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/octet-stream"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Complete data stream of the page rendition image, or custom rendition file uploaded.</p>"
                    },
                    "206":{
                        "description":"<p>Partial data stream of the page rendition image, or custom rendition file uploaded.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    },
                    "416":{
                        "description":"<p>Requested range cannot be satisfied.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-rendition-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-rendition-get"
            },
            "post":{
                "summary":"Upload Custom Rendition",
                "description":"<p>Upload a custom rendition file to the latest file version, using a multipart request. The given name will be used to uniquely identify this rendition within a file version.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"jsonInputParameters",
                        "in":"formData",
                        "description":"<p>You can use this parameter to include the <code>name</code> parameter and the <code>description</code> parameter as a JSON payload with the request. <p>Set <code>name</code> as a unique identifier for this custom rendition within the file&#39;s latest revision scope. <b><p>The <code>name</code> parameter must be sent as a part of this JSON payload. This parameter is required.</p></b> For example: </p><code>&#123;<p> &#34;name&#34;:&#32;&#32;&#32;&#32;&#34;smallCustomRendition&#34;</p>&#125;</code></p><p>The following restrictions apply to <code>name</code>:<ul><li>The length of <code>name</code> can&#39;t exceed 28 characters.</li><li>The <code>name</code> parameter isn&#39;t case-sensitive; that is, <code>smallRendition</code> and <code>smallrendition</code> are considered identical.</li><li>The <code>name</code> parameter is limited to English letters, numbers, the hyphen character, and the underscore character only. Use of other characters will cause failure.</li></ul></p> <p>       The <code>description</code> parameter can be sent as a part of this JSON payload. This parameter is optional.</b></p><p>For example:</p> <code>&#123;<p> &#34;name&#34;:&#32;&#32;&#32;&#32;&#34;smallCustomRendition&#34;,</p><p> &#34;description&#34;:&#32;&#32;&#32;&#32;&#34;This is a small rendition version for this file&#34;</p>&#125;</code>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"file",
                        "in":"formData",
                        "description":"Custom rendition file to upload.",
                        "type":"file",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "consumes":[
                    "multipart/form-data"
                ],
                "responses":{
                    "200":{
                        "description":"<p>Created. The request was fulfilled and the new resource was created.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileCustomRenditionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>A mandatory parameter is missing or an invalid parameter was provided.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have write permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    },
                    "409":{
                        "description":"<p>A custom rendition with the given <code>name</code> already exists in the latest version.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-rendition-post",
                "x-filename-id":"documents-api-1.2-files-fileid-data-rendition-post"
            },
            "delete":{
                "summary":"Delete Custom Rendition",
                "description":"<p>Delete the specified custom rendition.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"rendition",
                        "in":"query",
                        "description":"<p>Rendition <code>name</code> given to a custom rendition in upload.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used. It is important to notice that custom renditions can exist for a specific file version only.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID or rendition is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-rendition-delete",
                "x-filename-id":"documents-api-1.2-files-fileid-data-rendition-delete"
            }
        },
        "/documents/api/1.2/files/{fileId}/data/renditions":{
            "get":{
                "summary":"List Renditions",
                "description":"<p>List system-generated renditions or user-uploaded renditions for a file version.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"renditionType",
                        "in":"query",
                        "description":"<p>Specify the rendition type to retrieve. Use <code>renditionType=system</code> for thumbnail and page renditions; use <code>renditionType=uploaded</code> for custom uploaded renditions.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used. It is important to notice that system renditions and custom renditions can exist for a specific file version only.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileListCustomRenditionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "items":[
                                    {
                                        "type":"rendition",
                                        "name":"small",
                                        "description":"jellyfish small custom rendition",
                                        "path":"small.jpg",
                                        "originalName":"Jellyfish_small.jpg"
                                    },
                                    {
                                        "type":"rendition",
                                        "name":"crop",
                                        "description":"jellyfish crop custom rendition",
                                        "path":"crop.jpg",
                                        "originalName":"Jellyfish_crop.jpg"
                                    }
                                ]
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-data-renditions-get",
                "x-filename-id":"documents-api-1.2-files-fileid-data-renditions-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/pages":{
            "get":{
                "summary":"Get Rendition Page Count",
                "description":"<p>Get the number of renditions (pages) created for the specified file that has an image based preview (rendition) created image. An image based preview (or rendition) is a viewable representation of the file contents where each page of the file is converted to an image.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/octet-stream"
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FilePagesResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "pages":"22",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-pages-get",
                "x-filename-id":"documents-api-1.2-files-fileid-pages-get"
            },
            "post":{
                "summary":"Generate File Renditions",
                "description":"<p>Generate an image based preview (page renditions) for a specified file that does not have an image based preview (page renditions). An image based preview (or rendition) is a viewable representation of the file contents where each page of the file is converted to an image. Not all file types support image based preview (page renditions).<p>The types of files that can have renditions include (similar formats may also be supported):<p><ul><li>Most images (bmp,jpg,tif,gif,png)</li><li>Office files (doc, docx, dot, dotx, xls, xlsx, xls, xlst, pot, potx, ppt, pptx)</li><li>Text files (txt, scripts, source code)</li><li>AutoCAD drawings</li><li>Adobe PDF files</li><li>Internet files (html, email)</li></ul><p>Note that previews (page renditions) cannot be generated for video formats.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/octet-stream"
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileGenPagesResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-pages-post",
                "x-filename-id":"documents-api-1.2-files-fileid-pages-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/previewPath":{
            "get":{
                "summary":"Get File HTML5 Preview",
                "description":"<p>Generate an HTML5 preview of the given file and return a path that can be used to access it.<p> <br> The types of files that can be previewed include (similar formats may also be supported):<p><ul><li>Most images (bmp,jpg,tif,gif,png)</li><li>Office files (doc, docx, dot, dotx, xls, xlsx, xls, xlst, pot, potx, ppt, pptx)</li><li>Text files (txt, scripts, source code)</li><li>AutoCAD drawings</li><li>Adobe PDF files</li><li>Internet files (html, email)</li></ul><p>Note that previews cannot be generated for video formats.",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "description":"<p>Specify the version number of the file to use. If the version is not specified, the latest version is used.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"waitForCompletePreview",
                        "in":"query",
                        "description":"<p>When true, this call will not return until the HTML5 preview has been created. Using this parameter will delay the return of this call but will ensure the preview is fully available to the system. The default is false.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileHtml5PreviewResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "previewUrl":"http://Service1-AttTenant1.slc04ymr.us.oracle.com:12020/documents/fileview/D03175B85C8EAA3B6F2BC6A84EE870070A1A2B7FEACF/1/preview/html5/pvw.html",
                                "version":"1",
                                "type":"file"
                            }
                        }
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-previewPath-get",
                "x-filename-id":"documents-api-1.2-files-fileid-previewpath-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/tags":{
            "get":{
                "summary":"Get File Tags",
                "description":"Get tags assigned to a particular file.",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just directly assigned tags should be retrieved (<code>1</code>) or if all inherited tags should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileGetTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "tags":"personal,work",
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-tags-get",
                "x-filename-id":"documents-api-1.2-files-fileid-tags-get"
            },
            "post":{
                "summary":"Set File Tags",
                "description":"<p>Set all tag values to a particular file. This API will set tags and it will also replace any previously set values. In case replacing tags values is not the desired result, see the Edit File Tags API.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the set tag values request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileSetTagsBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "setTags":"file,metadata"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileSetTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-tags-post",
                "x-filename-id":"documents-api-1.2-files-fileid-tags-post"
            },
            "put":{
                "summary":"Edit File Tags",
                "description":"<p>Edit tag values assigned to a particular file. This API adds new tags without replacing existing ones or removes specific tags or both.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit tags values request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileEditTagsBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "addTags":"newTagValue",
                                "removeTags":"existingTagValue"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileEditTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-tags-put",
                "x-filename-id":"documents-api-1.2-files-fileid-tags-put"
            },
            "delete":{
                "summary":"Delete All File Tags",
                "description":"<p>Delete all tags directly assigned to this file. It is important to observe that inherited tags will not be deleted and, therefore, they will still be retrieved by the Get File Tags API.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileDeleteTagsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-tags-delete",
                "x-filename-id":"documents-api-1.2-files-fileid-tags-delete"
            }
        },
        "/documents/api/1.2/files/{fileId}/metadata/{collectionName}":{
            "post":{
                "summary":"Assign a Metadata Collection to a File",
                "description":"<p>Associate an existing metadata collection with a specified file.</p><p><b>Note: To assign a global collection to a file, you must be the owner or have the manager role for the file. If it is a personal collection, you can assign only if you are the file&#39;s owner.</b></p><p>You must assign a collection to a particular file before you can assign values to the fields for the particular file. You can assign a collection to one or more files, and any file can have one or more collections assigned to it.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Name of the metadata collection to assign. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled.",
                        "schema":{
                            "$ref":"#/definitions/FileCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"Request parameters are not formatted correctly."
                    },
                    "403":{
                        "description":"Forbidden if the user does not have read permission."
                    },
                    "404":{
                        "description":"File ID or collection name is not found."
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-metadata-{collectionName}-post",
                "x-filename-id":"documents-api-1.2-files-fileid-metadata-collectionname-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/metadata":{
            "post":{
                "summary":"Assign Values to a File Metadata Collection",
                "description":"<p>Assign values to the fields in a specified file metadata collection. You must assign a collection to a particular file before you can assign values to the fields for the particular file.</p><p><b>Note: To set a metadata value on a file, you must have the contributor or manager role for that file.</b></p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the assign values to metadata collection request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileAssignValuesBody"
                        }
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-metadata-post",
                "x-filename-id":"documents-api-1.2-files-fileid-metadata-post"
            },
            "get":{
                "summary":"Get File Metadata Collection",
                "description":"Get values assigned to fields in a specified metadata collection for a particular file.",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just directly assigned collection values should be retrieved (<code>1</code>) or if values from all inherited collections should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileGetCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0",
                                "metadata":{
                                    "CollectionA":{
                                        "FieldA1":"Value1",
                                        "FieldA2":"Value2"
                                    },
                                    "CollectionB":{
                                        "FieldB1":"Value1",
                                        "FieldB2":"Value2"
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-metadata-get",
                "x-filename-id":"documents-api-1.2-files-fileid-metadata-get"
            },
            "delete":{
                "summary":"Delete Values in File Metadata Collection",
                "description":"<p>Reset (delete) values in specified fields in a metadata collection.</p><p><b>Note: To remove a metadata value from a file, you must be the owner or have the manager role for the file.</b></p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"collection",
                        "in":"query",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"fields",
                        "in":"query",
                        "description":"One or more field names, separated by commas, whose values you want to delete.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-metadata-delete",
                "x-filename-id":"documents-api-1.2-files-fileid-metadata-delete"
            }
        },
        "/documents/api/1.2/files/{fileId}/metadataFields":{
            "get":{
                "summary":"Get File Assigned Metadata Collections",
                "description":"Get field definitions of all fields in a specified metadata collection assigned to a particular file or its own parent folder hierarchy.",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"directAssigned",
                        "in":"query",
                        "description":"<p>Specify if just directly assigned collections should be retrieved (<code>1</code>) or if all inherited collections should be included as well (<code>0</code>).</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileGetAssignedCollectionResponse"
                        },
                        "examples":{
                            "application/json":{
                                "idList":"D3C1C1F319CFE6B102095C5DT0000000000100000001",
                                "type":"file",
                                "errorCode":"0",
                                "metadataFields":{
                                    "CollectionA":{
                                        "isEnabled":1,
                                        "isInherited":1,
                                        "type":"collection",
                                        "items":[
                                            {
                                                "type":"field",
                                                "fieldName":"A1",
                                                "fieldType":"string",
                                                "isEnabled":1
                                            },
                                            {
                                                "type":"field",
                                                "fieldName":"A2",
                                                "fieldType":"string",
                                                "isEnabled":0
                                            }
                                        ]
                                    },
                                    "CollectionB":{
                                        "isEnabled":1,
                                        "isInherited":0,
                                        "type":"collection",
                                        "items":[
                                            {
                                                "type":"field",
                                                "fieldName":"B1",
                                                "fieldType":"string",
                                                "isEnabled":0
                                            },
                                            {
                                                "type":"field",
                                                "fieldName":"B2",
                                                "fieldType":"string",
                                                "isEnabled":1
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files",
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-metadataFields-get",
                "x-filename-id":"documents-api-1.2-files-fileid-metadatafields-get"
            }
        },
        "/documents/api/1.2/files/{fileId}/conversation":{
            "post":{
                "summary":"Create File Conversation",
                "description":"<p>Create a new conversation and associate it with the specified file. This request will also generate a conversation applink for the creator.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create file conversation request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FileCreateConversationBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "conversationName":"File Conversation Test"
                            }
                        }
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. To work, this public link must have the contributor role granted. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileCreateConversationResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"DFCCA263ED167730B7824BFF98503556E71E89DE95CC",
                                "type":"file",
                                "errorCode":"0",
                                "conversationID":"13865",
                                "conversationName":"File Conversation Test",
                                "conversationAppLink":"http://service1-tenant1.dly.gemmain.shared.cec.oraclecorp.com:19200/osn/web/cList/conversations/13865",
                                "conversationAppLinkToken":"2842038cbf8b9c5db8ec37db134b5af44e9240d20f79891a0eb18e3df90b6684s"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameter is not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-conversation-post",
                "x-filename-id":"documents-api-1.2-files-fileid-conversation-post"
            }
        },
        "/documents/api/1.2/files/{fileId}/accesses":{
            "get":{
                "summary":"Get File Accesses",
                "description":"<p>Get information on which users have accessed the specified file.<p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the file.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"<p> Specify the maximum number of accesses to return. Use this parameter to specify how many items to include on a single page of results. The default is 200.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"<p>Specify the point at which to begin the list of items from the complete set of items returned for the action. If you do not specify an offset, the returned items begin with the first item in the item list (offset=0). </p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"orderBy",
                        "in":"query",
                        "description":"<p>The results can be sorted by the fields below. The sort order can be defined as ascending (asc) or descending (desc). The default sort order is ascending. <ul> <li><code>accessedBy</code> sorts by the user who initiated the activity.</li> <li><code>version</code> sorts by version of the item on which activity occurred.</li> <li><code>accessType</code> sorts by the type of the access (for example: preview, download).</li> <li><code>size</code> sorts by the size of the item accesses.</li> <li><code>accessedTime</code> sorts by the time of the access.</li> <li><code>clientIP</code> sorts by IP address of the client on which this activity was initiated.</li> <li><code>errorCode</code> sorts by the status code of the activity.</li> </ul> </p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"linkID",
                        "in":"header",
                        "description":"<p>Public link ID of a public link authorizing the current user to access this file. It can be used as linkID or LinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"dAccessCode",
                        "in":"header",
                        "description":"<p>Access code needed to use protected public links. It needs to be sent as part of a Cookie header in the following format: <code>dAccessCode-&#60;linkID&#62;=&#60;passcodeValue&#62;</code></p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"appLinkID",
                        "in":"header",
                        "description":"<p>Applink ID authorizing the current user to access the parent folder or this file. Any time the parameter <code>appLinkID</code> is used, a parameter <code>accessToken</code> must be provided as well. To work, this applink must have at least the contributor role granted. It can be used as appLinkID or AppLinkID.</p>",
                        "type":"string",
                        "required":false
                    },
                    {
                        "name":"accessToken",
                        "in":"header",
                        "description":"<p>Applink access token authorizing the current user to access the parent folder or this file. This parameter is mandatory if <code>appLinkID</code> is used. It can be used as accessToken or AccessToken.</p>",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileAccessesResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"1",
                                "errorCode":"0",
                                "hasMore":"0",
                                "totalCount":"1",
                                "type":"access",
                                "items":[
                                    {
                                        "type":"file",
                                        "accessType":"download",
                                        "accessedTime":"2017-05-02T21:23:18.000Z",
                                        "id":"D574378400573ED9D62B3195T0000000000100000001",
                                        "version":"1",
                                        "accessedBy":{
                                            "displayName":"User AA",
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "loginName":"userAALoginName",
                                            "type":"user"
                                        },
                                        "errorCode":"0",
                                        "clientIP":"10.10.82.114",
                                        "refererURL":"https://service1-tenant1:19200/documents/fileview/D1EEF28A920A342E8EC0E39645B3E9DD6490EF9D4696/_Mugs.jpg",
                                        "size":"53834"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Files"
                ],
                "x-internal-id":"documents-api-1.2-files-{fileId}-accesses-get",
                "x-filename-id":"documents-api-1.2-files-fileid-accesses-get"
            }
        },
        "/documents/api/":{
            "get":{
                "summary":"Get All Versions",
                "description":"Get information for all versions of the API. The version resource provides information about all available versions or about a specific version of the API itself.",
                "responses":{
                    "200":{
                        "description":"The request was fulfilled.",
                        "schema":{
                            "$ref":"#/definitions/VersionsResponse"
                        },
                        "examples":{
                            "application/json":{
                                "items":[
                                    {
                                        "version":"1.0",
                                        "lifecycle":"active",
                                        "isLatest":"false",
                                        "catalog":{
                                            "links":[
                                                {
                                                    "ref":"canonical",
                                                    "href":"https://www.example.com/documents/api/1.0/metadata-catalog"
                                                }
                                            ]
                                        },
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.0"
                                            }
                                        ]
                                    },
                                    {
                                        "version":"1.1",
                                        "lifecycle":"active",
                                        "isLatest":"false",
                                        "catalog":{
                                            "links":[
                                                {
                                                    "ref":"canonical",
                                                    "href":"https://www.example.com/documents/api/1.1/metadata-catalog"
                                                }
                                            ]
                                        },
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.1"
                                            }
                                        ]
                                    },
                                    {
                                        "version":"1.2",
                                        "lifecycle":"active",
                                        "isLatest":"true",
                                        "catalog":{
                                            "links":[
                                                {
                                                    "ref":"canonical",
                                                    "href":"https://www.example.com/documents/api/1.2/metadata-catalog"
                                                }
                                            ]
                                        },
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api--get",
                "x-filename-id":"documents-api-get"
            }
        },
        "/documents/api/{version}":{
            "get":{
                "summary":"Get Specific Version",
                "description":"Get information for the specified version of the API. The version resource provides information about all available versions or about a specific version of the API itself.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled.",
                        "schema":{
                            "$ref":"#/definitions/VersionDefinition"
                        },
                        "examples":{
                            "application/json":{
                                "items":[
                                    {
                                        "version":"1.2",
                                        "lifecycle":"active",
                                        "isLatest":"true",
                                        "catalog":{
                                            "links":[
                                                {
                                                    "ref":"canonical",
                                                    "href":"https://www.example.com/documents/api/1.2/metadata-catalog"
                                                }
                                            ]
                                        },
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-get",
                "x-filename-id":"documents-api-version-get"
            }
        },
        "/documents/api/{version}/metadata-catalog":{
            "get":{
                "summary":"Get API Catalog",
                "description":"<p>Get available resources in the specified versions of the API.</p><p><b>Note:</p><p>In version 1.1 of the Content Management REST API, the Catalog resource was renamed Metadata-Catalog. Catalog will continue to be supported as an alias for Metadata-Catalog.</p>",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled.",
                        "schema":{
                            "$ref":"#/definitions/CatalogResponse"
                        },
                        "examples":{
                            "application/json":{
                                "items":[
                                    {
                                        "name":"folders",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/folders"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/folders"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"files",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/files"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/files"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"users",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/users"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/users"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"applinks",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/applinks"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/applinks"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"shares",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/shares"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/shares"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"publiclinks",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/publiclinks"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/publiclinks"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"metadata",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/metadata"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/metadata"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"configuration",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/configuration"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/configuration"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"sites",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/sites"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/sites"
                                            }
                                        ]
                                    },
                                    {
                                        "name":"templates",
                                        "links":[
                                            {
                                                "ref":"canonical",
                                                "href":"https://www.example.com/documents/api/1.2/metadata-catalog/templates"
                                            },
                                            {
                                                "ref":"describes",
                                                "href":"https://www.example.com/documents/api/1.2/templates"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-get",
                "x-filename-id":"documents-api-version-metadata-catalog-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/folders":{
            "get":{
                "summary":"Get Folder API Catalog",
                "description":"Return metadata information for the folders resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Folder metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-folders-get",
                "x-filename-id":"documents-api-version-metadata-catalog-folders-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/files":{
            "get":{
                "summary":"Get File API Catalog",
                "description":"Return metadata information for the files resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. File metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-files-get",
                "x-filename-id":"documents-api-version-metadata-catalog-files-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/users":{
            "get":{
                "summary":"Get User API Catalog",
                "description":"Return metadata information for the users resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. User metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-users-get",
                "x-filename-id":"documents-api-version-metadata-catalog-users-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/applinks":{
            "get":{
                "summary":"Get Applink API Catalog",
                "description":"Return metadata information for the applinks resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Applink metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-applinks-get",
                "x-filename-id":"documents-api-version-metadata-catalog-applinks-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/shares":{
            "get":{
                "summary":"Get Share API Catalog",
                "description":"Return metadata information for the shares resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Share metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-shares-get",
                "x-filename-id":"documents-api-version-metadata-catalog-shares-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/publiclinks":{
            "get":{
                "summary":"Get Public Links API Catalog",
                "description":"Return metadata information for the publiclinks resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Public link metadata includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-publiclinks-get",
                "x-filename-id":"documents-api-version-metadata-catalog-publiclinks-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/metadata":{
            "get":{
                "summary":"Get Metadata API Catalog",
                "description":"Return API catalog information for the metadata resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Response includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-metadata-get",
                "x-filename-id":"documents-api-version-metadata-catalog-metadata-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/configuration":{
            "get":{
                "summary":"Get Configuration API Catalog",
                "description":"Return API catalog information for the configuration resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Response includes links to supported services"
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-configuration-get",
                "x-filename-id":"documents-api-version-metadata-catalog-configuration-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/sites":{
            "get":{
                "summary":"Get Sites API Catalog",
                "description":"Return API catalog information for the sites resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Response includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-sites-get",
                "x-filename-id":"documents-api-version-metadata-catalog-sites-get"
            }
        },
        "/documents/api/{version}/metadata-catalog/templates":{
            "get":{
                "summary":"Get Templates API Catalog",
                "description":"Return API catalog information for the templates resource, including supported services.",
                "parameters":[
                    {
                        "name":"version",
                        "in":"path",
                        "description":"Version value",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The request was fulfilled. Response includes links to supported services."
                    }
                },
                "tags":[
                    "Catalog"
                ],
                "x-internal-id":"documents-api-{version}-metadata-catalog-templates-get",
                "x-filename-id":"documents-api-version-metadata-catalog-templates-get"
            }
        },
        "/documents/api/1.2/users/items":{
            "get":{
                "summary":"Get Users",
                "description":"<p>Get information about one or more users for folder and file sharing purposes.</p><p>The service uses search text provided with the call to match possible users. The search uses a &#34;fuzzy&#34; search of user names and email addresses to return matching users with the most likely matches listed first.</b><p>",
                "parameters":[
                    {
                        "name":"info",
                        "in":"query",
                        "description":"<p>(Required) Specify a search string used to return matching users. Note that wildcard characters are not supported and an empty parameter value is treated as a missing parameter.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p><p>If no users are matched, <code>count</code> and <code>errorCode</code> will be \"0\" and items will not be returned.</p>",
                        "schema":{
                            "$ref":"#/definitions/UsersResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"3",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                        "displayName":"User AA",
                                        "loginName":"userAALoginName",
                                        "type":"user"
                                    },
                                    {
                                        "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                        "displayName":"User BB",
                                        "loginName":"userBBLoginName",
                                        "type":"user"
                                    },
                                    {
                                        "id":"UEB4B3EFA6C02D1B46A121B4T00000000001",
                                        "displayName":"User CC",
                                        "loginName":"userCCLoginName",
                                        "type":"user"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Required field \"info\" is not provided.</p>"
                    }
                },
                "tags":[
                    "Users"
                ],
                "x-internal-id":"documents-api-1.2-users-items-get",
                "x-filename-id":"documents-api-1.2-users-items-get"
            }
        },
        "/documents/api/1.2/users/search/items":{
            "get":{
                "summary":"Get User with Email Address",
                "description":"<p>The service uses an email address as search text provided with the call to match a specific user. The search returns the matching user, if any.</p>",
                "parameters":[
                    {
                        "name":"email",
                        "in":"query",
                        "description":"<p>(Required) Specify an email address as a search string used to return a specific matching user. Wildcard characters are not supported.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p><p>If no user is matched, <code>count</code> and <code>errorCode</code> will be \"0\" and items will not be returned.</p>",
                        "schema":{
                            "$ref":"#/definitions/UsersResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"1",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                        "displayName":"User AA",
                                        "loginName":"userAALoginName",
                                        "type":"user"
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Required field \"email\" is not provided.</p>"
                    }
                },
                "tags":[
                    "Users"
                ],
                "x-internal-id":"documents-api-1.2-users-search-items-get",
                "x-filename-id":"documents-api-1.2-users-search-items-get"
            }
        },
        "/documents/api/1.2/users/{userID}/transferContent":{
            "post":{
                "summary":"Transfer User Content",
                "description":"<p>Transfer either all user (<code>userID</code>) content or a specific folder to another user (<code>targetUserID</code>). During transfer, a new folder is created at the destination user&#39;s home folder (named 'Documents from {sourceUsername}') and all content is moved in there. After the transfer is finished, this new folder will be automatically shared with the source user.</p><p>To transfer user content, you must log in as an administrator.</p>",
                "parameters":[
                    {
                        "name":"userID",
                        "in":"path",
                        "description":"<p>Specify the source <code>userID</code> from where all content will be transferred. User GUID or login can be used.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of what folder will be transferred.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/UserContentTransferBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "targetUserID":"UserA",
                                "idList":"FA8E5194EE2D2EB532237BA398B217802FF797DD1F8E"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/UserContentTransferResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "sourceUser":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User BB",
                                    "loginName":"userBBLoginName",
                                    "type":"user"
                                },
                                "targetUser":{
                                    "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                    "displayName":"User AA",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Required field is not provided.</p>"
                    },
                    "403":{
                        "description":"<p>Unauthorized access.</p>"
                    },
                    "404":{
                        "description":"<p>Source and/or destination user is not found.</p>"
                    }
                },
                "tags":[
                    "Users"
                ],
                "x-internal-id":"documents-api-1.2-users-{userID}-transferContent-post",
                "x-filename-id":"documents-api-1.2-users-userid-transfercontent-post"
            }
        },
        "/documents/api/1.2/shares/{folderId}":{
            "post":{
                "summary":"Share Folder",
                "description":"Share a specified folder with specified user(s) and/or group(s). When you share folders, you control the permissions each person/group has for the folder and its files by assigning a role to the person/group. The different roles determine what a person/group can do with a shared folder.<ul><li><b>Viewer:</b> Viewers can look at the contents of a folders but can&#39;t change files.</li><li><b>Downloader:</b> Downloaders can also download files and save them to their own computer.</li><li><b>Contributor:</b> Contributors can also modify, update, upload, and delete files. Contributors can also get metadata values, get metadata definitions, and set values for metadata already assigned by the folder owner.</li><li><b>Manager:</b> Managers have all the privileges of the other roles and can add or remove other people as members.</li></ul>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. For sharing the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code></p>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the share request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ShareFolderBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "userID":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                "role":"manager",
                                "message":"Granting you shared access to this folder."
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ShareFolderResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "members":[
                                    {
                                        "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                        "displayName":"User BB",
                                        "type":"user",
                                        "isSuccessful":"1",
                                        "provisioningStatus":"active"
                                    }
                                ],
                                "role":"manager",
                                "type":"share",
                                "user":{
                                    "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                    "displayName":"User BB",
                                    "type":"user"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission or there was a problem with one or more supplied users or groups.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-post",
                "x-filename-id":"documents-api-1.2-shares-folderid-post"
            },
            "delete":{
                "summary":"Unshare Folder",
                "description":"Remove all shares from a specified folder.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code></p>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"message",
                        "in":"query",
                        "description":"Optional message sent to the user.",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/UnshareFolderResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "type":"share",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-delete",
                "x-filename-id":"documents-api-1.2-shares-folderid-delete"
            }
        },
        "/documents/api/1.2/shares/{folderId}/items":{
            "get":{
                "summary":"Get Shared Folder Users",
                "description":"Get information about a shared folder and the users who share it.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code></p>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the get shared folder users request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ShareFolderUsersBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "currentOnly":"true"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ShareFolderUsersResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"1",
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "type":"share",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "type":"share",
                                        "role":"manager",
                                        "user":{
                                            "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                            "displayName":"User BB",
                                            "loginName":"userBBLoginName",
                                            "provisioningStatus":"active",
                                            "type":"user"
                                        }
                                    }
                                ],
                                "ownedBy":{
                                    "id":"U7ECC74059E0FEDFEC66BF5AT00000000002",
                                    "displayName":"User AA",
                                    "loginName":"userAALoginName",
                                    "type":"user"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-items-get",
                "x-filename-id":"documents-api-1.2-shares-folderid-items-get"
            }
        },
        "/documents/api/1.2/shares/{folderId}/role":{
            "put":{
                "summary":"Edit Shared Folder User Role",
                "description":"Change the role of a user/group for a shared folder.",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code></p>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit shared folder user role request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ShareFolderEditRoleBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "userID":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                "role":"viewer",
                                "message":"Changing your shared access rights to viewer."
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ShareFolderResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "members":[
                                    {
                                        "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                        "displayName":"User BB",
                                        "type":"user",
                                        "isSuccessful":"1",
                                        "provisioningStatus":"active"
                                    }
                                ],
                                "role":"viewer",
                                "type":"share",
                                "user":{
                                    "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                    "displayName":"User BB",
                                    "type":"user"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have manager permission or there was a problem editing role for one or more user or group.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-role-put",
                "x-filename-id":"documents-api-1.2-shares-folderid-role-put"
            }
        },
        "/documents/api/1.2/shares/{folderId}/user":{
            "delete":{
                "summary":"Revoke User",
                "description":"<p>Delete a user&#39;s or group&#39;s access to a shared folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"userID",
                        "in":"query",
                        "description":"Globally unique identifier (GUID) for the user, login name of the user, GUID for the group or a comma-separated list of the above (no more than 1000 total IDs).",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"message",
                        "in":"query",
                        "description":"Optional message sent to the user.",
                        "type":"string",
                        "required":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ShareDeleteUserResponse"
                        },
                        "examples":{
                            "application/json":{
                                "errorCode":"0",
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "members":[
                                    {
                                        "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                        "displayName":"User BB",
                                        "type":"user",
                                        "isSuccessful":"1",
                                        "provisioningStatus":"active"
                                    }
                                ],
                                "type":"share",
                                "user":{
                                    "id":"U7ECC74059E0FEDFEC66BF5AT00000000001",
                                    "displayName":"User BB",
                                    "type":"user"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have manager permission or if there was a problem removing one or more user or group.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-user-delete",
                "x-filename-id":"documents-api-1.2-shares-folderid-user-delete"
            }
        },
        "/documents/api/1.2/shares/{folderId}/myuser":{
            "delete":{
                "summary":"Revoke Current User",
                "description":"<p>Delete the current user&#39;s access to a shared folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value for <code>folderId</code> is <code>self</code>.</p>",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/ShareDeleteUserResponse"
                        },
                        "examples":{
                            "application/json":{
                                "id":"F1321DC48E3B123D02DBEE88T0000000000100000001",
                                "type":"share",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Shares"
                ],
                "x-internal-id":"documents-api-1.2-shares-{folderId}-myuser-delete",
                "x-filename-id":"documents-api-1.2-shares-folderid-myuser-delete"
            }
        },
        "/documents/api/1.2/metadata/{collectionName}":{
            "post":{
                "summary":"Create Metadata Collection",
                "description":"<p>Create a named collection to store field values as strings. To create a global collection, you must log in as an administrator. A global collection can be used by all tenant users.</p><p>Before you can assign field values, you must assign the collection to a folder or file.</p><b><p>New:</p><p>User personal collections can be created by prefixing the collection name with <code>Personal.</code>. A personal collection will be visible and accessible only to the user who created it; therefore, no naming conflict will exist if two different users define their own personal collections using the same name.</p></b><p></p><p><b>Note:</p><p>Global collection names must be unique in the instance where the collection is defined, and you cannot change the collection name after it is created. For these reasons, consider implementing naming conventions if you plan to make extensive use of metadata collections.</b></p>",
                "parameters":[
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"<p>Global collection names must be unique in the instance where the collection is defined and used. User personal collection names must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>, to be user scoped.</p><p><b>Note:</p><p>You cannot change the name of a collection after you create it.</b></p><p>The following restrictions apply to collection and field names:<ul><li>Collection and field names can&#39;t start or end with a space.</li><li>The combined length of the collection and field name can&#39;t exceed 240 characters.</li><li>Collection and file names aren&#39;t case-sensitive; that is, <code>Field Name</code> and <code>field name</code> are considered identical.</li></ul></p><p>Don&#39;t use the following characters in collection or field names:</p><p><table> <tr><td>&nbsp;&#47;</td><td>&nbsp;&#92;</td><td>&nbsp;&#60;</td><td>&nbsp;&#62;</td><td>&nbsp;&#91;</td><td>&nbsp;&#93;</td><td>&nbsp;&#123;</td><td>&nbsp;&#125;</td><td>&nbsp;&#61;</td><td>&nbsp;$</td><td>&nbsp;%</td></tr><tr><td>&nbsp;&#39;</td><td>&nbsp;&#42;</td><td>&nbsp;&#34;</td><td>&nbsp;&#63;</td><td>&nbsp;&#58;</td><td>&nbsp;&#35;</td><td>&nbsp;&#38;</td><td>&nbsp;&#94;</td><td>&nbsp;&#46;</td><td>&nbsp;&#44;</td><td>&nbsp;&#124;</td></tr></table></p><p>The following strings are also not allowed in collection or field names:</p></p><ul><li>NUL</li><li>NULL</li><li>xSystem</li><li>xUser</li><li>xAF</li><li>dMetadataUnitID</li><li>dParentMetadataUnitID</li><li>dMetadataInheritLevel</li><li>dAssignedMetaCollection</li><li>dMetaCollection</li><li>dMetaCollections</li><li>dMetadataCollectionID</li><li>dMetadataID</li></ul></p>",
                        "type":"string",
                        "required":true,
                        "maxLength":240
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create metadata collection request.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CollectionCreateBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "fields":"FieldA,FieldB"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollectionCreateResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p><p>A collection with that name already exists.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-{collectionName}-post",
                "x-filename-id":"documents-api-1.2-metadata-collectionname-post"
            },
            "put":{
                "summary":"Edit Metadata Collection",
                "description":"<p>Add or remove fields in a specified metadata collection.</p><p>Enable or disable a metadata collection.</p>",
                "parameters":[
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of edit fields or the enable/disable status in a metadata collection request.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CollectionEditBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "addFields":"FieldX,FieldY,FieldZ",
                                "removeFields":"FieldA,FieldB",
                                "settings":"enable"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollectionEditResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p><p>A collection with that name does not exist.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-{collectionName}-put",
                "x-filename-id":"documents-api-1.2-metadata-collectionname-put"
            },
            "get":{
                "summary":"Get Metadata Collection Definition",
                "description":"<p>Retrieve metadata collection definition information along with metadata fields information.</p><p>Enable (<code>1</code>) or disable (<code>0</code>) status will be displayed individually for a metadata collection and all its fields.</p>",
                "parameters":[
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollectionGetResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p><p>A collection with that name does not exist.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-{collectionName}-get",
                "x-filename-id":"documents-api-1.2-metadata-collectionname-get"
            },
            "delete":{
                "summary":"Delete Metadata Collection",
                "description":"<p>Delete a metadata collection and all of its values assigned to files or folders.</p>",
                "parameters":[
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollectionDeleteResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p><p>A collection with that name does not exist.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-{collectionName}-delete",
                "x-filename-id":"documents-api-1.2-metadata-collectionname-delete"
            }
        },
        "/documents/api/1.2/metadata/{collectionName}/field":{
            "put":{
                "summary":"Edit Fields in a Metadata Collection",
                "description":"<p>Edit field definitions or status in a metadata collection.</p>",
                "parameters":[
                    {
                        "name":"collectionName",
                        "in":"path",
                        "description":"Collection name. For a user personal collection, it must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of the enable/disable status for fields in a metadata collection request.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CollectionFieldEditBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "settings":"disable"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/CollectionEditResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p><p>A collection with that name does not exist.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-{collectionName}-field-put",
                "x-filename-id":"documents-api-1.2-metadata-collectionname-field-put"
            }
        },
        "/documents/api/1.2/metadata/searchFields":{
            "get":{
                "summary":"Get Searchable Metadata Fields",
                "description":"<p>Retrieve all metadata fields currently available for searching content. The result list includes all metadata fields prefixed with their respective global metadata collection for that tenant.</p>",
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/GetSearchableMetadataResponse"
                        },
                        "examples":{
                            "application/json":{
                                "type":"metadata",
                                "errorCode":"0",
                                "number":"3",
                                "fields":"SearchableCollection.searchField1,SearchableCollection.searchField2,SearchableCollection.searchField3"
                            }
                        }
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-searchFields-get",
                "x-filename-id":"documents-api-1.2-metadata-searchfields-get"
            },
            "post":{
                "summary":"Set Searchable Metadata Fields",
                "description":"<p>Turn search on for a list of metadata fields. Only metadata fields from the same global collection can be processed in the same request.</p><p>Currently, there is a limit of 200 searchable metadata fields, and after that point no extra fields can be indexed. These metadata fields and metadata collections will be removed from the search index if an administrator deletes them. This action will lower the number of indexed metadata fields allowing users to index new ones.</p> <p>You must log in as an administrator. Searchable metadata fields can be used by all tenant users.</p>",
                "parameters":[
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of setting searchable metadata fields.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SetSearchableMetadataRequestBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "collection":"SearchableCollection",
                                "fields":"searchField1,searchField2,searchField3"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/SetSearchableMetadataResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Exceeded number of allowed searchable metadata fields.</p>"
                    },
                    "404":{
                        "description":"<p>Collection or field does not exist.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-searchFields-post",
                "x-filename-id":"documents-api-1.2-metadata-searchfields-post"
            }
        },
        "/documents/api/1.2/metadata":{
            "get":{
                "summary":"Get Available Metadata Collections",
                "description":"<p>Retrieve all metadata collections available for the current user. The result list includes all global metadata collections for that tenant as well as all personal metadata collections created by the current user. By default, only metadata collection definitions will be retrieved, but all respective field definitions can be obtained as well, if needed.</p>",
                "parameters":[
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines the details of retrieving metadata collections available for the current user. It is not required, and it will retrieve only metadata collections by default. If fields need to be retrieved as well, <code>retrieveFields</code> can be used.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AvailableCollectionsRequestBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "retrieveFields":"1"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/AllAvailableCollectionsResponse"
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    }
                },
                "tags":[
                    "Metadata Collection"
                ],
                "x-internal-id":"documents-api-1.2-metadata-get",
                "x-filename-id":"documents-api-1.2-metadata-get"
            }
        },
        "/documents/api/1.2/publiclinks/folder/{folderId}":{
            "post":{
                "summary":"Create Folder Public Link",
                "description":"<p>Create a public link for a specified folder.</p><p>A public link allows specific users access to the requested folder, whether they have an account or not.</p><p><b>Note:</p><p>To create a public link, the requester must have admin privileges for the folder or file. That is, the requester must be the owner or have the manager role.</b></p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the folder.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create public link request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/PublicLinkBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "assignedUsers":"@serviceinstance",
                                "expirationTime":"2016-01-01T00:00:01Z",
                                "password":"MyPassword",
                                "linkName":"MyLinkOne",
                                "role":"contributor"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/PublicLinkCreateResponse"
                        },
                        "examples":{
                            "application/json":{
                                "linkID":"LF906748A021ACD714CABC82T0000000000100000001",
                                "linkName":"MyLinkOne",
                                "assignedUsers":"@serviceinstance",
                                "role":"contributor",
                                "type":"publiclink",
                                "createdTime":"2015-06-10T16:01:44Z",
                                "expirationTime":"2016-01-01T00:00:01Z",
                                "lastModifiedTime":"2015-06-10T16:01:44Z",
                                "ownedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "type":"user"
                                },
                                "errorCode":"0",
                                "id":"FBE1117A270E747BB1D95024T0000000000100000001"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-folder-{folderId}-post",
                "x-filename-id":"documents-api-1.2-publiclinks-folder-folderid-post"
            },
            "get":{
                "summary":"Get Folder Public Link",
                "description":"<p>Return a list of the public links for a specified folder.</p>",
                "parameters":[
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the folder.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FolderLinksResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"2",
                                "id":"F4E111D0D0645CD368453C2BT0000000000100000001",
                                "type":"folder",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "linkID":"LF31C09DE51854DBBDA37A90T0000000000100000001",
                                        "linkName":"hasSecondLink",
                                        "assignedUsers":"@everybody",
                                        "role":"viewer",
                                        "type":"publiclink",
                                        "createdTime":"2015-06-02T19:30:37Z",
                                        "lastModifiedTime":"2015-06-02T19:30:37Z",
                                        "ownedBy":{
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "displayName":"User AA",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "linkID":"LF5E5F73A444FFB8924EF8ACT0000000000100000001",
                                        "linkName":"hasFirstLink",
                                        "assignedUsers":"@serviceinstance",
                                        "role":"contributor",
                                        "type":"publiclink",
                                        "createdTime":"2015-06-10T16:15:37Z",
                                        "lastModifiedTime":"2015-06-10T16:15:37Z",
                                        "ownedBy":{
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "displayName":"User AA",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Folder ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-folder-{folderId}-get",
                "x-filename-id":"documents-api-1.2-publiclinks-folder-folderid-get"
            }
        },
        "/documents/api/1.2/publiclinks/file/{fileId}":{
            "post":{
                "summary":"Create File Public Link",
                "description":"<p>Create a public link for a specified file.</p><p>A public link allows specific users access to the requested file, whether they have an account or not.</p><p><b>Note:</p><p>To create a public link, the requester must have admin privileges for the folder or file. That is, the requester must be the owner or have the manager role.</b></p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the file.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the create public link request. <b>Bold</b> indicates a required value.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/PublicLinkBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "assignedUsers":"@serviceinstance",
                                "expirationTime":"2016-01-01T00:00:01Z",
                                "password":"MyPassword",
                                "linkName":"MyFileLinkOne",
                                "role":"contributor"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/PublicLinkCreateResponse"
                        },
                        "examples":{
                            "application/json":{
                                "linkID":"LDFD004B846DB106DB8B2906T0000000000100000001",
                                "linkName":"MyFileLinkOne",
                                "assignedUsers":"@everybody",
                                "role":"contributor",
                                "type":"publiclink",
                                "createdTime":"2015-06-10T16:13:19Z",
                                "expirationTime":"2017-01-01T00:00:01Z",
                                "lastModifiedTime":"2015-06-10T16:13:19Z",
                                "ownedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "type":"user"
                                },
                                "errorCode":"0",
                                "id":"D1E1E9F089AC1EF8481E5B94T0000000000100000001"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-file-{fileId}-post",
                "x-filename-id":"documents-api-1.2-publiclinks-file-fileid-post"
            },
            "get":{
                "summary":"Get File Public Link",
                "description":"<p>Return a list of the public links for a specified file.</p>",
                "parameters":[
                    {
                        "name":"fileId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the file.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/FileLinksResponse"
                        },
                        "examples":{
                            "application/json":{
                                "count":"2",
                                "id":"D1E1E9F089AC1EF8481E5B94T0000000000100000001",
                                "type":"file",
                                "errorCode":"0",
                                "items":[
                                    {
                                        "linkID":"LDFD004B846DB106DB8B2906T0000000000100000001",
                                        "linkName":"MyFileLinkOne",
                                        "assignedUsers":"@everybody",
                                        "role":"contributor",
                                        "type":"publiclink",
                                        "createdTime":"2015-06-10T16:13:19Z",
                                        "lastModifiedTime":"2015-06-10T16:13:19Z",
                                        "expirationTime":"2017-01-01T00:00:01Z",
                                        "ownedBy":{
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "displayName":"User AA",
                                            "type":"user"
                                        }
                                    },
                                    {
                                        "linkID":"LF5E5F73A444FFB8924EF8ACT0000000000100000001",
                                        "linkName":"MyFileLinkTwo",
                                        "assignedUsers":"@everybody",
                                        "role":"contributor",
                                        "type":"publiclink",
                                        "createdTime":"2015-06-10T16:17:11Z",
                                        "lastModifiedTime":"2015-06-10T16:17:11Z",
                                        "ownedBy":{
                                            "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                            "displayName":"User AA",
                                            "type":"user"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>File ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-file-{fileId}-get",
                "x-filename-id":"documents-api-1.2-publiclinks-file-fileid-get"
            }
        },
        "/documents/api/1.2/publiclinks/{linkId}":{
            "get":{
                "summary":"Get Public Link",
                "description":"<p>Return information about a specific public link.</p>",
                "parameters":[
                    {
                        "name":"linkId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the public link.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/PublicLinkGetResponse"
                        },
                        "examples":{
                            "application/json":{
                                "linkID":"LF906748A021ACD714CABC82T0000000000100000001",
                                "linkName":"MyLinkOne",
                                "assignedUsers":"@everybody",
                                "role":"contributor",
                                "type":"publiclink",
                                "createdTime":"2015-06-10T16:01:44Z",
                                "expirationTime":"2016-01-01T00:00:01Z",
                                "lastModifiedTime":"2015-06-10T16:01:44Z",
                                "ownedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "type":"user"
                                },
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Link ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-{linkId}-get",
                "x-filename-id":"documents-api-1.2-publiclinks-linkid-get"
            },
            "put":{
                "summary":"Edit Public Link",
                "description":"<p>Edit the available public link parameters.</p>",
                "parameters":[
                    {
                        "name":"linkId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the public link.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"payload",
                        "in":"body",
                        "description":"The request body defines details of the edit public link request. There are no required attributes.",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/PublicLinkEditBody"
                        },
                        "x-examples":{
                            "application/json":{
                                "assignedUsers":"@everybody",
                                "expirationTime":"2016-02-15T01:02:03",
                                "password":"password2",
                                "role":"viewer"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/PublicLinkGetResponse"
                        },
                        "examples":{
                            "application/json":{
                                "linkID":"LFCE8A35C88A6A96FD39B621T0000000000100000001",
                                "linkName":"pub-test-158",
                                "assignedUsers":"@everybody",
                                "role":"viewer",
                                "type":"publiclink",
                                "createdTime":"2015-06-05T21:04:56Z",
                                "expirationTime":"2016-02-15T01:02:03Z",
                                "lastModifiedTime":"2015-06-10T22:01:08Z",
                                "ownedBy":{
                                    "id":"U0EAA20910FAF3052ACB79E4T00000000001",
                                    "displayName":"User AA",
                                    "type":"user"
                                },
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Link ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-{linkId}-put",
                "x-filename-id":"documents-api-1.2-publiclinks-linkid-put"
            },
            "delete":{
                "summary":"Delete Public Link",
                "description":"<p>Delete a specific public link.</p>",
                "parameters":[
                    {
                        "name":"linkId",
                        "in":"path",
                        "description":"Globally unique identifier (GUID) for the public link.",
                        "type":"string",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"<p>The request was fulfilled.</p>",
                        "schema":{
                            "$ref":"#/definitions/PublicLinkDeleteResponse"
                        },
                        "examples":{
                            "application/json":{
                                "linkID":"LD86738D81BB59C8FA9A9497T0000000000100000001",
                                "type":"publiclink",
                                "errorCode":"0"
                            }
                        }
                    },
                    "400":{
                        "description":"<p>Request parameters are not formatted correctly.</p>"
                    },
                    "403":{
                        "description":"<p>Forbidden if the user does not have read permission.</p>"
                    },
                    "404":{
                        "description":"<p>Link ID is not found.</p>"
                    }
                },
                "tags":[
                    "Publiclinks"
                ],
                "x-internal-id":"documents-api-1.2-publiclinks-{linkId}-delete",
                "x-filename-id":"documents-api-1.2-publiclinks-linkid-delete"
            }
        }
    },
    "definitions":{
        "CollaborationConfigurationResponse":{
            "description":"The response body includes information about Collaboration configurations.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "cListURL":{
                    "type":"string",
                    "description":"Collaboration cList URL."
                },
                "clientURL":{
                    "type":"string",
                    "description":"Collaboration client URL."
                },
                "oAuthCListURL":{
                    "type":"string",
                    "description":"Collaboration OAuth cList URL."
                },
                "oAuthClientURL":{
                    "type":"string",
                    "description":"Collaboration OAuth client URL."
                },
                "restURL":{
                    "type":"string",
                    "description":"Collaboration REST URL."
                },
                "serviceURL":{
                    "type":"string",
                    "description":"Collaboration Service URL."
                }
            }
        },
        "ContentDeliveryNetworkResponse":{
            "description":"Content Delivery Network configuration description.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "domain":{
                    "type":"string",
                    "description":"Content Delivery Network's URL."
                },
                "description":{
                    "type":"string",
                    "description":"The description of the Content Delivery Network."
                }
            }
        },
        "GetNotificationEmailResponse":{
            "description":"Get email notification configuration response.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "disableEmailNotifications":{
                    "type":"string",
                    "description":"Returns <code>true</code> if email notification is disabled. Returns <code>false</code> otherwise."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>config</code>."
                }
            }
        },
        "SetNotificationEmailRequest":{
            "description":"Set email notification configuration request.",
            "properties":{
                "disableEmailNotifications":{
                    "type":"string",
                    "description":"Set to <code>true</code> if email notification needs to be disabled. Set to <code>false</code> otherwise."
                }
            }
        },
        "SetNotificationEmailResponse":{
            "description":"Set email notification configuration response.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>config</code>."
                }
            }
        },
        "PostClientApplicationResponse":{
            "description":"Metadata about a specific client application",
            "properties":{
                "createdTime":{
                    "type":"string",
                    "description":"Date the client application was created."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the client application."
                },
                "isEnabled":{
                    "type":"string",
                    "description":"Flag to indicate if the client application is enabled/disabled."
                },
                "name":{
                    "type":"string",
                    "description":"Client application name."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the client application was last modified."
                }
            }
        },
        "GetClientApplicationsResponse":{
            "description":"Metadata of the existing client applications",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of client applications returned."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "hasMore":{
                    "type":"string",
                    "description":"Indicates if all the client applications were returned. This is zero (0), if all the client applications were returned. Otherwise, it will be one (1), indicating that there are more records available."
                },
                "items":{
                    "type":"array",
                    "description":"List of client applications.",
                    "items":{
                        "$ref":"#/definitions/ClientApplicationResponse"
                    }
                },
                "limit":{
                    "type":"string",
                    "description":"Maximum number of client applications which could be returned."
                },
                "links":{
                    "type":"array",
                    "description":"Links for the client applications.",
                    "items":{
                        "$ref":"#/definitions/ClientApplicationsLinkDetails"
                    }
                },
                "offset":{
                    "type":"string",
                    "description":"The point at which to begin the list of items or page of results from the complete set."
                },
                "totalResults":{
                    "type":"string",
                    "description":"Total number of aggregated client applications returned."
                }
            }
        },
        "ClientApplicationResponse":{
            "description":"Metadata about a specific client application",
            "properties":{
                "createdTime":{
                    "type":"string",
                    "description":"Date the client application was created."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the client application."
                },
                "isEnabled":{
                    "type":"string",
                    "description":"Flag to indicate if the client application is enabled/disabled."
                },
                "name":{
                    "type":"string",
                    "description":"Client application name."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the client application was last modified."
                },
                "links":{
                    "type":"array",
                    "description":"Links for the client application.",
                    "items":{
                        "$ref":"#/definitions/ClientApplicationLinkDetails"
                    }
                }
            }
        },
        "ClientApplicationLinkDetails":{
            "description":"Links for the client application.",
            "properties":{
                "rel":{
                    "type":"string",
                    "description":"The type of link, this will be <code>self</code> and <code>canonical</code>"
                },
                "href":{
                    "type":"string",
                    "description":"The URL corresponding to the link type."
                }
            }
        },
        "ClientApplicationsLinkDetails":{
            "description":"Links for the client applications.",
            "properties":{
                "rel":{
                    "type":"string",
                    "description":"The type of link, this will be <code>self</code> and <code>canonical</code>"
                },
                "href":{
                    "type":"string",
                    "description":"The URL corresponding to the link type."
                }
            }
        },
        "DeleteClientApplicationResponse":{
            "description":"Delete a client application",
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the client application."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>clientApplication</code>."
                }
            }
        },
        "SitesCreateBody":{
            "description":"The request body defines details of the site to be created.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"<p>Name of the site to be created.</p><p>The following restrictions apply to site names:<ul><li>Site name can&#39;t start or end with spaces.</li><li>The length of the name can&#39;t exceed 250 characters.</li><li>Site name isn&#39;t case-sensitive; that is, <code>My Site</code> and <code>MY SITE</code> are considered identical.</li></ul></p><p>Don&#39;t use the following characters:</p><p><table><tr><td>&nbsp;&#47;</td><td>&nbsp;&#92;</td><td>&nbsp;&#60;</td><td>&nbsp;&#62;</td><td>&nbsp;&#42;</td><td>&nbsp;&#34;</td></tr><tr><td>&nbsp;&#63;</td><td>&nbsp;&#58;</td><td>&nbsp;&#46;</td><td>&nbsp;&#46;&#46;</td><td>&nbsp;&#124;</td></tr></table></p><p>The following strings are also not allowed in site names:</p></p><ul><li>documents</li><li>sites</li><li>authsite</li><li>mobileauthsite</li><li>_sitescloud</li><li>_sitesclouddelivery</li><li>_comps</li><li>_components</li><li>_compdelivery</li><li>_idcservice</li><li>scstemplate_*</li><li>CON</li><li>PRN</li><li>AUX</li><li>CLOCK$</li><li>NUL</li><li>NULL</li><li>COM0</li><li>COM1</li><li>COM2</li><li>COM3</li><li>COM4</li><li>COM5</li><li>COM6</li><li>COM7</li><li>COM8</li><li>COM9</li><li>LPT0</li><li>LPT1</li><li>LPT2</li><li>LPT3</li><li>LPT4</li><li>LPT5</li><li>LPT6</li><li>LPT7</li><li>LPT8</li><li>LPT9</li><li>.DS_STORE</li><li>Users</li><li>_shortcuts</li><li>REALITEMS</li><li>Personal Libraries</li><li>Shared By Me</li><li>Shared With Me</li><li>Favorites</li><li>Trash</li></ul></p>",
                    "maxLength":250
                },
                "description":{
                    "type":"string",
                    "description":"Description of the site to be created.",
                    "maxLength":2000
                },
                "copyUpdates":{
                    "type":"string",
                    "description":"Flag indicating whether updates from the source site should be copied (1) or not (0) to the new site."
                }
            },
            "required":[
                "name"
            ]
        },
        "SiteCreateResponse":{
            "description":"<p>The response includes details on the created site.</p>",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the site."
                },
                "name":{
                    "type":"string",
                    "description":"Site name."
                },
                "description":{
                    "type":"string",
                    "description":"Site description."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>site</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the site was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the site was last modified."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "pseudoOwnedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "User":{
            "description":"User information",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the user."
                },
                "displayName":{
                    "type":"string",
                    "description":"The display name for the user."
                },
                "loginName":{
                    "type":"string",
                    "description":"The login name for the user."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>user</code>."
                }
            }
        },
        "SitesCreateFromTemplateBody":{
            "description":"The request body defines details of the site to be created.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"<p>Name of the site to be created.</p><p>The following restrictions apply to site names:<ul><li>Site name can&#39;t start or end with spaces.</li><li>The length of the name can&#39;t exceed 250 characters.</li><li>Site name isn&#39;t case-sensitive; that is, <code>My Site</code> and <code>MY SITE</code> are considered identical.</li></ul></p><p>Don&#39;t use the following characters:</p><p><table><tr><td>&nbsp;&#47;</td><td>&nbsp;&#92;</td><td>&nbsp;&#60;</td><td>&nbsp;&#62;</td><td>&nbsp;&#42;</td><td>&nbsp;&#34;</td></tr><tr><td>&nbsp;&#63;</td><td>&nbsp;&#58;</td><td>&nbsp;&#46;</td><td>&nbsp;&#46;&#46;</td><td>&nbsp;&#124;</td></tr></table></p><p>The following strings are also not allowed in site names:</p></p><ul><li>documents</li><li>sites</li><li>authsite</li><li>mobileauthsite</li><li>_sitescloud</li><li>_sitesclouddelivery</li><li>_comps</li><li>_components</li><li>_compdelivery</li><li>_idcservice</li><li>scstemplate_*</li><li>CON</li><li>PRN</li><li>AUX</li><li>CLOCK$</li><li>NUL</li><li>NULL</li><li>COM0</li><li>COM1</li><li>COM2</li><li>COM3</li><li>COM4</li><li>COM5</li><li>COM6</li><li>COM7</li><li>COM8</li><li>COM9</li><li>LPT0</li><li>LPT1</li><li>LPT2</li><li>LPT3</li><li>LPT4</li><li>LPT5</li><li>LPT6</li><li>LPT7</li><li>LPT8</li><li>LPT9</li><li>.DS_STORE</li><li>Users</li><li>_shortcuts</li><li>REALITEMS</li><li>Personal Libraries</li><li>Shared By Me</li><li>Shared With Me</li><li>Favorites</li><li>Trash</li></ul></p>"
                },
                "description":{
                    "type":"string",
                    "description":"Description of the site to be created."
                },
                "copyUpdates":{
                    "type":"string",
                    "description":"Flag indicating whether updates from the source site should be copied (1) or not (0) to the new site."
                }
            },
            "required":[
                "name"
            ]
        },
        "SiteCreateFromTemplateResponse":{
            "description":"<p>The response includes details on the created site.</p>",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the site."
                },
                "name":{
                    "type":"string",
                    "description":"Site name."
                },
                "description":{
                    "type":"string",
                    "description":"Site description."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>site</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the site was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the site was last modified."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "pseudoOwnedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "FolderChangeOwnershipBody":{
            "description":"<p>The request body defines details of the change ownership of the folder request. All parameters are required.</p>",
            "properties":{
                "targetUserID":{
                    "type":"string",
                    "description":"(Required) Specify the globally unique identifier (GUID) or the login name of the new owner of the folder."
                }
            },
            "required":[
                "targetUserID"
            ]
        },
        "FolderChangeOwnershipResponse":{
            "description":"The response body includes information about the change ownership of the folder.",
            "properties":{
                "targetUserID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) or the login name of the new owner of the folder."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the folder that was changed."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderBulkCreateBody":{
            "description":"The request body defines details of bulk create folder request.",
            "properties":{
                "folders":{
                    "type":"array",
                    "description":"(Required) The list of folders to be created under the same parent. A maximum of 50 folders is allowed per request.",
                    "items":{
                        "$ref":"#/definitions/FolderBulkCreateBodyArrayItem"
                    },
                    "minItems":1,
                    "maxItems":50
                }
            },
            "required":[
                "folders"
            ]
        },
        "FolderBulkCreateBodyArrayItem":{
            "description":"The request body defines details of the bulk create folder request. <b>Bold</b> indicates a required value.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"(Required) Specify the name of the newly created folder.",
                    "maxLength":255
                },
                "description":{
                    "type":"string",
                    "description":"(Optional) Specify a description for the newly created folder.",
                    "maxLength":2000
                }
            },
            "required":[
                "name"
            ]
        },
        "FolderBulkCreateResponse":{
            "description":"The response body includes information about all created folders.",
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"The subfolders created in the folder.",
                    "items":{
                        "$ref":"#/definitions/BulkCreateFoldersItemsDefinition"
                    }
                }
            }
        },
        "BulkCreateFoldersItemsDefinition":{
            "description":"The subfolders created in the folder.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "name":{
                    "type":"string",
                    "description":"Folder name."
                },
                "description":{
                    "type":"string",
                    "description":"Folder description."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent  folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the folder was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the folder was last modified."
                },
                "childItemsCount":{
                    "type":"string",
                    "description":"Number of files and folders contained in the folder."
                },
                "childFolderCount":{
                    "type":"string",
                    "description":"Number of folders contained in the folder."
                },
                "childFileCount":{
                    "type":"string",
                    "description":"Number of files contained in the folder."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the folder in bytes, including all of the files and folders contained in the folder."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "links":{
                    "type":"array",
                    "description":"Links for the folder.",
                    "items":{
                        "$ref":"#/definitions/FoldersLinkDetails"
                    }
                }
            }
        },
        "FoldersLinkDetails":{
            "description":"Links for a folder.",
            "properties":{
                "rel":{
                    "type":"string",
                    "description":"The type of link, this will be <code>self</code>, <code>canonical</code>, <code>parent</code> and <code>child</code>"
                },
                "href":{
                    "type":"string",
                    "description":"The URL corresponding to the link type."
                }
            }
        },
        "FolderCreateBulkZipBody":{
            "description":"The request body defines details of what files are copied into the zip.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"(Required) A comma seperated list of globally unique identifiers (GUIDs)to be copied into the zip. The list can contain file and folder GUIDs that are children of the <code>folderId</code>. The <code>self</code> folder is not allowed."
                }
            },
            "required":[
                "idList"
            ]
        },
        "FolderCreateBulkZipResponse":{
            "description":"The response body includes information about the created zip job.",
            "properties":{
                "Location":{
                    "type":"string",
                    "description":"The URL to access the status for this job."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"The prefixed GUID of the parent folder for the zip job."
                },
                "idList":{
                    "type":"string",
                    "description":"The list of file and folder prefixed GUIDs attempted to be copied into the zip file."
                },
                "parentID":{
                    "type":"string",
                    "description":"The GUID of the parent folder for the zip job."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                }
            }
        },
        "FolderStatusBulkZipResponse":{
            "description":"The response body includes information about the bulk zip job.",
            "type":"object",
            "properties":{
                "completed":{
                    "type":"boolean",
                    "description":"A boolean indicating if the job in complete"
                },
                "completedPercentage":{
                    "type":"integer",
                    "description":"A number between 0 and 100, capturing how much of the process has been completed."
                },
                "details":{
                    "$ref":"#/definitions/BulkZipFileDetails"
                },
                "items":{
                    "$ref":"#/definitions/BulkZipItemsDetails"
                },
                "links":{
                    "$ref":"#/definitions/BulkZipLinkDetails"
                },
                "progress":{
                    "type":"string",
                    "description":"The state of the job. This can be one of the following: SUCCEEDED,FAILED,PROCESSING,PENDING,ABORTED,BLOCKED."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "BulkZipFileDetails":{
            "description":"Information about the zip file.",
            "properties":{
                "filename":{
                    "type":"string",
                    "description":"The suggested filename when the zip is downloaded."
                },
                "filesize":{
                    "type":"integer",
                    "description":"The file size of zip to be downloaded."
                }
            }
        },
        "BulkZipItemsDetails":{
            "description":"Optional array of files globally unique identifiers that are not copied to the zip file.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"The globally unique identifier of the file not copied to the zip."
                },
                "error":{
                    "type":"string",
                    "description":"Currently states <code>Item not available</code>."
                }
            }
        },
        "BulkZipLinkDetails":{
            "description":"Links for a completed job.",
            "properties":{
                "href":{
                    "type":"string",
                    "description":"The URL to download the zip file."
                },
                "rel":{
                    "type":"string",
                    "description":"The relation, this will be <code>enclosure</code>"
                },
                "method":{
                    "type":"string",
                    "description":"The method to access the URL, this will be <code>GET</code>"
                },
                "mediaType":{
                    "type":"string",
                    "description":"The format of the download, this will be <code>application/zip</code>"
                }
            }
        },
        "FolderDefinition":{
            "description":"Folder metadata information.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"Folder name."
                },
                "description":{
                    "type":"string",
                    "description":"Folder description."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the folder in bytes, including all of the files and folders contained in the folder."
                },
                "childitemsCount":{
                    "type":"string",
                    "description":"Number of items contained in the folder."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the folder was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the folder was last modified."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "FolderDefinitionWithConversation":{
            "description":"Folder metadata information.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"Folder name."
                },
                "description":{
                    "type":"string",
                    "description":"Folder description."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the folder in bytes, including all of the files and folders contained in the folder."
                },
                "childitemsCount":{
                    "type":"string",
                    "description":"Number of items contained in the folder."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the folder was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the folder was last modified."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "conversationID":{
                    "type":"string",
                    "description":"Conversation ID associated with this folder or a parent folder."
                },
                "isConversationInherited":{
                    "type":"boolean",
                    "description":"Flag indicating whether the conversation ID is associated with the current folder (false) or if the conversation ID is associated with a parent folder (true)."
                }
            }
        },
        "FolderResponse":{
            "description":"The response body includes information about the folder.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FolderDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderResponseWithConversation":{
            "description":"The response body includes information about the folder.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FolderDefinitionWithConversation"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderCreateBody":{
            "description":"The request body defines details of the create folder request. <b>Bold</b> indicates a required value.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"(Required) Specify the name of the newly created folder."
                },
                "description":{
                    "type":"string",
                    "description":"(Optional) Specify a description for the newly created folder."
                }
            },
            "required":[
                "name"
            ]
        },
        "FolderEditBody":{
            "description":"The request body defines details of the edit folder request. There are no required attributes.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"(Optional) Specify the name to assign to the folder."
                },
                "description":{
                    "type":"string",
                    "description":"(Optional) Specify a description for the folder."
                }
            }
        },
        "FolderDeleteResponse":{
            "description":"",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the deleted folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderCopyBody":{
            "description":"The request body defines details of the copy folder request. <b>Bold</b> indicates a required value.",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"(Required) Specify the globally unique identifier (GUID) of the destination folder."
                },
                "duplicateResolution":{
                    "type":"string",
                    "description":"(Optional) Specify the TimeStampSuffix option. The name of the copied folder is given a 6-digit suffix from the system timestamp."
                }
            },
            "required":[
                "destinationID"
            ]
        },
        "FolderCopyResponse":{
            "description":"",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the destination folder."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the newly created folder."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderMoveBody":{
            "description":"<p>The request body defines details of the move folder request. <b>Bold</b> indicates a required value.</p>",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"(Required) Specify the globally unique identifier (GUID) of the destination folder."
                },
                "duplicateResolution":{
                    "type":"string",
                    "description":"(Optional) Specify the TimeStampSuffix option. The name of the moved folder is given a 6-digit suffix from the system timestamp."
                }
            },
            "required":[
                "destinationID"
            ]
        },
        "FolderMoveResponse":{
            "description":"",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the destination folder."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "HomeFolderContents":{
            "description":"",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "totalResults":{
                    "type":"string",
                    "description":"Total number of items in the response."
                },
                "ownerFolderID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the folder. If the referenced folder is the user&#39;s home folder, the value is <code>self</code>.</p>"
                },
                "hasMore":{
                    "type":"string",
                    "description":"The number of users found."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"The files and subfolders in the folder.",
                    "items":{
                        "$ref":"#/definitions/FileAndSubFoldersItemsDefinition"
                    }
                }
            }
        },
        "SpecificFolderContents":{
            "description":"",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "totalResults":{
                    "type":"string",
                    "description":"Total number of items in the response."
                },
                "hasMore":{
                    "type":"string",
                    "description":"The number of users found."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent  folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"Folder name."
                },
                "description":{
                    "type":"string",
                    "description":"Folder description."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the folder in bytes, including all of the files and folders contained in the folder."
                },
                "childitemsCount":{
                    "type":"string",
                    "description":"Number of items contained in the folder."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date the folder was created."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Date the folder was last modified."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "items":{
                    "type":"array",
                    "description":"The files and subfolders in the folder.",
                    "items":{
                        "$ref":"#/definitions/FileAndSubFoldersItemsDefinition"
                    }
                }
            }
        },
        "SearchFolderContents":{
            "description":"",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "offset":{
                    "type":"string",
                    "description":"The point at which to begin the list of items or page of results from the complete set."
                },
                "totalCount":{
                    "type":"string",
                    "description":"Total number of items in the search."
                },
                "items":{
                    "type":"array",
                    "description":"The folders and files returned by the search.",
                    "items":{
                        "$ref":"#/definitions/FileAndSubFoldersItemsDefinition"
                    }
                }
            }
        },
        "SearchSpecificFolderContents":{
            "description":"",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "offset":{
                    "type":"string",
                    "description":"The point at which to begin the list of items or page of results from the complete set."
                },
                "totalCount":{
                    "type":"string",
                    "description":"Total number of items in the search."
                },
                "items":{
                    "type":"array",
                    "description":"The files and subfolders in the folder hierarchy.",
                    "items":{
                        "$ref":"#/definitions/FileAndSubFoldersItemsDefinition"
                    }
                }
            }
        },
        "FolderGetTagsResponse":{
            "description":"The response body includes information about folder tags.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the original folder."
                },
                "tags":{
                    "type":"string",
                    "description":"Tags associated with this folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                }
            }
        },
        "FolderSetTagsBody":{
            "description":"The request body defines details of the set tags values request.",
            "properties":{
                "setTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be set to this folder."
                }
            }
        },
        "FolderSetTagsResponse":{
            "description":"The response body includes information about folder tags set.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                }
            }
        },
        "FolderEditTagsBody":{
            "description":"The request body defines details of the edit tags values request.",
            "properties":{
                "addTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be added to this folder."
                },
                "removeTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be removed from this folder."
                }
            }
        },
        "FolderEditTagsResponse":{
            "description":"The response body includes information about folder edit tags results.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                }
            }
        },
        "FolderDeleteTagsResponse":{
            "description":"The response body includes information about folder delete tags results.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                }
            }
        },
        "FolderCollectionResponse":{
            "description":"The response body includes information about the assign collection to a folder operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FolderAssignValuesBody":{
            "type":"object",
            "description":"<p>One or more field names. For example, you can reference the collection and field names independently:  <p> &#123;</p><p> &#34;collection&#34;:&#32;&#32;&#32;&#32;&#34;CollectionA,&#34;</p><p>&#34;FieldA1&#34;:&#32;&#32;&#32;&#32;&#34;Value1,&#34;</p><p>&#34;FieldA2&#34;:&#32;&#32;&#32;&#32;&#34;Value2&#34;</p><p> &#125;</p></p><p>Alternatively, you can specify the collection and field name with each field reference:</p><p> &#123;</p><p> &#34;CollectionA.FieldA1&#34;:&#32;&#32;&#32;&#32;&#34;Value1,&#34;</p><p>&#34;CollectionA.FieldA2&#34;:&#32;&#32;&#32;&#32;&#34;Value2&#34;</p><p> &#125;</p><p>For user personal collections, the collection name must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.</p>"
        },
        "FolderGetCollectionResponse":{
            "description":"The response body includes information about the get collection values operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "metadata":{
                    "$ref":"#/definitions/Collections"
                }
            }
        },
        "Collections":{
            "type":"object",
            "description":"Assigned collections.",
            "additionalProperties":{
                "$ref":"#/definitions/Collection"
            }
        },
        "Collection":{
            "description":"Collection fields and values, where keys are the actual field name.",
            "type":"object",
            "additionalProperties":true
        },
        "FolderGetAssignedCollectionResponse":{
            "description":"The response body includes information about the get assigned collections operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "metadataFields":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CollectionDefinition"
                    }
                }
            }
        },
        "CollectionDefinition":{
            "description":"Metadata collection definition.",
            "type":"object",
            "properties":{
                "type":{
                    "type":"string",
                    "description":"Item type <code>collection</code>."
                },
                "isEnabled":{
                    "type":"string",
                    "description":"Collection enable (<code>1</code>) or disable (<code>0</code>) status."
                },
                "isInherited":{
                    "type":"string",
                    "description":"Collection inherited (<code>1</code>) or directly assigned (<code>0</code>) status."
                },
                "items":{
                    "type":"array",
                    "description":"List of field definitions.",
                    "items":{
                        "$ref":"#/definitions/CollectionFieldDefinition"
                    }
                }
            }
        },
        "CollectionFieldDefinition":{
            "description":"Metadata fields definition.",
            "type":"object",
            "properties":{
                "type":{
                    "type":"string",
                    "description":"Item type <code>field</code>."
                },
                "fieldName":{
                    "type":"string",
                    "description":"Field name."
                },
                "fieldDescription":{
                    "type":"string",
                    "description":"Field description."
                },
                "fieldType":{
                    "type":"string",
                    "description":"Field type."
                },
                "isEnabled":{
                    "type":"string",
                    "description":"Field enable (1) or disable (0) status."
                }
            }
        },
        "FolderCreateConversationBody":{
            "description":"The request body defines details of the create folder conversation request.",
            "properties":{
                "conversationName":{
                    "type":"string",
                    "description":"Specify the name of the newly created folder conversation.",
                    "maxLength":256
                }
            },
            "required":[
                "conversationName"
            ]
        },
        "FolderCreateConversationResponse":{
            "description":"",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "conversationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the newly created conversation."
                },
                "conversationName":{
                    "type":"string",
                    "description":"Conversation name."
                },
                "conversationAppLink":{
                    "type":"string",
                    "description":"Applink for the conversation."
                },
                "conversationAppLinkToken":{
                    "type":"string",
                    "description":"Access token that is valid for this applink for a limited duration."
                },
                "listOfRemovedInactiveUsers":{
                    "type":"string",
                    "description":"List of inactive users."
                },
                "listOfUnknownUsers":{
                    "type":"string",
                    "description":"List of unknown users."
                }
            }
        },
        "FolderListResponseWithConversation":{
            "description":"The response body includes information about the folder.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FolderDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "childFileCount":{
                    "type":"number",
                    "description":"The number of files in the folder."
                },
                "childFolderCount":{
                    "type":"number",
                    "description":"The number of folders in the folder."
                },
                "childItemsCount":{
                    "type":"number",
                    "description":"The total number of files and folders in the folder."
                },
                "status":{
                    "type":"string",
                    "description":"The status of the folder, <code>exists</code>, <code>missing</code> or <code>inTrash</code>. Only returned if requested with <code>checkStatus=1</code>"
                }
            }
        },
        "FileAndSubFoldersItemsDefinition":{
            "description":"The files and subfolders in the folder.",
            "properties":{
                "type":{
                    "type":"string",
                    "description":"Item type, either <code>folder</code> or <code>file</code>."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder or file."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent  folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"Folder or file name."
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "createdTime":{
                    "type":"string",
                    "description":"Folder or file creation date."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"Folder or file last modified date."
                },
                "size":{
                    "type":"string",
                    "description":"<p>If the item is a file, the size of the file in bytes. If the item is a folder, then the size of the folder including all of the files and sub folders contained in the folder.</p>"
                },
                "childItemsCount":{
                    "type":"string",
                    "description":"Number of items contained in the folder."
                },
                "version":{
                    "type":"string",
                    "description":"If the item is a file, the number of versions of the file."
                }
            }
        },
        "ApplinkBody":{
            "description":"<p>The request body defines the details of the create applink request. <b>Bold</b> indicates a required value.</p>",
            "properties":{
                "assignedUser":{
                    "type":"string",
                    "description":"Identifier for the user. This can be a globally unique identifier (GUID) or some other identifier."
                },
                "role":{
                    "type":"string",
                    "description":"<p>Access level for the shared item (role keywords must be lowercase):<ul><li>viewer (default)</li><li>downloader</li><li>contributor</li><li>manager</li></ul></p>",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor",
                        "manager"
                    ]
                },
                "userLocale":{
                    "type":"string",
                    "description":"Locale used for the applink. Locale can affect how values, such as time, are represented."
                },
                "userTimeZone":{
                    "type":"string",
                    "description":"Time zone used for the applink. The time zone can affect how time values are interpreted."
                }
            },
            "required":[
                "assignedUser"
            ]
        },
        "ApplinkResponse":{
            "description":"The response body includes information about the applink.",
            "properties":{
                "appLinkID":{
                    "type":"string",
                    "description":"This element uniquely identifies the resource."
                },
                "accessToken":{
                    "type":"string",
                    "description":"This element provides access to the resource and expires after 15 minutes. You can refresh the access token any number of times within the time period defined by the refresh token (24 hours)."
                },
                "appLinkUrl":{
                    "type":"string",
                    "description":"The URL of the resource."
                },
                "refreshToken":{
                    "type":"string",
                    "description":"This element enables you to request a new access token when the current access token expires. The refreshed token expires after 24 hours."
                },
                "role":{
                    "type":"string",
                    "description":"Access level for the shared item."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the shared item."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>applink</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "ApplinkTokenResponse":{
            "description":"The response body includes a refreshed access token.",
            "properties":{
                "accessToken":{
                    "type":"string",
                    "description":"This element provides access to the resource and expires after 15 minutes. You can refresh the access token any number of times within the time period defined by the refreshed token (24 hours)."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>applink</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileExtractZipBody":{
            "description":"The request body defines how the files in the zip are extracted.",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"Specify the globally unique identifier (GUID) of the destination folder to extract files. By default the zip contents will be extracted to the same folder as the zip file."
                },
                "duplicateResolution":{
                    "type":"string",
                    "description":"Specify how name conflicts between the zip contents and existing files are handled during zip extraction, the default is <code>ResolveDuplicates</code>:<ul><li><code>ResolveDuplicates</code> the extraction will resolve the conflicting name to append a number new file name.</li><li><code>ReviseDuplicates</code> the extraction will create a new revision of the conflicting document.</li><li><code>SkipDuplicates</code> the extraction will skip the conflicting file name</li></ul>"
                }
            }
        },
        "FileExtractZipResponse":{
            "description":"The response body includes information about the zip extraction job.",
            "properties":{
                "Location":{
                    "type":"string",
                    "description":"The URL to access the status for this job."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"The GUID of the zip file to be extracted."
                },
                "destinationID":{
                    "type":"string",
                    "description":"The GUID of the folder where the zip will be extracted."
                },
                "jobId":{
                    "type":"string",
                    "description":"The GUID of the extraction job."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileStatusExtractZipResponse":{
            "description":"The response body includes information about the zip extract job.",
            "properties":{
                "completed":{
                    "type":"boolean",
                    "description":"A boolean indicating if the job in complete"
                },
                "completedPercentage":{
                    "type":"integer",
                    "description":"A number between 0 and 100, capturing how much of the process has been completed."
                },
                "progress":{
                    "type":"string",
                    "description":"A word indicating the state of the extraction job. Possibilities include: <ul><li><code>SUCCEEDED</code> -- Job Completed Successfully</li><li><code>FAILED</code> -- Job Failed</li><li><code>PROCESSING</code> -- Job is processing</li><li><code>PENDING</code> -- Job is pending</li><li><code>ABORTED</code> -- Job aborted</li></ul>."
                },
                "message":{
                    "type":"string",
                    "description":"A brief message about the status of the extraction job."
                },
                "filesProcessed":{
                    "type":"integer",
                    "description":"The number of files processed by the extraction job."
                },
                "filesIgnored":{
                    "type":"integer",
                    "description":"The number of files ignored by the extraction job."
                },
                "filesCreated":{
                    "type":"integer",
                    "description":"The number of files created by the extraction job."
                },
                "filesNameAdjusted":{
                    "type":"integer",
                    "description":"The number of extracted file names that were renamed by the extraction job."
                },
                "filesVersioned":{
                    "type":"integer",
                    "description":"The number of existing files that had the version increased by the extraction job."
                },
                "filesOverwritten":{
                    "type":"integer",
                    "description":"The number of existing files that were over written by the extraction job."
                },
                "filesSkipped":{
                    "type":"integer",
                    "description":"The number of files not extracted by the extraction job."
                },
                "skippedItems":{
                    "type":"object",
                    "description":"An array of zip filenames that were skipped by the extraction job.",
                    "allOf":{
                        "$ref":"#/definitions/FilesSkippedIgnoredByExtractZip"
                    }
                },
                "ignoredItems":{
                    "type":"object",
                    "description":"An array of zip filenames that were ignored by the extraction job.",
                    "allOf":{
                        "$ref":"#/definitions/FilesSkippedIgnoredByExtractZip"
                    }
                }
            }
        },
        "FilesSkippedIgnoredByExtractZip":{
            "description":"Information about why a file was not extracted by the extraction job",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"The filename in the zip that was not extracted."
                },
                "type":{
                    "type":"string",
                    "description":"The object type, <code>file</code> or <code>directory</code> that was not extracted."
                },
                "error":{
                    "type":"string",
                    "description":"A brief error message about the status of this item."
                }
            }
        },
        "FileDefinition":{
            "description":"File information",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"File name."
                },
                "mimeType":{
                    "type":"string",
                    "description":"File format of the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the file in bytes."
                },
                "version":{
                    "type":"string",
                    "description":"File version."
                },
                "createdTime":{
                    "type":"string",
                    "description":"File creation date."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"File last modified date."
                },
                "reservationTime":{
                    "type":"string",
                    "description":"Time the file was reserved (excluded from response data if the file is not reserved)."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "reservedBy":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "FileDefinitionWithConversation":{
            "description":"File information",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"File name."
                },
                "mimeType":{
                    "type":"string",
                    "description":"File format of the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "size":{
                    "type":"string",
                    "description":"Size of the file in bytes."
                },
                "version":{
                    "type":"string",
                    "description":"File version."
                },
                "createdTime":{
                    "type":"string",
                    "description":"File creation date."
                },
                "modifiedTime":{
                    "type":"string",
                    "description":"File last modified date."
                },
                "reservationTime":{
                    "type":"string",
                    "description":"Time the file was reserved (excluded from response data if the file is not reserved)."
                },
                "createdBy":{
                    "$ref":"#/definitions/User"
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                },
                "modifiedBy":{
                    "$ref":"#/definitions/User"
                },
                "reservedBy":{
                    "$ref":"#/definitions/User"
                },
                "conversationID":{
                    "type":"string",
                    "description":"Conversation ID associated with this file or a parent folder."
                },
                "isConversationInherited":{
                    "type":"boolean",
                    "description":"Flag indicating whether the conversation ID is associated with the current file (false) or if the conversation ID is associated with a parent folder (true)."
                },
                "items":{
                    "type":"array",
                    "description":"If <code>includeRenditions</code> was true on the request, an array of rendition data is included in the response.",
                    "items":{
                        "$ref":"#/definitions/RenditionDataDefinition"
                    }
                }
            }
        },
        "FileResponse":{
            "description":"The response body includes information about the file.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FileDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileResponseWithConversation":{
            "description":"The response body includes information about the file.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FileDefinitionWithConversation"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileUploadResponse":{
            "description":"The response body includes information about the file.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/FileDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "errorMessage":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileEditBody":{
            "description":"<p>The request body defines details of the edit file request. There are no required attributes.</p>",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"(Optional) Specify the name to assign to the file."
                }
            }
        },
        "FileDeleteResponse":{
            "description":"The response body includes information about the deleted file.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the deleted file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileCopyBody":{
            "description":"<p>The request body defines the details of the copy file request. <b>Bold</b> indicates a required value.</p>",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"(Required) Specify the globally unique identifier (GUID) of the destination folder."
                },
                "version":{
                    "type":"string",
                    "description":"(Optional) Specify the version number of the file to copy. If the version is not specified, the latest version is used."
                },
                "duplicateResolution":{
                    "type":"string",
                    "description":"(Optional) Specify the <code>TimeStampSuffix</code> option. The name of the copied file is given a 6-digit suffix from the system timestamp."
                }
            },
            "required":[
                "destinationID"
            ]
        },
        "FileCopyResponse":{
            "description":"The response body includes information about the copied file.",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the destination folder."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the newly created file."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileMoveBody":{
            "description":"<p>The request body defines the details of the move file request. <b>Bold</b> indicates a required value.</p>",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"(Required) Specify the globally unique identifier (GUID) of the destination folder."
                },
                "duplicateResolution":{
                    "type":"string",
                    "description":"(Optional) Specify the <code>TimeStampSuffix</code> option. The name of the moved file is given a 6-digit suffix from the system timestamp."
                }
            },
            "required":[
                "destinationID"
            ]
        },
        "FileMoveResponse":{
            "description":"The response body includes information about the move operation.",
            "properties":{
                "destinationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the destination folder."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileVersionsResponse":{
            "description":"The response body includes information about the move operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "parentID":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent  folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>"
                },
                "name":{
                    "type":"string",
                    "description":"File name."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"List of File Versions.",
                    "items":{
                        "$ref":"#/definitions/FileDefinition"
                    }
                }
            }
        },
        "FileReserveResponse":{
            "description":"The response body includes information about the reserve operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "reservationDate":{
                    "type":"string",
                    "description":"<p>Globally unique identifier (GUID) for the parent folder. If the parent folder is the user&#39;s home folder, the value for <code>parentID</code> is <code>self</code>.</p>."
                },
                "reservedBy":{
                    "$ref":"#/definitions/User"
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileUnreserveBody":{
            "description":"<p>The request body defines details of the unreserve file request. <b>Bold</b> indicates a required value.</p>",
            "properties":{
                "reservedByUserID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the user who reserved the file."
                }
            },
            "required":[
                "reservedByUserID"
            ]
        },
        "FileUnreserveResponse":{
            "description":"The response body includes information about the unreserve operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FilePagesResponse":{
            "description":"The response body includes information about the unreserve operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "pages":{
                    "type":"string",
                    "description":"Number of images created for the image based preview (rendition). Typically every page is one image. Note: if the file only has an HTML5 preview, this value is zero (0)."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileGenPagesResponse":{
            "description":"The response body includes information about creating an image base preview (page renditions).",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileCustomRenditionResponse":{
            "description":"The response body includes information about the uploaded rendition.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileListCustomRenditionResponse":{
            "description":"The response body includes information about the list of renditions.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"List of renditions.",
                    "items":{
                        "$ref":"#/definitions/FileCustomRenditionDefinition"
                    }
                }
            }
        },
        "FileCustomRenditionDefinition":{
            "description":"Rendition information",
            "properties":{
                "type":{
                    "type":"string",
                    "description":"Item type <code>rendition</code>."
                },
                "name":{
                    "type":"string",
                    "description":"Rendition name."
                },
                "description":{
                    "type":"string",
                    "description":"Rendition description."
                },
                "path":{
                    "type":"string",
                    "description":"Rendition path."
                },
                "originalName":{
                    "type":"string",
                    "description":"Rendition original file name."
                }
            }
        },
        "FileHtml5PreviewResponse":{
            "description":"The response body includes information about the generated HTML5 path.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "version":{
                    "type":"string",
                    "description":"File version."
                },
                "previewUrl":{
                    "type":"string",
                    "description":"HTML5 preview path."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileGetTagsResponse":{
            "description":"The response body includes information about file tags.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "tags":{
                    "type":"string",
                    "description":"Tags associated with this file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileSetTagsBody":{
            "description":"The request body defines details of the set tags values request.",
            "properties":{
                "setTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be set to this file."
                }
            },
            "required":[
                "setTags"
            ]
        },
        "FileSetTagsResponse":{
            "description":"The response body includes information about the file tags set.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileEditTagsBody":{
            "description":"The request body defines details of the edit tags values request.",
            "properties":{
                "addTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be added to this file."
                },
                "removeTags":{
                    "type":"string",
                    "description":"Comma-separated list of tags to be removed from this file."
                }
            }
        },
        "FileEditTagsResponse":{
            "description":"The response body includes information about file edit tags results.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileDeleteTagsResponse":{
            "description":"The response body includes information about file delete tags results.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                }
            }
        },
        "FileCollectionResponse":{
            "description":"The response body includes information about the assign collection to a file operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "FileAssignValuesBody":{
            "type":"object",
            "description":"<p>One or more field names. <p>For example, you can reference the collection and field names independently:  <p> &#123;</p><p> &#34;collection&#34;:&#32;&#32;&#32;&#32;&#34;CollectionA,&#34;</p><p>&#34;FieldA1&#34;:&#32;&#32;&#32;&#32;&#34;Value1,&#34;</p><p>&#34;FieldA2&#34;:&#32;&#32;&#32;&#32;&#34;Value2&#34;</p><p> &#125;</p></p><p>Alternatively, you can specify the collection and field name with each field reference:</p><p> &#123;</p><p> &#34;CollectionA.FieldA1&#34;:&#32;&#32;&#32;&#32;&#34;Value1,&#34;</p><p>&#34;CollectionA.FieldA2&#34;:&#32;&#32;&#32;&#32;&#34;Value2&#34;</p><p> &#125;</p><p>For user personal collections, the collection name must start with <code>Personal.</code>, such as <code>Personal.MyCollection</code>.</p>"
        },
        "FileGetCollectionResponse":{
            "description":"The response body includes information about the assign collection operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "metadata":{
                    "$ref":"#/definitions/Collections"
                }
            }
        },
        "FileGetAssignedCollectionResponse":{
            "description":"The response body includes information about the get assigned collections operation.",
            "properties":{
                "idList":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the original file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "metadataFields":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CollectionDefinition"
                    }
                }
            }
        },
        "FileCreateConversationBody":{
            "description":"The request body defines details of the create file conversation request.",
            "properties":{
                "conversationName":{
                    "type":"string",
                    "description":"Specify the name of the newly created file conversation.",
                    "maxLength":256
                }
            },
            "required":[
                "conversationName"
            ]
        },
        "FileCreateConversationResponse":{
            "description":"",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "conversationID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) of the newly created conversation."
                },
                "conversationName":{
                    "type":"string",
                    "description":"Conversation name."
                },
                "conversationAppLink":{
                    "type":"string",
                    "description":"Applink for the conversation."
                },
                "conversationAppLinkToken":{
                    "type":"string",
                    "description":"Access token that is valid for this applink for a limited duration."
                },
                "listOfRemovedInactiveUsers":{
                    "type":"string",
                    "description":"List of inactive users."
                },
                "listOfUnknownUsers":{
                    "type":"string",
                    "description":"List of unknown users."
                }
            }
        },
        "FileAccessesResponse":{
            "description":"",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of accesses returned."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "hasMore":{
                    "type":"string",
                    "description":"Indicates if all accesses were returned; if all the accesses were returned, this is zero (0)."
                },
                "totalCount":{
                    "type":"string",
                    "description":"The total number of accesses for the item."
                },
                "items":{
                    "type":"array",
                    "description":"List of File Accesses.",
                    "items":{
                        "$ref":"#/definitions/FileAccessItemsDefinition"
                    }
                }
            }
        },
        "FileAccessItemsDefinition":{
            "description":"",
            "properties":{
                "accessType":{
                    "type":"string",
                    "description":"Type of the access (for example#58; preview, download)."
                },
                "accessedTime":{
                    "type":"string",
                    "description":"Date the item was accessed."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file that was accessed."
                },
                "version":{
                    "type":"string",
                    "description":"Version of the file that was accessed."
                },
                "accessedBy":{
                    "$ref":"#/definitions/User"
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors accessing the file."
                },
                "clientIP":{
                    "type":"string",
                    "description":"The client IP that accessed the file"
                },
                "refererURL":{
                    "type":"string",
                    "description":"The referring URL of the access."
                },
                "size":{
                    "type":"string",
                    "description":"The size of the accessed file."
                }
            }
        },
        "RenditionDataDefinition":{
            "description":"",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"The name of the rendition."
                },
                "type":{
                    "type":"string",
                    "description":"Can be one of the following values:<ul><li> The value <code>uithumbnail</code> is used when describing a thumbnail rendition.</li> <li>The value <code>imagepreview</code> is used when describing preview renditions.</li> <li>The value <code>responsiveimage</code> is used when describing responsive images.</li> <li>The value <code>native</code> is used when describing the the parent file or asset.</li> </li>The value <code>customrendition</code> is used when describing ad-hoc renditions added by a user</li></ul>"
                },
                "format":{
                    "type":"string",
                    "description":"The file format of a rendition."
                },
                "exists":{
                    "type":"string",
                    "description":"The status of a rendition. If the rendition has been created the value is <code>true</code> otherwise the value is <code>false</code>."
                },
                "link":{
                    "type":"string",
                    "description":"REST url to access the rendition. For <code>uithumbnail</code> and <code>responsiveimage</code> types the REST url will create the rendition if it does not exist."
                },
                "width":{
                    "type":"string",
                    "description":"The width of a rendition in pixels. The value of '-1' means the height is unknown, a value of '0' means height is not set."
                },
                "height":{
                    "type":"string",
                    "description":"The height of a rendition in pixels. The value of '-1' means the height is unknown, a value of '0' means height is not set."
                }
            }
        },
        "VersionDefinition":{
            "description":"Version information.",
            "properties":{
                "version":{
                    "type":"string",
                    "description":"Version identifier."
                },
                "lifecycle":{
                    "type":"string",
                    "description":"Indicates whether the version is <code>active</code> or <code>deprecated</code>. The default value is <code>active</code>.</p>"
                },
                "isLatest":{
                    "type":"string",
                    "description":"Indicates whether it is the latest version (<code>true</code>) or not (<code>false</code>)."
                },
                "terminationDate":{
                    "type":"string",
                    "description":"Indicates when the version will no longer be supported."
                },
                "catalog":{
                    "$ref":"#/definitions/APILinks"
                },
                "links":{
                    "type":"array",
                    "description":"List of Links.",
                    "items":{
                        "$ref":"#/definitions/APILinks"
                    }
                }
            }
        },
        "APILinks":{
            "description":"API links information.",
            "properties":{
                "ref":{
                    "type":"string",
                    "description":"Relationship."
                },
                "href":{
                    "type":"string",
                    "description":"Complete URL that uniquely defines the resource."
                }
            }
        },
        "VersionsResponse":{
            "description":"The response body includes information about the API versions operation.",
            "properties":{
                "links":{
                    "type":"array",
                    "description":"List of Versions.",
                    "items":{
                        "$ref":"#/definitions/VersionDefinition"
                    }
                }
            }
        },
        "CatalogDefinition":{
            "description":"Catalog information.",
            "properties":{
                "name":{
                    "type":"string",
                    "description":"Name of the catalog."
                },
                "links":{
                    "type":"array",
                    "description":"List of catalog links.",
                    "items":{
                        "$ref":"#/definitions/APILinks"
                    }
                }
            }
        },
        "CatalogResponse":{
            "description":"The response body includes information about the get API catalog operation.",
            "properties":{
                "links":{
                    "type":"array",
                    "description":"List of catalogs.",
                    "items":{
                        "$ref":"#/definitions/CatalogDefinition"
                    }
                }
            }
        },
        "UsersResponse":{
            "description":"Folder metadata information.",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of users found."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/User"
                    },
                    "minItems":0
                }
            }
        },
        "UserContentTransferBody":{
            "description":"User content transfer body defines what content will be transfered.",
            "properties":{
                "targetUserID":{
                    "type":"string",
                    "description":"(Required) Specify the destination <code>userID</code> where all content will be transferred. User GUID or login can be used."
                },
                "idList":{
                    "type":"string",
                    "description":"(Optional) If not passed, then <bold>all</bold> users content is transfered to the specified <code>targetUserID</code>. If a globally unique identifier (GUID) for a folder is passed, then the folder is transfered to the specified <code>targetUserID</code>. Currently only one folder can be transfered per call."
                }
            }
        },
        "UserContentTransferResponse":{
            "description":"User content transfer response.",
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "sourceUser":{
                    "$ref":"#/definitions/User"
                },
                "targetUser":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "ShareDefinition":{
            "description":"Share information",
            "properties":{
                "type":{
                    "type":"string",
                    "description":"Item type <code>share</code>."
                },
                "role":{
                    "type":"string",
                    "description":"Access level for the shared item.",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor"
                    ]
                },
                "user":{
                    "$ref":"#/definitions/UserWithLoginName"
                }
            }
        },
        "UserWithLoginName":{
            "description":"User information.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the user."
                },
                "displayName":{
                    "type":"string",
                    "description":"The display name for the user."
                },
                "loginName":{
                    "type":"string",
                    "description":"The login name for the user."
                },
                "provisioningStatus":{
                    "type":"string",
                    "description":"<p>Provisioning status for the user:</p><p><ul><li><b>active:</b> An active user that has been assigned an Oracle Content Management application role</li><li><b>inactive:</b> A user that currently has no Content Management application roles assigned.</li><li><b>deleted:</b> A user that no longer exists in the IAM/IDCS identity domain.</li><li><b>pending:</b> An external user that was invited but does not exist in the IAM/IDCS identity domain yet.</li></ul></p>"
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>user</code>."
                }
            }
        },
        "ShareFolderBody":{
            "description":"The request body defines details of the share folder request. <b>Bold</b> indicates a required value.",
            "properties":{
                "userID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the user, login name of the user, GUID for the group or a comma-separated list of the above (no more than 1000 total IDs)."
                },
                "role":{
                    "type":"string",
                    "description":"<p>Access level for the shared item:</p><p><ul><li><b>viewer:</b> Viewers can look at files, folders, and assets but can&#39;t change things.</li><li><b>downloader:</b> Downloaders can also download files and assets and save them to their own computers.</li><li><b>contributor:</b> Contributors can also modify, update, upload, and delete files or assets.</li><li><b>manager:</b> Managers have all the privileges of the other roles and can add or remove other people as members.</li></ul></p>",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor",
                        "manager"
                    ]
                },
                "message":{
                    "type":"string",
                    "description":"Optional message sent to the user."
                }
            },
            "required":[
                "userID",
                "role"
            ]
        },
        "ShareFolderResponse":{
            "description":"The response body includes share information along with user(s) or group(s) information.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "role":{
                    "type":"string",
                    "description":"Access level for the shared item."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>share</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors. Negative number indicates that sharing failed for one or more user or group (check <code>members</code> array in the response to identify those for whom sharing failed)."
                },
                "user":{
                    "$ref":"#/definitions/User"
                },
                "members":{
                    "type":"array",
                    "description":"Users or groups with whom the folder is being shared in the current request.",
                    "items":{
                        "type":"object",
                        "properties":{
                            "id":{
                                "type":"string",
                                "description":"User or group identifier as supplied in the request body&#39;s <code>userID</code> parameter."
                            },
                            "displayName":{
                                "type":"string",
                                "description":"User or group diplay name."
                            },
                            "type":{
                                "type":"string",
                                "description":"Member type, has value <code>user</code> or <code>group</code>."
                            },
                            "isSuccessful":{
                                "type":"string",
                                "description":"Whether adding this member was successful. (1) indicates success, (0) indicates failure."
                            },
                            "provisioningStatus":{
                                "type":"string",
                                "description":"<p>Provisioning status for the user:</p><p><ul><li><b>active:</b> An active user that has been assigned an Oracle Content Management application role</li><li><b>inactive:</b> A user that currently has no Content Management application roles assigned</li><li><b>deleted:</b> A user that no longer exists in the IAM/IDCS identity domain.</li><li><b>pending:</b> An external user that was invited but does not exist in the IAM/IDCS identity domain yet.</li></ul></p><p>Not returned if the type is <code>group</code>.</p>"
                            }
                        }
                    }
                }
            }
        },
        "UnshareFolderResponse":{
            "description":"The response body includes information about the unshare folder operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>share</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "ShareFolderUsersBody":{
            "description":"The request body defines details of the get shared folder users request. There are no required attributes.",
            "properties":{
                "currentOnly":{
                    "type":"string",
                    "description":"Return only users with whom the specified folder is shared explicitly (<code>true</code>) or all users who have access to the specified folder whether directly or via sharing of one of the parent folders (<code>false</code>). By default, this option is <code>false</code>."
                }
            }
        },
        "ShareFolderUsersResponse":{
            "description":"The response body includes information about the get shared folder users operation.",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>share</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ShareDefinition"
                    }
                },
                "ownedBy":{
                    "$ref":"#/definitions/UserWithLoginName"
                }
            }
        },
        "ShareFolderEditRoleBody":{
            "description":"The request body defines details of the edit shared folder user role request. <b>Bold</b> indicates a required value.",
            "properties":{
                "userID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the user, login name of the user, GUID for the group or a comma-separated list of the above (no more than 1000 total IDs)."
                },
                "role":{
                    "type":"string",
                    "description":"<p>Access level for the shared item:</p><p><ul><li><b>viewer:</b> Viewers can look at files and folders but can&#39;t change things.</li><li><b>downloader:</b> Downloaders can also download files and save them to their own computers.</li><li><b>contributor:</b> Contributors can also modify files, update files, upload new files, and delete files.</li><li><b>manager:</b> Managers have all the privileges of the other roles and can add or remove other people as members.</li></ul></p>",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor",
                        "manager"
                    ]
                },
                "message":{
                    "type":"string",
                    "description":"Optional message sent to the user."
                }
            },
            "required":[
                "userID",
                "role"
            ]
        },
        "ShareDeleteUserResponse":{
            "description":"The response body includes information about the revoke user operation.",
            "properties":{
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>share</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "members":{
                    "type":"array",
                    "description":"Users or groups whose roles are revoked in the current request.",
                    "items":{
                        "type":"object",
                        "properties":{
                            "id":{
                                "type":"string",
                                "description":"User or group identifier as supplied in the request body&#39;s <code>userID</code> parameter."
                            },
                            "displayName":{
                                "type":"string",
                                "description":"User or group diplay name."
                            },
                            "type":{
                                "type":"string",
                                "description":"Member type, has value <code>user</code> or <code>group</code>."
                            },
                            "isSuccessful":{
                                "type":"string",
                                "description":"Whether deleting this member was successful. (1) indicates success, (0) indicates failure."
                            },
                            "provisioningStatus":{
                                "type":"string",
                                "description":"<p>Provisioning status for the user:</p><p><ul><li><b>active:</b> An active user that has been assigned an Oracle Content Management application role</li><li><b>inactive:</b> A user that currently has no Content Management application roles assigned.</li><li><b>deleted:</b> A user that no longer exists in the IAM/IDCS identity domain.</li><li><b>pending:</b> An external user that was invited but does not exist in the IAM/IDCS identity domain yet.</li></ul></p><p>Not returned if the type is <code>group</code>.</p>"
                            }
                        }
                    }
                }
            }
        },
        "CollectionCreateBody":{
            "description":"<p>Description of fields available to create a metadata collection.</p>",
            "required":[
                "fields"
            ],
            "properties":{
                "fields":{
                    "type":"string",
                    "description":"<p>One or more field names separated by commas. You can add and remove fields after the collection is created. Field names must be unique within the collection. All fields will be of type <code>text</code>.</p><p>The following restrictions apply to collection and field names:<ul><li>Collection and field names can&#39;t start or end with a space.</li><li>The combined length of the collection and field name can&#39;t exceed 240 characters.</li><li>Collection and field names aren&#39;t case-sensitive; that is, <code>Field Name</code> and <code>field name</code> are considered identical.</li></ul></p><p>Don&#39;t use the following characters in collection or field names:</p><p><table> <tr><td>&nbsp;&#47;</td><td>&nbsp;&#92;</td><td>&nbsp;&#60;</td><td>&nbsp;&#62;</td><td>&nbsp;&#91;</td><td>&nbsp;&#93;</td><td>&nbsp;&#123;</td><td>&nbsp;&#125;</td><td>&nbsp;&#61;</td><td>&nbsp;$</td><td>&nbsp;%</td></tr><tr><td>&nbsp;&#39;</td><td>&nbsp;&#42;</td><td>&nbsp;&#34;</td><td>&nbsp;&#63;</td><td>&nbsp;&#58;</td><td>&nbsp;&#35;</td><td>&nbsp;&#38;</td><td>&nbsp;&#94;</td><td>&nbsp;&#46;</td><td>&nbsp;&#44;</td><td>&nbsp;&#124;</td></tr></table></p><p>The following strings are also not allowed in collection or field names:</p></p><ul><li>NUL</li><li>NULL</li><li>xSystem</li><li>xUser</li><li>xAF</li><li>dMetadataUnitID</li><li>dParentMetadataUnitID</li><li>dMetadataInheritLevel</li><li>dAssignedMetaCollection</li><li>dMetaCollection</li><li>dMetaCollections</li><li>dMetadataCollectionID</li><li>dMetadataID</li></ul></p>",
                    "maxLength":240
                },
                "fieldsArray":{
                    "type":"array",
                    "description":"Can be used instead of <code>fields</code> parameter if more granular control over created fields is desired. If both <code>fields</code> and <code>fieldsArray</code> are supplied, then the former will be ignored.",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"Field names as described for <code>fields</code> input parameter."
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"<p>Type of the field.</p> <p>Possible values are:<ul><li>text (default)</li><li>number</li><li>date</li><li>boolean</li></ul></p>"
                            },
                            "fieldDescription":{
                                "type":"string",
                                "description":"Description of the field."
                            },
                            "defaultValue":{
                                "type":"string",
                                "description":"Default value of the field. If the <code>fieldType</code> is <code>date</code>, the value should be in the <code>yyyy-mm-ddThh:mm:ss</code> form. For <code>boolean</code> types, valid values should be (1) for <code>true</code> and (0) for <code>false</code>."
                            }
                        }
                    }
                }
            }
        },
        "CollectionCreateResponse":{
            "description":"<p>Description of fields available in the create metadata collection response.</p>",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "CollectionEditBody":{
            "description":"<p>Description of fields available to edit fields in a metadata collection request. There are no required attributes.</p>",
            "properties":{
                "addFields":{
                    "type":"string",
                    "description":"<p>Add one or more field names, separated by commas. You can add and remove fields after the collection is created. Field names must be unique within the collection. </p><p>The following restrictions apply to collection and field names:<ul><li>Collection and field names can&#39;t start or end with a space.</li><li>The combined length of the collection and field name can&#39;t exceed 240 characters.</li><li>Collection and file names aren&#39;t case-sensitive; that is, <code>Field Name</code> and <code>field name</code> are considered identical.</li></ul></p><p>Don&#39;t use the following characters in collection or field names:</p><p><table> <tr><td>&nbsp;&#47;</td><td>&nbsp;&#92;</td><td>&nbsp;&#60;</td><td>&nbsp;&#62;</td><td>&nbsp;&#91;</td><td>&nbsp;&#93;</td><td>&nbsp;&#123;</td><td>&nbsp;&#125;</td><td>&nbsp;&#61;</td><td>&nbsp;$</td><td>&nbsp;%</td></tr><tr><td>&nbsp;&#39;</td><td>&nbsp;&#42;</td><td>&nbsp;&#34;</td><td>&nbsp;&#63;</td><td>&nbsp;&#58;</td><td>&nbsp;&#35;</td><td>&nbsp;&#38;</td><td>&nbsp;&#94;</td><td>&nbsp;&#46;</td><td>&nbsp;&#44;</td><td>&nbsp;&#124;</td></tr></table></p><p>The following strings are also not allowed in collection or field names:</p></p><ul><li>NUL</li><li>NULL</li><li>xSystem</li><li>xUser</li><li>xAF</li><li>dMetadataUnitID</li><li>dParentMetadataUnitID</li><li>dMetadataInheritLevel</li><li>dAssignedMetaCollection</li><li>dMetaCollection</li><li>dMetaCollections</li><li>dMetadataCollectionID</li><li>dMetadataID</li></ul></p>"
                },
                "addFieldsArray":{
                    "type":"array",
                    "description":"Can be used instead of <code>addFields</code> parameter if more granular control over added fields is desired. If both <code>addFields</code> and <code>addFieldsArray</code> are supplied, then the former will be ignored.",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"Field names as described for <code>addFields</code> input parameter."
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"<p>Type of the field.</p> <p>Possible values are:<ul><li>text (default)</li><li>number</li><li>date</li><li>boolean</li></ul></p>"
                            },
                            "fieldDescription":{
                                "type":"string",
                                "description":"Description of the field."
                            },
                            "defaultValue":{
                                "type":"string",
                                "description":"Default value of the field. If the <code>fieldType</code> is <code>date</code>, the value should be in the <code>yyyy-mm-ddThh:mm:ss</code> form. For <code>boolean</code> types, valid values should be (1) for <code>true</code> and (0) for <code>false</code>."
                            }
                        }
                    }
                },
                "removeFields":{
                    "type":"string",
                    "description":"Specify the names of one or more fields to delete, separated by commas."
                },
                "settings":{
                    "type":"string",
                    "description":"<p>Enable or disable a metadata collection.</p><p>Possible values are:<ul><li>enable</li><li>disable</li></ul></p>"
                }
            }
        },
        "CollectionEditResponse":{
            "description":"The response body includes information about edit fields in a metadata collection operation.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "CollectionGetResponse":{
            "description":"The response body includes information about a metadata collection definition.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "isEnabled":{
                    "type":"string",
                    "description":"Metadata collection enable (<code>1</code>) or disable (<code>0</code>) status."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>collection</code>."
                },
                "items":{
                    "type":"array",
                    "description":"List of field definitions.",
                    "items":{
                        "$ref":"#/definitions/CollectionFieldDefinition"
                    }
                }
            }
        },
        "CollectionDeleteResponse":{
            "description":"The response body includes information about deleting a metadata collection.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "CollectionFieldEditBody":{
            "description":"The request body defines details of the enable/disable fields in a metadata collection request.",
            "properties":{
                "fields":{
                    "type":"string",
                    "description":"Field names, separated by commas."
                },
                "settings":{
                    "type":"string",
                    "description":"<p>Enable or disable metadata fields specified in fields.</p><p>Possible values are:<ul><li>enable</li><li>disable</li></ul></p>"
                },
                "fieldsArray":{
                    "type":"array",
                    "description":"Can be used instead of <code>fields</code> and <code>settings</code> parameters if field definitions need to change in addition to or instead of enabling or disabling the fields.",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"Field names as described for <code>fields</code> input parameter."
                            },
                            "fieldDescription":{
                                "type":"string",
                                "description":"Description of the field."
                            },
                            "defaultValue":{
                                "type":"string",
                                "description":"Default value of the field. If the <code>fieldType</code> is <code>date</code>, the value should be in the <code>yyyy-mm-ddThh:mm:ss</code> form. For <code>boolean</code> types, valid values should be (1) for <code>true</code> and (0) for <code>false</code>."
                            },
                            "isEnabled":{
                                "type":"boolean",
                                "description":"Enable (1) or disable (0) metadata field. Overrides <code>settings</code> value for this field."
                            }
                        }
                    }
                }
            }
        },
        "AvailableCollectionsRequestBody":{
            "description":"The request body defines details of the get all available collections request.",
            "properties":{
                "retrieveFields":{
                    "type":"number",
                    "description":"Retrieve only collections (<code>0</code>) or retrieve collections and respective field definitions (<code>1</code>)."
                }
            }
        },
        "AllAvailableCollectionsResponse":{
            "description":"The response body includes information about all available collections for the current user.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "metadataCollections":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CollectionDefinition"
                    }
                }
            }
        },
        "GetSearchableMetadataResponse":{
            "description":"The response body includes information about all metadata fields available for search purposes.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "number":{
                    "type":"number",
                    "description":"Number of searchable metadata fields retrieved."
                },
                "fields":{
                    "type":"string",
                    "description":"Comma-separated list of searchable metadata fields prefixed with their respective collection name."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>metadata</code>."
                }
            }
        },
        "SetSearchableMetadataRequestBody":{
            "description":"Description of fields available to set searchable metadata fields.",
            "properties":{
                "collection":{
                    "type":"string",
                    "description":"Metadata collection name."
                },
                "fields":{
                    "type":"string",
                    "description":"Comma-separated list of metadata fields to be set as searchable."
                }
            },
            "required":[
                "collection",
                "fields"
            ]
        },
        "SetSearchableMetadataResponse":{
            "description":"The response body confirms if the request was successful.",
            "properties":{
                "errorCode":{
                    "type":"number",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "PublicLinkDefinition":{
            "description":"Public link information.",
            "properties":{
                "linkID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the public link."
                },
                "linkName":{
                    "type":"string",
                    "description":"Name of the public link."
                },
                "assignedUsers":{
                    "type":"string",
                    "description":"The group of users who can use the link."
                },
                "role":{
                    "type":"string",
                    "description":"Access level for the shared item.",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor"
                    ]
                },
                "password":{
                    "type":"string",
                    "description":"Password for the public link. Use a minimum of 8 characters and a maximum of 50 characters. Passwords are case-sensitive."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>publiclink</code>."
                },
                "createdTime":{
                    "type":"string",
                    "description":"Date and time when the public link was created."
                },
                "expirationTime":{
                    "type":"string",
                    "description":"Date and time when the public link expires."
                },
                "lastModifiedTime":{
                    "type":"string",
                    "description":"Date and time when the public link was last modified."
                },
                "ownedBy":{
                    "$ref":"#/definitions/User"
                }
            }
        },
        "PublicLinkCreateResponse":{
            "description":"The response body includes information about the newly created public link.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/PublicLinkDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder or file."
                }
            }
        },
        "PublicLinkGetResponse":{
            "description":"The response body includes information about the public link.",
            "type":"object",
            "allOf":[
                {
                    "$ref":"#/definitions/PublicLinkDefinition"
                }
            ],
            "properties":{
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        },
        "PublicLinkBody":{
            "description":"The request body defines details of the create public link request. <b>Bold</b> indicates a required value.",
            "properties":{
                "assignedUsers":{
                    "type":"string",
                    "description":"<p>The group of users who can use the link.</p><p><ul><li>Comma-separated list of users (any of user ID, login name, or email address).</li><li>@serviceinstance: Users with an account can access the resource with the privileges specified by the role.</li><li>@everybody: Any user can access the resource with the privileges specified by the role.</li></ul></p>"
                },
                "expirationTime":{
                    "type":"string",
                    "description":"<p>Date and time when the public link expires, in the form <code>yyyy-mm-ddThh:mm:ss</code>. <pre>For example, 2017-01-01T00:00:01.</pre><p></p>If you do not specify an expiration time, the link is valid until you delete the link.</p>"
                },
                "password":{
                    "type":"string",
                    "description":"Password for the public link. Use a minimum of 8 characters and a maximum of 50 characters. If you do not specify a password, no password is required to use the link."
                },
                "linkName":{
                    "type":"string",
                    "description":"Name of the public link. Although the link name is optional, you can have only one unnamed public link for a resource."
                },
                "role":{
                    "type":"string",
                    "description":"<p>Access level for the shared item.</p><p><b>Note:</b></p><p>Although the default role is viewer, the API user&#39;s preference setting for the default role for public links can override this default with a different value. It is best practice to explicitly set the role with the service call.</p><p>You can grant the specified user any standard role except manager or owner:<ul><li><b>Viewer:</b> Viewers can look at files and folders, but can&#39;t change things.</li><li><b>Downloader:</b> Downloaders can also download files and save them to their own computer.</li><li><b>Contributor:</b> Contributors can also modify files, update files, upload new files, and delete files.</li></ul></p>",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor"
                    ]
                }
            },
            "required":[
                "assignedUsers"
            ]
        },
        "PublicLinkEditBody":{
            "description":"The request body defines details of the edit public link request. There are no required attributes.",
            "properties":{
                "assignedUsers":{
                    "type":"string",
                    "description":"<p>The group of users who can use the link.</p><p><ul><li>Comma-separated list of users (any of user ID, login name, or email address).</li><li>@serviceinstance: Users with an account can access the resource with the privileges specified by the role.</li><li>@everybody: Any user can access the resource with the privileges specified by the role</li></ul></p>"
                },
                "expirationTime":{
                    "type":"string",
                    "description":"<p>Date and time when the public link expires, in the form <code>yyyy-mm-ddThh:mm:ss</code>. <pre>For example, 2017-01-01T00:00:01.</pre><p></p>If you do not specify an expiration time, the link is valid until you delete the link.</p>"
                },
                "password":{
                    "type":"string",
                    "description":"Password for the public link. Use a minimum of 8 characters and a maximum of 50 characters. If you do not specify a password, no password is required to use the link."
                },
                "role":{
                    "type":"string",
                    "description":"<p>Access level for the shared item.</p><p><b>Note:</b></p><p>Although the default role is viewer, the API user&#39;s preference setting for the default role for public links can override this default with a different value. It is best practice to explicitly set the role with the service call.</p><p>You can grant the specified user any standard role except manager or owner:<ul><li><b>Viewer:</b> Viewers can look at files and folders, but can&#39;t change things.</li><li><b>Downloader:</b> Downloaders can also download files and save them to their own computer.</li><li><b>Contributor:</b> Contributors can also modify files, update files, upload new files, and delete files.</li></ul></p>",
                    "enum":[
                        "viewer",
                        "downloader",
                        "contributor"
                    ]
                }
            }
        },
        "FolderLinksResponse":{
            "description":"The response body includes information about public links defined for the specified folder.",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the folder."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>folder</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"List of public links.",
                    "items":{
                        "$ref":"#/definitions/PublicLinkDefinition"
                    }
                }
            }
        },
        "FileLinksResponse":{
            "description":"The response body includes information about public links defined for the specified file.",
            "properties":{
                "count":{
                    "type":"string",
                    "description":"The number of items listed on the page."
                },
                "id":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the file."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>file</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                },
                "items":{
                    "type":"array",
                    "description":"List of public links.",
                    "items":{
                        "$ref":"#/definitions/PublicLinkDefinition"
                    }
                }
            }
        },
        "PublicLinkDeleteResponse":{
            "description":"The response body includes information about the deleted public link.",
            "properties":{
                "linkID":{
                    "type":"string",
                    "description":"Globally unique identifier (GUID) for the public link."
                },
                "type":{
                    "type":"string",
                    "description":"Item type <code>publiclink</code>."
                },
                "errorCode":{
                    "type":"string",
                    "description":"An error code of zero (0) indicates no errors."
                }
            }
        }
    },
    "tags":[
        {
            "name":"Applinks",
            "description":"The Applinks API provides basic applink operations."
        },
        {
            "name":"Catalog",
            "description":"The Catalog API provides information about what resources are available for a particular version."
        },
        {
            "name":"Client Applications",
            "description":"The operations from the Client Applications category."
        },
        {
            "name":"Configuration",
            "description":"The Configuration API provides basic configuration operations."
        },
        {
            "name":"Files",
            "description":"The Files API provides basic file operations."
        },
        {
            "name":"Folders",
            "description":"The Folders API provides basic folder operations."
        },
        {
            "name":"Metadata Collection",
            "description":"The operations from the Metadata Collection category."
        },
        {
            "name":"Publiclinks",
            "description":"The Publiclinks API provides basic public links operations"
        },
        {
            "name":"Shares",
            "description":"The Shares API provides basic sharing operations."
        },
        {
            "name":"Sites",
            "description":"The Sites API provides basic site operations."
        },
        {
            "name":"Templates",
            "description":"The Templates API provides basic template operations."
        },
        {
            "name":"Users",
            "description":"The Users API provides basic information about users to identify them for folder and file sharing purposes."
        }
    ]
}